# CLI Command Database
# Generated from cheat/cheatsheets repository

- command: "ab -n 100 -c 50 <url>"
  description: "send 100 requests with a concurency of 50 requests to a URL"
  keywords: ["ab", "send", "100", "requests", "concurency", "url"]
  platform: [linux, macos]
  pipeline: false

- command: "ab -t 30 -c 50 <url>"
  description: "send requests for 30 seconds with a concurency of 50 requests to a URL"
  keywords: ["ab", "send", "requests", "seconds", "concurency", "url"]
  platform: [linux, macos]
  pipeline: false

- command: "ag <phrase> --ignore-dir=<dir>"
  description: "exclude a directory from a search"
  keywords: ["ag", "exclude", "directory", "search"]
  platform: [linux, macos]
  pipeline: false

- command: "ag <phrase> --ignore=<file>"
  description: "exclude a file from a search"
  keywords: ["ag", "exclude", "file", "search"]
  platform: [linux, macos]
  pipeline: false

- command: "ag <phrase> --color | less -R"
  description: "force colorization"
  keywords: ["ag", "force", "colorization"]
  platform: [linux, macos]
  pipeline: true

- command: "ag <phrase> -G <pattern>"
  description: "search for <phrase> in files whose names match <pattern>"
  keywords: ["ag", "search", "<phrase>", "files", "whose", "names", "match", "<pattern>"]
  platform: [linux, macos]
  pipeline: false

- command: "alias"
  description: "show a list of your current shell aliases"
  keywords: ["alias", "show", "list", "your", "current", "shell", "aliases"]
  platform: [linux, macos]
  pipeline: false

- command: "alias ll='ls -l'"
  description: "alias `ls -l` to `ll`"
  keywords: ["alias", "`ls", "-l`", "`ll`"]
  platform: [linux, macos]
  pipeline: false

- command: "unalias ll"
  description: "remove alias"
  keywords: ["alias", "remove"]
  platform: [linux, macos]
  pipeline: false

- command: "ansible -u ansible -i inventory.yml servers -m shell -a \"ls /var\""
  description: "run a command on multiple instances at once - using `servers` group from `inventory.yml`"
  keywords: ["ansible", "orchestration", "run", "command", "multiple", "instances", "once", "using", "`servers`", "group", "`inventory.yml`"]
  platform: [linux, macos]
  pipeline: false

- command: "ansible-galaxy install <user>.<role>"
  description: "install a role"
  keywords: ["ansible-galaxy", "orchestration", "install", "role"]
  platform: [linux, macos]
  pipeline: false

- command: "ansible-galaxy remove <user>.<role>"
  description: "remove a role"
  keywords: ["ansible-galaxy", "orchestration", "remove", "role"]
  platform: [linux, macos]
  pipeline: false

- command: "ansible-galaxy list"
  description: "list installed roles"
  keywords: ["ansible-galaxy", "orchestration", "list", "installed", "roles"]
  platform: [linux, macos]
  pipeline: false

- command: "ansible-galaxy search <role>"
  description: "search for a given role"
  keywords: ["ansible-galaxy", "orchestration", "search", "given", "role"]
  platform: [linux, macos]
  pipeline: false

- command: "ansible-galaxy init <role>"
  description: "create a new role"
  keywords: ["ansible-galaxy", "orchestration", "create", "new", "role"]
  platform: [linux, macos]
  pipeline: false

- command: "ansible-galaxy role info <user>.<role>"
  description: "get the information for the role # or a collection if you replace `role` with `collection`"
  keywords: ["ansible-galaxy", "orchestration", "get", "information", "role", "collection", "you", "replace", "`role`", "`collection`"]
  platform: [linux, macos]
  pipeline: false

- command: "ansible-vault encrypt_string 'SupersecretPa$$phrase' --name 'backup_encryption_key'"
  description: "enncrypt string using keyfile `backup_encryption_key`"
  keywords: ["ansible-vault", "orchestration", "enncrypt", "string", "using", "keyfile", "`backup_encryption_key`"]
  platform: [linux, macos]
  pipeline: false

- command: "apachectl configtest"
  description: "test Apache configuration file syntax"
  keywords: ["apachectl", "apache", "httpd", "test", "configuration", "file", "syntax"]
  niche: "web-server"
  platform: [linux, macos]
  pipeline: false

- command: "apk add <package>"
  description: "install a package"
  keywords: ["apk", "packaging", "install", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "apk del <package>"
  description: "remove a package"
  keywords: ["apk", "packaging", "remove", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "apk update"
  description: "update repos"
  keywords: ["apk", "packaging", "update", "repos"]
  platform: [linux, macos]
  pipeline: false

- command: "apk upgrade"
  description: "upgrade  all packages"
  keywords: ["apk", "packaging", "upgrade", "all", "packages"]
  platform: [linux, macos]
  pipeline: false

- command: "apk search <package>"
  description: "find a package"
  keywords: ["apk", "packaging", "find", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo aa-enforce usr.bin.firefox"
  description: "activate a profile"
  keywords: ["apparmor", "activate", "profile"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo aa-disable usr.bin.firefox"
  description: "disable a profile"
  keywords: ["apparmor", "disable", "profile"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo aa-status"
  description: "list profiles loaded"
  keywords: ["apparmor", "list", "profiles", "loaded"]
  platform: [linux, macos]
  pipeline: false

- command: "apt search <phrase>"
  description: "find packages matching <phrase>"
  keywords: ["apt", "packaging", "find", "packages", "matching", "<phrase>"]
  platform: [linux, macos]
  pipeline: false

- command: "apt show <package>"
  description: "show information on a package"
  keywords: ["apt", "packaging", "show", "information", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "apt update"
  description: "fetch package list"
  keywords: ["apt", "packaging", "fetch", "package", "list"]
  platform: [linux, macos]
  pipeline: false

- command: "apt upgrade"
  description: "download and install the updates and (UNLIKE apt-get) install new necessary packages"
  keywords: ["apt", "packaging", "download", "install", "updates", "(unlike", "apt-get)", "new", "necessary", "packages"]
  platform: [linux, macos]
  pipeline: false

- command: "apt dist-upgrade"
  description: "download and install the updates AND install new necessary packages"
  keywords: ["apt", "packaging", "download", "install", "updates", "new", "necessary", "packages"]
  platform: [linux, macos]
  pipeline: false

- command: "apt update && apt upgrade # use dist-upgrade carefully if needed"
  description: "perform a full system upgrade"
  keywords: ["apt", "packaging", "perform", "full", "system", "upgrade"]
  platform: [linux, macos]
  pipeline: false

- command: "apt install <package>..."
  description: "install package(s)"
  keywords: ["apt", "packaging", "install", "package(s)"]
  platform: [linux, macos]
  pipeline: false

- command: "apt remove <package>..."
  description: "uninstall package(s)"
  keywords: ["apt", "packaging", "uninstall", "package(s)"]
  platform: [linux, macos]
  pipeline: false

- command: "apt autoremove"
  description: "remove automatically all unused packages"
  keywords: ["apt", "packaging", "remove", "automatically", "all", "unused", "packages"]
  platform: [linux, macos]
  pipeline: false

- command: "apt depends <package>..."
  description: "list dependencies of a package"
  keywords: ["apt", "packaging", "list", "dependencies", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "apt purge <package>..."
  description: "remove packages and delete their config files"
  keywords: ["apt", "packaging", "remove", "packages", "delete", "their", "config", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "apt list --installed"
  description: "list all packages installed"
  keywords: ["apt", "packaging", "list", "all", "packages", "installed"]
  platform: [linux, macos]
  pipeline: false

- command: "apt-cache search <phrase>"
  description: "find packages matching <phrase>"
  keywords: ["apt-cache", "packaging", "find", "packages", "matching", "<phrase>"]
  platform: [linux, macos]
  pipeline: false

- command: "apt-cache show <package>..."
  description: "display package records for the named package(s)"
  keywords: ["apt-cache", "packaging", "display", "package", "records", "named", "package(s)"]
  platform: [linux, macos]
  pipeline: false

- command: "apt-cache rdepends <package>"
  description: "display reverse dependencies of a package"
  keywords: ["apt-cache", "packaging", "display", "reverse", "dependencies", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "apt-cache showpkg <package>"
  description: "display package versions, reverse dependencies and forward dependencies of"
  keywords: ["apt-cache", "packaging", "display", "package", "versions", "reverse", "dependencies", "forward"]
  platform: [linux, macos]
  pipeline: false

- command: "apt-cache policy <package>"
  description: "display package installation status and what version is available from"
  keywords: ["apt-cache", "packaging", "display", "package", "installation", "status", "what", "version", "available"]
  platform: [linux, macos]
  pipeline: false

- command: "apt-get update"
  description: "fetch package list"
  keywords: ["apt-get", "packaging", "fetch", "package", "list"]
  platform: [linux, macos]
  pipeline: false

- command: "apt-get upgrade"
  description: "download and install package updates"
  keywords: ["apt-get", "packaging", "download", "install", "package", "updates"]
  platform: [linux, macos]
  pipeline: false

- command: "apt-get dist-upgrade"
  description: "download and install the updates AND install new necessary packages"
  keywords: ["apt-get", "packaging", "download", "install", "updates", "new", "necessary", "packages"]
  platform: [linux, macos]
  pipeline: false

- command: "apt-get install <package>..."
  description: "install a new package(s)"
  keywords: ["apt-get", "packaging", "install", "new", "package(s)"]
  platform: [linux, macos]
  pipeline: false

- command: "apt-get download <package>"
  description: "download a package without installing it. (The package will be downloaded in your current working dir)"
  keywords: ["apt-get", "packaging", "download", "package", "without", "installing", "(the", "downloaded", "your", "current", "working", "dir)"]
  platform: [linux, macos]
  pipeline: false

- command: "apt-get -o Dir::Cache=\"/path/to/destination/dir/\" -o Dir::Cache::archives=\"./\" install ..."
  description: "change cache dir and archive dir (where .deb are stored)"
  keywords: ["apt-get", "packaging", "change", "cache", "dir", "archive", "(where", "deb", "stored)"]
  platform: [linux, macos]
  pipeline: false

- command: "grep 'install ' /var/log/dpkg.log"
  description: "show apt-get installed packages"
  keywords: ["apt-get", "packaging", "show", "installed", "packages"]
  platform: [linux, macos]
  pipeline: false

- command: "apt-get update -o DPkg::Options::='--force-confold' ..."
  description: "silently keep old configuration during batch updates"
  keywords: ["apt-get", "packaging", "silently", "keep", "old", "configuration", "during", "batch", "updates"]
  platform: [linux, macos]
  pipeline: false

- command: "aptitude search <phrase>"
  description: "find packages matching <phrase>"
  keywords: ["aptitude", "packaging", "find", "packages", "matching", "<phrase>"]
  platform: [linux, macos]
  pipeline: false

- command: "aptitude show <package>..."
  description: "display package records for the named package(s)"
  keywords: ["aptitude", "packaging", "display", "package", "records", "named", "package(s)"]
  platform: [linux, macos]
  pipeline: false

- command: "aptitude install <package>..."
  description: "install package(s)"
  keywords: ["aptitude", "packaging", "install", "package(s)"]
  platform: [linux, macos]
  pipeline: false

- command: "aptitude remove <package>..."
  description: "remove package(s)"
  keywords: ["aptitude", "packaging", "remove", "package(s)"]
  platform: [linux, macos]
  pipeline: false

- command: "aptitude autoclean"
  description: "remove unnecessary package"
  keywords: ["aptitude", "packaging", "remove", "unnecessary", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "aria2c <url>"
  description: "download a file"
  keywords: ["aria2c", "download", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "aria2c --follow-torrent=mem <url>"
  description: "prevent downloading the .torrent file"
  keywords: ["aria2c", "prevent", "downloading", "torrent", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "figlet Cheat"
  description: "show some text in ASCII Art"
  keywords: ["asciiart", "show", "some", "text", "ascii", "art"]
  platform: [linux, macos]
  pipeline: false

- command: "toilet -F border Cheat"
  description: "have some text with color and other options"
  keywords: ["asciiart", "have", "some", "text", "color", "other", "options"]
  platform: [linux, macos]
  pipeline: false

- command: "asterisk -rvvv"
  description: "connect to a running Asterisk session"
  keywords: ["asterisk", "connect", "running", "session"]
  platform: [linux, macos]
  pipeline: false

- command: "asterisk -rx \"<command>\""
  description: "issue a command to Asterisk from the shell"
  keywords: ["asterisk", "issue", "command", "shell"]
  platform: [linux, macos]
  pipeline: false

- command: "asterisk -rx \"channel originate SIP/<trunk>/<number> application echo\""
  description: "originate an echo call from a SIP trunk on an Asterisk server, to a specified number"
  keywords: ["asterisk", "originate", "echo", "call", "sip", "trunk", "server", "specified", "number"]
  platform: [linux, macos]
  pipeline: false

- command: "asterisk -rx \"sip show peers\""
  description: "print out the details of SIP accounts"
  keywords: ["asterisk", "print", "out", "details", "sip", "accounts"]
  platform: [linux, macos]
  pipeline: false

- command: "asterisk -rx \"sip show users\""
  description: "print out the passwords of SIP accounts"
  keywords: ["asterisk", "print", "out", "passwords", "sip", "accounts"]
  platform: [linux, macos]
  pipeline: false

- command: "asterisk -rx \"core show channels\""
  description: "print out the current active channels"
  keywords: ["asterisk", "print", "out", "current", "active", "channels"]
  platform: [linux, macos]
  pipeline: false

- command: "at <time>"
  description: "schedule a one time task"
  keywords: ["at", "schedule", "one", "time", "task"]
  platform: [linux, macos]
  pipeline: false

- command: "atq"
  description: "list pending jobs"
  keywords: ["at", "list", "pending", "jobs"]
  platform: [linux, macos]
  pipeline: false

- command: "atrm <id>"
  description: "remove a job (use id from atq)"
  keywords: ["at", "remove", "job", "(use", "atq)"]
  platform: [linux, macos]
  pipeline: false

- command: "service auditd start/restart/stop"
  description: "start/restart/stop auditd"
  keywords: ["auditd", "security", "start/restart/stop"]
  platform: [linux, macos]
  pipeline: false

- command: "auditctl -l"
  description: "list active audit rules"
  keywords: ["auditd", "security", "list", "active", "audit", "rules"]
  platform: [linux, macos]
  pipeline: false

- command: "auditctl -w <File to watch> -p <permission r/w/x/a> -k <Identifier>"
  description: "create a watch rule for a file for audit purposes temporarily"
  keywords: ["auditd", "security", "create", "watch", "rule", "file", "audit", "purposes", "temporarily"]
  platform: [linux, macos]
  pipeline: false

- command: "vim /etc/audit/rules.d/audit.rules"
  description: "make watch rules permanently"
  keywords: ["auditd", "security", "make", "watch", "rules", "permanently"]
  platform: [linux, macos]
  pipeline: false

- command: "ausearch -i -k <Identifier>"
  description: "search after a identifier"
  keywords: ["auditd", "security", "search", "after", "identifier"]
  platform: [linux, macos]
  pipeline: false

- command: "aureport --help"
  description: "create a report and get the options"
  keywords: ["auditd", "security", "create", "report", "get", "options"]
  platform: [linux, macos]
  pipeline: false

- command: "printf '1\n2\n3\n' | awk '{ sum += $1} END {print sum}'"
  description: "sum integers from a file or stdin, one integer per line"
  keywords: ["awk", "sum", "integers", "file", "stdin", "one", "integer", "per", "line"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: true

- command: "printf '1:2:3' | awk -F \":\" '{print $1+$2+$3}'"
  description: "use a specific character as separator to sum integers from a file or stdin"
  keywords: ["awk", "use", "specific", "character", "separator", "sum", "integers", "file", "stdin"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: true

- command: "seq 9 | sed 'H;g' | awk -v RS='' '{for(i=1;i<=NF;i++)printf(\"%dx%d=%d%s\", i, NR, i*NR, i==NR?\"\n\":\"\t\")}'"
  description: "print a multiplication table"
  keywords: ["awk", "print", "multiplication", "table"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: true

- command: "printf '1 2 3' | awk 'BEGIN {OFS=\":\"}; {print $1,$2,$3}'"
  description: "specify an output separator character"
  keywords: ["awk", "specify", "output", "separator", "character"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: true

- command: "printf \"george jetson\nolive oyl\nbeetle bailey\" | awk '$2==\"bailey\"{print $0}'"
  description: "execute commands only on rows that satisfy a certain condtion"
  keywords: ["awk", "execute", "commands", "only", "rows", "satisfy", "certain", "condtion"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: true

- command: "printf \"george jetson\nolive oyl\nbeetle bailey\" | awk '/ley$/{print $0}'"
  description: "execute commands only on matching rows using regex"
  keywords: ["awk", "execute", "commands", "only", "matching", "rows", "using", "regex"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: true

- command: "for file in *;"
  description: "implement a for loop"
  keywords: ["bash", "implement", "loop"]
  platform: [linux, macos]
  pipeline: false

- command: "case \"$1\""
  description: "implement a case command"
  keywords: ["bash", "implement", "case", "command"]
  platform: [linux, macos]
  pipeline: false

- command: "set -x"
  description: "turn on debugging"
  keywords: ["bash", "turn", "debugging"]
  platform: [linux, macos]
  pipeline: false

- command: "set +x"
  description: "turn off debugging"
  keywords: ["bash", "turn", "off", "debugging"]
  platform: [linux, macos]
  pipeline: false

- command: "( set -o noclobber; echo > my.lock ) || echo 'Failed to create lock file'"
  description: "create a lockfile"
  keywords: ["bash", "create", "lockfile"]
  platform: [linux, macos]
  pipeline: true

- command: "bosh deps --column=name"
  description: "list all BOSH deployments by name"
  keywords: ["bosh", "list", "all", "deployments", "name"]
  platform: [linux, macos]
  pipeline: false

- command: "bosh -d <deployment> vms --vitals"
  description: "list a BOSH deployment's VMs, showing vital resource usage"
  keywords: ["bosh", "list", "deployment's", "vms", "showing", "vital", "resource", "usage"]
  platform: [linux, macos]
  pipeline: false

- command: "bosh -d <deployment> ssh <instance-group>/(<instance-guid>|<instance-index>)"
  description: "SSH into a BOSH deployment VM"
  keywords: ["bosh", "ssh", "into", "deployment"]
  platform: [linux, macos]
  pipeline: true

- command: "bosh -d <deployment> ssh <instance-group> -c '<shell-command>'"
  description: "run a shell command, via SSH, on all BOSH deployment VMs of an instance group"
  keywords: ["bosh", "run", "shell", "command", "via", "ssh", "all", "deployment", "vms", "instance", "group"]
  platform: [linux, macos]
  pipeline: false

- command: "bosh -d <deployment> errands"
  description: "list a BOSH deployment's errands"
  keywords: ["bosh", "list", "deployment's", "errands"]
  platform: [linux, macos]
  pipeline: false

- command: "bosh -d <deployment> run-errand <errand-name>"
  description: "run a BOSH deployment errand"
  keywords: ["bosh", "run", "deployment", "errand"]
  platform: [linux, macos]
  pipeline: false

- command: "bosh -d <deployment> tasks"
  description: "list a BOSH deployment's tasks"
  keywords: ["bosh", "list", "deployment's", "tasks"]
  platform: [linux, macos]
  pipeline: false

- command: "bosh -d <deployment> task <task-id>"
  description: "show a BOSH deployment's task status and start tracking its output"
  keywords: ["bosh", "show", "deployment's", "task", "status", "start", "tracking", "output"]
  platform: [linux, macos]
  pipeline: false

- command: "bosh -d <deployment> recreate <instance-group>/(<instance-guid>|<instance-index>)"
  description: "recreate a BOSH deployment's VM"
  keywords: ["bosh", "recreate", "deployment's"]
  platform: [linux, macos]
  pipeline: true

- command: "bower install <package>"
  description: "install a package"
  keywords: ["bower", "packaging", "install", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "bower install <user>/<repo>"
  description: "install a package from github"
  keywords: ["bower", "packaging", "install", "package", "github"]
  platform: [linux, macos]
  pipeline: false

- command: "bower install <package>#<version>"
  description: "install a specific package locally"
  keywords: ["bower", "packaging", "install", "specific", "package", "locally"]
  platform: [linux, macos]
  pipeline: false

- command: "bower install <package> --save"
  description: "install a package locally and save installed package into bower.json"
  keywords: ["bower", "packaging", "install", "package", "locally", "save", "installed", "into", "bower.json"]
  platform: [linux, macos]
  pipeline: false

- command: "bower info <package>"
  description: "retrieve info of a particular package"
  keywords: ["bower", "packaging", "retrieve", "info", "particular", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "bower list"
  description: "list local packages"
  keywords: ["bower", "packaging", "list", "local", "packages"]
  platform: [linux, macos]
  pipeline: false

- command: "bower search <package>"
  description: "search for a package by name"
  keywords: ["bower", "packaging", "search", "package", "name"]
  platform: [linux, macos]
  pipeline: false

- command: "bower update <package>"
  description: "update a package to their newest version"
  keywords: ["bower", "packaging", "update", "package", "their", "newest", "version"]
  platform: [linux, macos]
  pipeline: false

- command: "bower uninstall <package>"
  description: "remove a local package"
  keywords: ["bower", "packaging", "remove", "local", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "bzip2 -z foo"
  description: "compress a file (foo -> foo.bz2)"
  keywords: ["bzip2", "compression", "compress", "file", "(foo", "foo.bz2)"]
  platform: [linux, macos]
  pipeline: false

- command: "bzip2 -d foo.bz2"
  description: "decompress a file (foo.bz2 -> foo)"
  keywords: ["bzip2", "compression", "decompress", "file", "(foo.bz2", "foo)"]
  platform: [linux, macos]
  pipeline: false

- command: "bzip2 -zc foo > foo.bz2"
  description: "compress foo to stdout"
  keywords: ["bzip2", "compression", "compress", "foo", "stdout"]
  platform: [linux, macos]
  pipeline: false

- command: "bzip2 -dc foo.bz2"
  description: "decompress foo.bz2 to stdout"
  keywords: ["bzip2", "compression", "decompress", "foo.bz2", "stdout"]
  platform: [linux, macos]
  pipeline: false

- command: "cat <file>"
  description: "display the contents of a file"
  keywords: ["cat", "display", "contents", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "cat -n <file>"
  description: "display file contents with line numbers"
  keywords: ["cat", "display", "file", "contents", "line", "numbers"]
  platform: [linux, macos]
  pipeline: false

- command: "cat -b <file>"
  description: "display file contents with line numbers (blank lines excluded)"
  keywords: ["cat", "display", "file", "contents", "line", "numbers", "(blank", "lines", "excluded)"]
  platform: [linux, macos]
  pipeline: false

- command: "cheat <command>"
  description: "see example usage of a program"
  keywords: ["cheat", "see", "example", "usage", "program"]
  platform: [linux, macos]
  pipeline: false

- command: "cheat -e <command>"
  description: "edit a cheatsheet"
  keywords: ["cheat", "edit", "cheatsheet"]
  platform: [linux, macos]
  pipeline: false

- command: "cheat -l"
  description: "list available cheatsheets"
  keywords: ["cheat", "list", "available", "cheatsheets"]
  platform: [linux, macos]
  pipeline: false

- command: "cheat -s <command>"
  description: "search available cheatsheets"
  keywords: ["cheat", "search", "available", "cheatsheets"]
  platform: [linux, macos]
  pipeline: false

- command: "cheat -v"
  description: "get the current `cheat' version"
  keywords: ["cheat", "get", "current", "`cheat'", "version"]
  platform: [linux, macos]
  pipeline: false

- command: "cmp <path/to/file_1> <path/to/file_2>"
  description: "output the byte and line number of the first difference found between two files"
  keywords: ["cmp", "output", "byte", "line", "number", "first", "difference", "found", "between", "two", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "cmp -b <path/to/file_1> <path/to/file_2>"
  description: "output the first differing char between two files"
  keywords: ["cmp", "output", "first", "differing", "char", "between", "two", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "cmp -b --verbose <path/to/file_1> <path/to/file_2>"
  description: "output every difference between two files"
  keywords: ["cmp", "output", "every", "difference", "between", "two", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "cmp -i 100 <path/to/file_1> <path/to/file_2>"
  description: "compare two files starting after the first 100 bytes"
  keywords: ["cmp", "compare", "two", "files", "starting", "after", "first", "100", "bytes"]
  platform: [linux, macos]
  pipeline: false

- command: "cmp -n 200 <path/to/file_1> <path/to/file_2>"
  description: "limit to 200 the number of bytes to compare"
  keywords: ["cmp", "limit", "200", "number", "bytes", "compare"]
  platform: [linux, macos]
  pipeline: false

- command: "cmp --quiet <path/to/file_1> <path/to/file_2>"
  description: "compare two files with no output - only exit status"
  keywords: ["cmp", "compare", "two", "files", "output", "only", "exit", "status"]
  platform: [linux, macos]
  pipeline: false

- command: "conda env list"
  description: "list environments"
  keywords: ["conda", "packaging", "list", "environments"]
  platform: [linux, macos]
  pipeline: false

- command: "conda create --name <environment_name>"
  description: "initialise an environment"
  keywords: ["conda", "packaging", "initialise", "environment"]
  platform: [linux, macos]
  pipeline: false

- command: "conda create --name <environment_name> python=3.10"
  description: "initialise an environment with python3.10"
  keywords: ["conda", "packaging", "initialise", "environment", "python3.10"]
  platform: [linux, macos]
  pipeline: false

- command: "conda install --file <requirements.txt>"
  description: "install from a file"
  keywords: ["conda", "packaging", "install", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "conda create --clone <old_environment_name> --name <new_environment_name>"
  description: "clone an environment"
  keywords: ["conda", "packaging", "clone", "environment"]
  platform: [linux, macos]
  pipeline: false

- command: "conda activate <environment_name>"
  description: "activate a virtual environment"
  keywords: ["conda", "packaging", "activate", "virtual", "environment"]
  platform: [linux, macos]
  pipeline: false

- command: "conda deactivate"
  description: "deactivate a virtual environment"
  keywords: ["conda", "packaging", "deactivate", "virtual", "environment"]
  platform: [linux, macos]
  pipeline: false

- command: "conda env remove --name <environment_name>"
  description: "remove an environment"
  keywords: ["conda", "packaging", "remove", "environment"]
  platform: [linux, macos]
  pipeline: false

- command: "conda list --name <environment_name>"
  description: "list all packages in an environment"
  keywords: ["conda", "packaging", "list", "all", "packages", "environment"]
  platform: [linux, macos]
  pipeline: false

- command: "conda list"
  description: "list packages in an activated environment"
  keywords: ["conda", "packaging", "list", "packages", "activated", "environment"]
  platform: [linux, macos]
  pipeline: false

- command: "conda env export > <environment.yml>"
  description: "export an activated environment"
  keywords: ["conda", "packaging", "export", "activated", "environment"]
  platform: [linux, macos]
  pipeline: false

- command: "conda env export --from-history > <environment.yml>"
  description: "export an activated environment, listing only manually installed packages (no dependencies)"
  keywords: ["conda", "packaging", "export", "activated", "environment", "listing", "only", "manually", "installed", "packages", "(no", "dependencies)"]
  platform: [linux, macos]
  pipeline: false

- command: "convert original.jpg converted.pdf"
  description: "convert a file from jpg to pdf"
  keywords: ["convert", "file", "jpg", "pdf"]
  platform: [linux, macos]
  pipeline: false

- command: "convert original.jpg -resize 100x converted.jpg"
  description: "resize an image to a fixed width and proportional height"
  keywords: ["convert", "resize", "image", "fixed", "width", "proportional", "height"]
  platform: [linux, macos]
  pipeline: false

- command: "convert original.jpg -resize x100 converted.jpg"
  description: "resize an image to a fixed height and proportional width"
  keywords: ["convert", "resize", "image", "fixed", "height", "proportional", "width"]
  platform: [linux, macos]
  pipeline: false

- command: "convert original.jpg -resize 100x100 converted.jpg"
  description: "resize an image to a fixed width and height"
  keywords: ["convert", "resize", "image", "fixed", "width", "height"]
  platform: [linux, macos]
  pipeline: false

- command: "convert original.jpg -resize 100x converted.png"
  description: "resize an image and simultaneously change its file type"
  keywords: ["convert", "resize", "image", "simultaneously", "change", "file", "type"]
  platform: [linux, macos]
  pipeline: false

- command: "for file in `ls original/image/path/`;"
  description: "resize all of the images within a directory"
  keywords: ["convert", "resize", "all", "images", "within", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "convert -density 150 arch1.pdf -quality 80 'output.jpg'"
  description: "convert an N page pdf to N images (will autonumber)"
  keywords: ["convert", "page", "pdf", "images", "(will", "autonumber)"]
  platform: [linux, macos]
  pipeline: false

- command: "convert -density 150 arch1.pdf -quality 80 'output-%d.jpg'"
  description: "convert an N page pdf to N images with explicit filename formatting"
  keywords: ["convert", "page", "pdf", "images", "explicit", "filename", "formatting"]
  platform: [linux, macos]
  pipeline: false

- command: "cp ~/Desktop/foo.txt ~/Downloads/foo.txt"
  description: "copy a file"
  keywords: ["cp", "copy", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "cp -r ~/Desktop/cruise_pics/ ~/Pictures/"
  description: "copy a directory"
  keywords: ["cp", "copy", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "cp -i ~/Desktop/foo.txt ~/Documents/foo.txt"
  description: "create a copy but ask to overwrite if the destination file already exists"
  keywords: ["cp", "create", "copy", "but", "ask", "overwrite", "destination", "file", "already", "exists"]
  platform: [linux, macos]
  pipeline: false

- command: "cp foo.txt{,.\"$(date +%Y%m%d-%H%M%S)\"}"
  description: "create a backup file with date"
  keywords: ["cp", "create", "backup", "file", "date"]
  platform: [linux, macos]
  pipeline: false

- command: "cp -P <symlink-dir> <dest-dir>"
  description: "copy a symlink that points to a directory (and is thus soft) and not"
  keywords: ["cp", "copy", "symlink", "points", "directory", "(and", "thus", "soft)", "not"]
  platform: [linux, macos]
  pipeline: false

- command: "cp --sparse=always <src> <dest>"
  description: "copy sparsely"
  keywords: ["cp", "copy", "sparsely"]
  platform: [linux, macos]
  pipeline: false

- command: "cryptsetup open --type luks /dev/sdb1 backup"
  description: "open an encrypted partition /dev/sdb1 (reachable at /dev/mapper/backup)"
  keywords: ["cryptsetup", "open", "encrypted", "partition", "/dev/sdb1", "(reachable", "/dev/mapper/backup)"]
  platform: [linux, macos]
  pipeline: false

- command: "cryptsetup open --type luks --key-file hdd.key /dev/sdb1 hdd"
  description: "open an encrypted partition /dev/sdb1 using a keyfile (reachable at /dev/mapper/hdd)"
  keywords: ["cryptsetup", "open", "encrypted", "partition", "/dev/sdb1", "using", "keyfile", "(reachable", "/dev/mapper/hdd)"]
  platform: [linux, macos]
  pipeline: false

- command: "cryptsetup close hdd"
  description: "close luks container at /dev/mapper/hdd"
  keywords: ["cryptsetup", "close", "luks", "container", "/dev/mapper/hdd"]
  platform: [linux, macos]
  pipeline: false

- command: "csplit <file> '/PATTERN/'"
  description: "split a file based on a pattern"
  keywords: ["csplit", "split", "file", "based", "pattern"]
  platform: [linux, macos]
  pipeline: false

- command: "csplit -f 'prefix-' -b '%d.extension' <file> '/PATTERN/' '{*}'"
  description: "use prefix/suffix to improve output file names"
  keywords: ["csplit", "use", "prefix/suffix", "improve", "output", "file", "names"]
  platform: [linux, macos]
  pipeline: false

- command: "http://localhost:631 (in web browser)"
  description: "manage printers through CUPS"
  keywords: ["cups", "manage", "printers", "through"]
  platform: [linux, macos]
  pipeline: false

- command: "lp <file>"
  description: "print a file"
  keywords: ["cups", "print", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "lpq"
  description: "display the print queue"
  keywords: ["cups", "display", "print", "queue"]
  platform: [linux, macos]
  pipeline: false

- command: "/var/log/cups"
  description: "print log location"
  keywords: ["cups", "print", "log", "location"]
  platform: [linux, macos]
  pipeline: false

- command: "cupsreject <printer-name>"
  description: "reject new jobs"
  keywords: ["cups", "reject", "new", "jobs"]
  platform: [linux, macos]
  pipeline: false

- command: "cupsaccept <printer-name>"
  description: "accept new jobs"
  keywords: ["cups", "accept", "new", "jobs"]
  platform: [linux, macos]
  pipeline: false

- command: "curl <url>"
  description: "download a file"
  keywords: ["curl", "download", "file"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "curl <url> -o <outfile>"
  description: "download and rename a file"
  keywords: ["curl", "download", "rename", "file"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "curl -O <url> -O <url>"
  description: "download multiple files"
  keywords: ["curl", "download", "multiple", "files"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "curl http://example.com/pic[1-24].jpg"
  description: "download all sequentially numbered files (1-24)"
  keywords: ["curl", "download", "all", "sequentially", "numbered", "files", "(1-24)"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "curl -u <username>:<password> <url>"
  description: "download a file and pass HTTP authentication"
  keywords: ["curl", "download", "file", "pass", "http", "authentication"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "curl -x <proxy-host>:<port> <url>"
  description: "download a file with a proxy"
  keywords: ["curl", "download", "file", "proxy"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "curl -u <username>:<password> -O ftp://example.com/pub/file.zip"
  description: "download a file over FTP"
  keywords: ["curl", "download", "file", "over", "ftp"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "curl ftp://username:password@example.com"
  description: "get an FTP directory listing"
  keywords: ["curl", "get", "ftp", "directory", "listing"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "curl -C - -o <partial-file> <url>"
  description: "resume a previously failed download"
  keywords: ["curl", "resume", "previously", "failed", "download"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "curl -I <url>"
  description: "fetch only the HTTP headers from a response"
  keywords: ["curl", "fetch", "only", "http", "headers", "response"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "curl http://ifconfig.me/all.json"
  description: "fetch your external IP and network info as JSON"
  keywords: ["curl", "fetch", "your", "external", "network", "info", "json"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "curl --limit-rate 1000B -O <outfile>"
  description: "limit the rate of a download"
  keywords: ["curl", "limit", "rate", "download"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "curl httpbin.org/ip"
  description: "get your global IP"
  keywords: ["curl", "get", "your", "global"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "curl -o /dev/null -w '%{http_code}\n' -s -I URL"
  description: "get only the HTTP status code"
  keywords: ["curl", "get", "only", "http", "status", "code"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "cut -d# -f3"
  description: "cut out the third field of text or stdoutput that is delimited by a #"
  keywords: ["cut", "out", "third", "field", "text", "stdoutput", "delimited"]
  platform: [linux, macos]
  pipeline: false

- command: "date +\"%a\""
  description: "print Abbreviated weekday name"
  keywords: ["date", "time", "print", "abbreviated", "weekday", "name"]
  platform: [linux, macos]
  pipeline: false

- command: "date +\"%B\""
  description: "print Full month name"
  keywords: ["date", "time", "print", "full", "month", "name"]
  platform: [linux, macos]
  pipeline: false

- command: "date +\"%F\""
  description: "print ISO date (same as %Y-%m-%d)"
  keywords: ["date", "time", "print", "iso", "(same", "%y-%m-%d)"]
  platform: [linux, macos]
  pipeline: false

- command: "date +\"%T\""
  description: "print Time (same as %H:%M:%S)"
  keywords: ["date", "time", "print", "(same", "%h:%m:%s)"]
  platform: [linux, macos]
  pipeline: false

- command: "date +\"%U\""
  description: "print Sunday week number (00 to 53)"
  keywords: ["date", "time", "print", "sunday", "week", "number", "(00", "53)"]
  platform: [linux, macos]
  pipeline: false

- command: "date +\"%W\""
  description: "print Monday week number (00 to 53)"
  keywords: ["date", "time", "print", "monday", "week", "number", "(00", "53)"]
  platform: [linux, macos]
  pipeline: false

- command: "date +\"%X\""
  description: "print Time (localized)"
  keywords: ["date", "time", "print", "(localized)"]
  platform: [linux, macos]
  pipeline: false

- command: "date +\"%Y\""
  description: "print 4-digit year"
  keywords: ["date", "time", "print", "4-digit", "year"]
  platform: [linux, macos]
  pipeline: false

- command: "date +\"%Z\""
  description: "print Timezone name"
  keywords: ["date", "time", "print", "timezone", "name"]
  platform: [linux, macos]
  pipeline: false

- command: "date +\"%Y%m%d_%H%M%S\""
  description: "print the date in a format suitable for affixing to file names"
  keywords: ["date", "time", "print", "format", "suitable", "affixing", "file", "names"]
  platform: [linux, macos]
  pipeline: false

- command: "date -d @1440359821"
  description: "convert a Unix timestamp to Date (Linux)"
  keywords: ["date", "time", "convert", "unix", "timestamp", "(linux)"]
  platform: [linux, macos]
  pipeline: false

- command: "date -r 1440359821"
  description: "convert a Unix timestamp to Date (OSX)"
  keywords: ["date", "time", "convert", "unix", "timestamp", "(osx)"]
  platform: [linux, macos]
  pipeline: false

- command: "date +%Z"
  description: "show the current timezone"
  keywords: ["date", "time", "show", "current", "timezone"]
  platform: [linux, macos]
  pipeline: false

- command: "date -R"
  description: "show date in RFC format with TZ offset"
  keywords: ["date", "time", "show", "rfc", "format", "offset"]
  platform: [linux, macos]
  pipeline: false

- command: "date -u"
  description: "show date in UTC/GMT"
  keywords: ["date", "time", "show", "utc/gmt"]
  platform: [linux, macos]
  pipeline: false

- command: "TZ=CET date"
  description: "show date in CET"
  keywords: ["date", "time", "show", "cet"]
  platform: [linux, macos]
  pipeline: false

- command: "TZ='America/Los_Angeles' date"
  description: "show the time on the west coast of the US (use tzselect(1) to find TZ)"
  keywords: ["date", "time", "show", "west", "coast", "(use", "tzselect(1)", "find", "tz)"]
  platform: [linux, macos]
  pipeline: false

- command: "ar vx foo.deb  # -> data.tar.gz"
  description: "extract the contents of a .deb file"
  keywords: ["deb", "packaging", "extract", "contents", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo dpkg -i foo.deb"
  description: "install .deb file to a debian like system (e.g: Ubuntu)"
  keywords: ["deb", "packaging", "install", "file", "debian", "like", "system", "(e.g", "ubuntu)"]
  platform: [linux, macos]
  pipeline: false

- command: "df -h"
  description: "print free disk space in a human-readable format"
  keywords: ["df", "print", "free", "disk", "space", "human-readable", "format"]
  platform: [linux, macos]
  pipeline: false

- command: "df -d <path>"
  description: "print the disk for a given path"
  keywords: ["df", "print", "disk", "given", "path"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo dhclient -r"
  description: "release the current IP address"
  keywords: ["dhclient", "networking", "release", "current", "address"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo dhclient"
  description: "obtain a new IP address"
  keywords: ["dhclient", "networking", "obtain", "new", "address"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo dhclient <interface>"
  description: "obtain a new IP address for a specific interface"
  keywords: ["dhclient", "networking", "obtain", "new", "address", "specific", "interface"]
  platform: [linux, macos]
  pipeline: false

- command: "diff -u <file-1> <file-2>"
  description: "view the differences between two files"
  keywords: ["diff", "view", "differences", "between", "two", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "diff -ur <dir-1> <dir-2>"
  description: "view the differences between two directories"
  keywords: ["diff", "view", "differences", "between", "two", "directories"]
  platform: [linux, macos]
  pipeline: false

- command: "diff -ub <file-1> <file-2>"
  description: "ignore whitespace"
  keywords: ["diff", "ignore", "whitespace"]
  platform: [linux, macos]
  pipeline: false

- command: "diff -uB <file-1> <file-2>"
  description: "ignore blank lines"
  keywords: ["diff", "ignore", "blank", "lines"]
  platform: [linux, macos]
  pipeline: false

- command: "diff -ui <file-1> <file-2>"
  description: "ignore the differences between uppercase and lowercase"
  keywords: ["diff", "ignore", "differences", "between", "uppercase", "lowercase"]
  platform: [linux, macos]
  pipeline: false

- command: "diff -q <file-1> <file-2>"
  description: "report whether the files differ"
  keywords: ["diff", "report", "whether", "files", "differ"]
  platform: [linux, macos]
  pipeline: false

- command: "diff -s <file-1> <file-2>"
  description: "report whether the files are identical"
  keywords: ["diff", "report", "whether", "files", "identical"]
  platform: [linux, macos]
  pipeline: false

- command: "diff <(command1) <(command2)"
  description: "diff the output of two commands or scripts"
  keywords: ["diff", "output", "two", "commands", "scripts"]
  platform: [linux, macos]
  pipeline: false

- command: "diff -Naur <file-1> <file-2> > <patch-file>"
  description: "generate a patch file from two files"
  keywords: ["diff", "generate", "patch", "file", "two", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "dnf install <package>"
  description: "install a package"
  keywords: ["dnf", "packaging", "install", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "dnf search <phrase>"
  description: "find packages matching <phrase>"
  keywords: ["dnf", "packaging", "find", "packages", "matching", "<phrase>"]
  platform: [linux, macos]
  pipeline: false

- command: "dnf provides <executable>"
  description: "find which package provides an executable"
  keywords: ["dnf", "packaging", "find", "which", "package", "provides", "executable"]
  platform: [linux, macos]
  pipeline: false

- command: "dnf download <package>"
  description: "download a package"
  keywords: ["dnf", "packaging", "download", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "dnf builddep <file>"
  description: "install the build dependencies for a SRPM or from a .spec file"
  keywords: ["dnf", "packaging", "install", "build", "dependencies", "srpm", "spec", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "docker -d"
  description: "start the docker daemon"
  keywords: ["docker", "start", "daemon"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker build -t <image-tag-name> <path-of-Dockerfile>"
  description: "build a docker image"
  keywords: ["docker", "build", "image"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker run -ti <image-name> /bin/bash"
  description: "start a container with an interactive shell"
  keywords: ["docker", "start", "container", "interactive", "shell"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker run -d <image-name>"
  description: "run a docker container in the background"
  keywords: ["docker", "run", "container", "background"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker exec -ti <container-name> bash"
  description: "\"shell\" into a running container (docker-1.3+)"
  keywords: ["docker", "\"shell\"", "into", "running", "container", "(docker-1.3+)"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker inspect <container-name> (or <container-id>)"
  description: "inspect a running container"
  keywords: ["docker", "inspect", "running", "container"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker inspect --format {{.State.Pid}} <container-name-or-id>"
  description: "get the process ID for a container"
  keywords: ["docker", "get", "process", "container"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker inspect --format='{{json .Volumes}}' <container-id> | python -mjson.tool"
  description: "list (and pretty-print) the current mounted volumes for a container"
  keywords: ["docker", "list", "(and", "pretty-print)", "current", "mounted", "volumes", "container"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: true

- command: "docker cp foo.txt mycontainer:/foo.txt"
  description: "copy files/folders between a container and your host"
  keywords: ["docker", "copy", "files/folders", "between", "container", "your", "host"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker ps"
  description: "list currently running containers"
  keywords: ["docker", "list", "currently", "running", "containers"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker ps -a"
  description: "list all containers"
  keywords: ["docker", "list", "all", "containers"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker container prune"
  description: "remove all stopped containers"
  keywords: ["docker", "remove", "all", "stopped", "containers"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker rm $(docker ps -qa)"
  description: "remove all stopped containers"
  keywords: ["docker", "remove", "all", "stopped", "containers"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker images"
  description: "list all images"
  keywords: ["docker", "list", "all", "images"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker image ls -q"
  description: "only see all images id"
  keywords: ["docker", "only", "see", "all", "images"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker rmi $(docker images | grep \"^<none>\" | awk '{print $3}')"
  description: "remove all untagged images"
  keywords: ["docker", "remove", "all", "untagged", "images"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: true

- command: "docker volume prune"
  description: "remove all volumes not used by at least one container"
  keywords: ["docker", "remove", "all", "volumes", "not", "used", "least", "one", "container"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker save -o <archive-name>.tar <image-name>"
  description: "save image as tar archive"
  keywords: ["docker", "save", "image", "tar", "archive"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker load -i <archive-name>.tar"
  description: "restore image from a saved tar archive"
  keywords: ["docker", "restore", "image", "saved", "tar", "archive"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker image rm <image-name-or-id>"
  description: "remove an image"
  keywords: ["docker", "remove", "image"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker image tag <image-name>:<tag-name> <image-name>:<new-tag-name>"
  description: "tag an image"
  keywords: ["docker", "tag", "image"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker login"
  description: "login into hub.docker.com"
  keywords: ["docker", "login", "into", "hub.docker.com"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker push <image-name>:<image-tag-name>"
  description: "push a docker image into dockerhub repository"
  keywords: ["docker", "push", "image", "into", "dockerhub", "repository"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker logs <container-id>"
  description: "see the logs of a background or stopped container"
  keywords: ["docker", "see", "logs", "background", "stopped", "container"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker run -p <localhost-port>:<container-port> <image-name>"
  description: "publish a port of container on localhost"
  keywords: ["docker", "publish", "port", "container", "localhost"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker volume create <volume-name>"
  description: "create a docker volume"
  keywords: ["docker", "create", "volume"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker volume inspect <volume-name>"
  description: "see information of a docker volume"
  keywords: ["docker", "see", "information", "volume"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker run -v <volume-name>:<folder-path-in-container> <image>"
  description: "use a volume in the container"
  keywords: ["docker", "use", "volume", "container"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker run <image-name> -v $(pwd):<folder-path-in-container> <image>"
  description: "link current folder between host and container for development"
  keywords: ["docker", "link", "current", "folder", "between", "host", "container", "development"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker cp <container-id>:<path/to/file> <host/copy/path>"
  description: "copy a file from the running container to host mechine"
  keywords: ["docker", "copy", "file", "running", "container", "host", "mechine"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker cp <host/copy/path> <container-id>:<path/to/file>"
  description: "copy a file from host mechine to the running container"
  keywords: ["docker", "copy", "file", "host", "mechine", "running", "container"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker-compose up"
  description: "start all containers defined in the docker-compose.yml file"
  keywords: ["docker-compose", "container", "docker", "start", "all", "containers", "defined", "docker-compose.yml", "file"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker-compose -f <path/to/compose_file.yml> up"
  description: "start all containers defined in a given compose file"
  keywords: ["docker-compose", "container", "docker", "start", "all", "containers", "defined", "given", "compose", "file"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker-compose up -d"
  description: "start all containers in the background"
  keywords: ["docker-compose", "container", "docker", "start", "all", "containers", "background"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker-compose up --build"
  description: "rebuild the images before starting all containers"
  keywords: ["docker-compose", "container", "docker", "rebuild", "images", "before", "starting", "all", "containers"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker-compose up <container_name_1> <container_name_2>"
  description: "start only specific containers"
  keywords: ["docker-compose", "container", "docker", "start", "only", "specific", "containers"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker-compose ps"
  description: "list all running containers"
  keywords: ["docker-compose", "container", "docker", "list", "all", "running", "containers"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker-compose stop"
  description: "stop all running containers"
  keywords: ["docker-compose", "container", "docker", "stop", "all", "running", "containers"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker-compose down --rmi all --volumes"
  description: "stop and remove all containers, networks, images, and volumes"
  keywords: ["docker-compose", "container", "docker", "stop", "remove", "all", "containers", "networks", "images", "volumes"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker-compose logs --follow"
  description: "follow logs output from all containers"
  keywords: ["docker-compose", "container", "docker", "follow", "logs", "output", "all", "containers"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker-compose logs --follow <container_name>"
  description: "follow logs output from a specific container"
  keywords: ["docker-compose", "container", "docker", "follow", "logs", "output", "specific"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "docker-compose run <container_name> env"
  description: "display the environment variables used by a running container"
  keywords: ["docker-compose", "container", "docker", "display", "environment", "variables", "used", "running"]
  niche: "containers"
  platform: [linux, macos]
  pipeline: false

- command: "dpkg -i <deb-file>"
  description: "install or upgrade a package"
  keywords: ["dpkg", "packaging", "install", "upgrade", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "dpkg -P <deb-file>"
  description: "remove a package (including configuration files)"
  keywords: ["dpkg", "packaging", "remove", "package", "(including", "configuration", "files)"]
  platform: [linux, macos]
  pipeline: false

- command: "dpkg -l"
  description: "list all installed packages with versions and details"
  keywords: ["dpkg", "packaging", "list", "all", "installed", "packages", "versions", "details"]
  platform: [linux, macos]
  pipeline: false

- command: "dpkg -s <deb-file> | grep Status"
  description: "determine whether a Debian package is installed"
  keywords: ["dpkg", "packaging", "determine", "whether", "debian", "package", "installed"]
  platform: [linux, macos]
  pipeline: true

- command: "du -sk *| sort -rn"
  description: "sort directories/files by size"
  keywords: ["du", "sort", "directories/files", "size"]
  platform: [linux, macos]
  pipeline: true

- command: "du -sh"
  description: "show cumulative human-readable size"
  keywords: ["du", "show", "cumulative", "human-readable", "size"]
  platform: [linux, macos]
  pipeline: false

- command: "du -shL"
  description: "show cumulative human-readable size and dereference symlinks"
  keywords: ["du", "show", "cumulative", "human-readable", "size", "dereference", "symlinks"]
  platform: [linux, macos]
  pipeline: false

- command: "du -sh * | sort -rh"
  description: "sort directories/files by size (human-readable)"
  keywords: ["du", "sort", "directories/files", "size", "(human-readable)"]
  platform: [linux, macos]
  pipeline: true

- command: "du -ma | sort -nr | head -n 20"
  description: "list the 20 largest files and folders under the current working directory"
  keywords: ["du", "list", "largest", "files", "folders", "under", "current", "working", "directory"]
  platform: [linux, macos]
  pipeline: true

- command: "env"
  description: "list the exported variables of the current environment along with their values"
  keywords: ["env", "list", "exported", "variables", "current", "environment", "along", "their", "values"]
  platform: [linux, macos]
  pipeline: false

- command: "env <variable>=<value> <command>"
  description: "set an environment variable and run a command"
  keywords: ["env", "set", "environment", "variable", "run", "command"]
  platform: [linux, macos]
  pipeline: false

- command: "env <variable_1>=<value> <variable_2>=<value> <command>"
  description: "set multiple environment variables and run a command"
  keywords: ["env", "set", "multiple", "environment", "variables", "run", "command"]
  platform: [linux, macos]
  pipeline: false

- command: "env -u <variable> <command>"
  description: "remove an environment variable and run a command"
  keywords: ["env", "remove", "environment", "variable", "run", "command"]
  platform: [linux, macos]
  pipeline: false

- command: "env -i <command>"
  description: "clear the environment and run a command"
  keywords: ["env", "clear", "environment", "run", "command"]
  platform: [linux, macos]
  pipeline: false

- command: "ethtool -S <interface>"
  description: "show statistics for the selected interface"
  keywords: ["ethtool", "networking", "show", "statistics", "selected", "interface"]
  platform: [linux, macos]
  pipeline: false

- command: "ethotool -P <interface>"
  description: "show interface permanent address"
  keywords: ["ethtool", "networking", "show", "interface", "permanent", "address"]
  platform: [linux, macos]
  pipeline: false

- command: "ethtool -s <interface> [ speed %d ]"
  description: "set interface speed"
  keywords: ["ethtool", "networking", "set", "interface", "speed"]
  platform: [linux, macos]
  pipeline: false

- command: "ethtool -s <interface> [ autoneg on|off ]"
  description: "set interface autonegotiation"
  keywords: ["ethtool", "networking", "set", "interface", "autonegotiation"]
  platform: [linux, macos]
  pipeline: true

- command: "ethtool -S <interface> | grep error"
  description: "get interface errors"
  keywords: ["ethtool", "networking", "get", "interface", "errors"]
  platform: [linux, macos]
  pipeline: true

- command: "export"
  description: "show current shell attributes"
  keywords: ["export", "show", "current", "shell", "attributes"]
  platform: [linux, macos]
  pipeline: false

- command: "export VARNAME=\"value\""
  description: "export an environment variable"
  keywords: ["export", "environment", "variable"]
  platform: [linux, macos]
  pipeline: false

- command: "ffmpeg -i <file>"
  description: "print file metadata"
  keywords: ["ffmpeg", "print", "file", "metadata"]
  platform: [linux, macos]
  pipeline: false

- command: "for f in *.m4a; do ffmpeg -i \"$f\" -acodec libmp3lame -vn -b:a 320k \"${f%.m4a}.mp3\"; done"
  description: "convert all m4a files to mp3"
  keywords: ["ffmpeg", "convert", "all", "m4a", "files", "mp3"]
  platform: [linux, macos]
  pipeline: false

- command: "ffmpeg -i input.foo -vcodec bar -acodec baz -b:v 21000k -b:a 320k -g 150 -threads 4 output.bar"
  description: "convert video from .foo to .bar"
  keywords: ["ffmpeg", "convert", "video", "foo", "bar"]
  platform: [linux, macos]
  pipeline: false

- command: "ffmpeg -r 18 -pattern_type glob -i '*.png' -b:v 21000k -s hd1080 -vcodec vp9 -an -pix_fmt yuv420p -deinterlace output.ext"
  description: "convert image sequence to video"
  keywords: ["ffmpeg", "convert", "image", "sequence", "video"]
  platform: [linux, macos]
  pipeline: false

- command: "ffmpeg -i video.ext -i audio.ext -c:v copy -c:a copy output.ext"
  description: "combine video and audio into one file"
  keywords: ["ffmpeg", "combine", "video", "audio", "into", "one", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "ffmpeg -i input_video.mp4 -vf ass=sub.ass output_video_subtitles.mp4"
  description: "add ass subtitle to the video"
  keywords: ["ffmpeg", "add", "ass", "subtitle", "video"]
  platform: [linux, macos]
  pipeline: false

- command: "ffmpeg -i input_video.webm output_video.mp4"
  description: "convert webm to mp4"
  keywords: ["ffmpeg", "convert", "webm", "mp4"]
  platform: [linux, macos]
  pipeline: false

- command: "ffmpeg -i input_video.mp4 -acodec copy -vcodec copy -f mov output_video.mov"
  description: "convert mp4 to mov"
  keywords: ["ffmpeg", "convert", "mp4", "mov"]
  platform: [linux, macos]
  pipeline: false

- command: "ffmpeg -i input_video.mov -vcodec copy -acodec copy output_video.mp4"
  description: "convert mov to mp4"
  keywords: ["ffmpeg", "convert", "mov", "mp4"]
  platform: [linux, macos]
  pipeline: false

- command: "cat mylist.txt"
  description: "combine audio and video from N files"
  keywords: ["ffmpeg", "combine", "audio", "video", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "find -L . -type f"
  description: "find files following symlinks (otherwise the symlinks are not followed)"
  keywords: ["find", "files", "following", "symlinks", "(otherwise", "not", "followed)"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find . -iname \"*.jpg\""
  description: "find files by case-insensitive extension (ex: .jpg, .JPG, .jpG)"
  keywords: ["find", "files", "case-insensitive", "extension", "(ex", "jpg", "jpg)"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find . -type d"
  description: "find directories"
  keywords: ["find", "directories"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find . -type f"
  description: "find files"
  keywords: ["find", "files"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find . -type f -perm 777"
  description: "find files by octal permission"
  keywords: ["find", "files", "octal", "permission"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find . -xdev \( -perm -4000 \) -type f -print0 | xargs -0 ls -l"
  description: "find files with setuid bit set"
  keywords: ["find", "files", "setuid", "bit", "set"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: true

- command: "find . -type f -ctime -1 -print0 | xargs -0 -p cp -t <dir>"
  description: "find files newer than 1 day old and copy elsewhere (remove -p flag in xargs to not be asked)"
  keywords: ["find", "files", "newer", "than", "day", "old", "copy", "elsewhere", "(remove", "flag", "xargs", "not", "asked)"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: true

- command: "find ./path/ -name '*.txt' -delete"
  description: "find files with extension '.txt' and remove them"
  keywords: ["find", "files", "extension", "'.txt'", "remove", "them"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find ./path/ -name '*~' -delete"
  description: "find files with tilde as postfix and remove them"
  keywords: ["find", "files", "tilde", "postfix", "remove", "them"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find ./path/ -name '*.txt' -exec cat '{}' \;"
  description: "find files with extension '.txt' and dump their contents"
  keywords: ["find", "files", "extension", "'.txt'", "dump", "their", "contents"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find ./path/ -name '*.txt' | xargs grep 'string'"
  description: "find files with extension '.txt' and look for a string into them"
  keywords: ["find", "files", "extension", "'.txt'", "look", "string", "into", "them"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: true

- command: "find . -size +5M -type f -print0 | xargs -0 ls -Ssh | sort -z"
  description: "find files with size bigger than 5 Mebibyte and sort them by size"
  keywords: ["find", "files", "size", "bigger", "than", "mebibyte", "sort", "them"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: true

- command: "find . -type f -size +200000000c -exec ls -lh {} \; | awk '{ print $9 \": \" $5 }'"
  description: "find files bigger than 2 Megabyte and list them"
  keywords: ["find", "files", "bigger", "than", "megabyte", "list", "them"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: true

- command: "find . -type f -mtime +7d -ls"
  description: "find files modified more than 7 days ago and list file information"
  keywords: ["find", "files", "modified", "more", "than", "days", "ago", "list", "file", "information"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find . -type l -user <username-or-userid> -ls"
  description: "find symlinks owned by a user and list file information"
  keywords: ["find", "symlinks", "owned", "user", "list", "file", "information"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find . -type d -empty -exec rmdir {} \;"
  description: "search for and delete empty directories"
  keywords: ["find", "search", "delete", "empty", "directories"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find . -maxdepth 2 -name build -type d"
  description: "search for directories named build at a max depth of 2 directories"
  keywords: ["find", "search", "directories", "named", "build", "max", "depth"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find . ! -iwholename '*.git*' -type f"
  description: "search all files who are not in .git directory"
  keywords: ["find", "search", "all", "files", "who", "not", "git", "directory"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find . -type f -samefile MY_FILE_HERE 2>/dev/null"
  description: "find all files that have the same node (hard link) as MY_FILE_HERE"
  keywords: ["find", "all", "files", "have", "same", "node", "(hard", "link)", "my_file_here"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find . -type f -exec chmod 644 {} \;"
  description: "find all files in the current directory and modify their permissions"
  keywords: ["find", "all", "files", "current", "directory", "modify", "their", "permissions"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find . -type f -ctime -48h"
  description: "find all files changed in last 2 days"
  keywords: ["find", "all", "files", "changed", "last", "days"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find . -name '*,*' | while read f; do echo mv \"$f\" \"${f//,/}\"; done"
  description: "find and rename (imperfect) all files and dirs that have a comma in the"
  keywords: ["find", "rename", "(imperfect)", "all", "files", "dirs", "have", "comma"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: true

- command: "find -L /usr/ports/packages -type l"
  description: "find all broken links. Note -L returns a file unless it is a broken link"
  keywords: ["find", "all", "broken", "links", "note", "returns", "file", "unless", "link"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find . -type f -exec sh -c \"echo '{}'; cat '{}';\" \;"
  description: "find and run multiple shell commands (without multiple execs)"
  keywords: ["find", "run", "multiple", "shell", "commands", "(without", "execs)"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "find <path> -newer <target-file>"
  description: "find files that are newer than a file"
  keywords: ["find", "files", "newer", "than", "file"]
  niche: "filesystem"
  platform: [linux, macos]
  pipeline: false

- command: "fkill 1337"
  description: "kill a process by pid"
  keywords: ["fkill", "kill", "process", "pid"]
  platform: [linux, macos]
  pipeline: false

- command: "fkill safari"
  description: "kill processes by name (case insensitive)"
  keywords: ["fkill", "kill", "processes", "name", "(case", "insensitive)"]
  platform: [linux, macos]
  pipeline: false

- command: "fkill :8080"
  description: "kill a process listening on a port"
  keywords: ["fkill", "kill", "process", "listening", "port"]
  platform: [linux, macos]
  pipeline: false

- command: "fkill"
  description: "run the interactive interface"
  keywords: ["fkill", "run", "interactive", "interface"]
  platform: [linux, macos]
  pipeline: false

- command: "cat <file> | fmt -w 50"
  description: "format lines, 50 words in each line"
  keywords: ["fmt", "format", "lines", "words", "each", "line"]
  platform: [linux, macos]
  pipeline: true

- command: "fzf"
  description: "fuzzy find files in current directory"
  keywords: ["fzf", "fuzzy", "find", "files", "current", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "cat $(fzf)"
  description: "fuzzy find a file and cat it"
  keywords: ["fzf", "fuzzy", "find", "file", "cat"]
  platform: [linux, macos]
  pipeline: false

- command: "gcc file.c"
  description: "compile a file"
  keywords: ["gcc", "compile", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "gcc -o file file.c"
  description: "compile a file with a custom output"
  keywords: ["gcc", "compile", "file", "custom", "output"]
  platform: [linux, macos]
  pipeline: false

- command: "gcc -m64"
  description: "build for 64 bits"
  keywords: ["gcc", "build", "bits"]
  platform: [linux, macos]
  pipeline: false

- command: "gcc -mwindows"
  description: "build a GUI for windows (Mingw) (Will disable the term/console)"
  keywords: ["gcc", "build", "gui", "windows", "(mingw)", "(will", "disable", "term/console)"]
  platform: [linux, macos]
  pipeline: false

- command: "gdb <executable>, gdb --args <executable> [<args>...], gdb -p <pid>"
  description: "start the debugger"
  keywords: ["gdb", "start", "debugger"]
  platform: [linux, macos]
  pipeline: false

- command: "q, quit"
  description: "exit gdb (after program terminated)"
  keywords: ["gdb", "exit", "(after", "program", "terminated)"]
  platform: [linux, macos]
  pipeline: false

- command: "b, break <function>"
  description: "set a breakpoint at a function"
  keywords: ["gdb", "set", "breakpoint", "function"]
  platform: [linux, macos]
  pipeline: false

- command: "b, break <loc> [if <condition>]"
  description: "set a (conditional) breakpoint at a general location"
  keywords: ["gdb", "set", "(conditional)", "breakpoint", "general", "location"]
  platform: [linux, macos]
  pipeline: false

- command: "watch <expr>"
  description: "set a watchpoint, i.e., stop when expression changes its value"
  keywords: ["gdb", "set", "watchpoint", "i.e", "stop", "when", "expression", "changes", "value"]
  platform: [linux, macos]
  pipeline: false

- command: "info breakpoints, info watchpoints"
  description: "show all breakpoints and watchpoints"
  keywords: ["gdb", "show", "all", "breakpoints", "watchpoints"]
  platform: [linux, macos]
  pipeline: false

- command: "clear, delete"
  description: "delete all or given breakpoints and watchpoints"
  keywords: ["gdb", "delete", "all", "given", "breakpoints", "watchpoints"]
  platform: [linux, macos]
  pipeline: false

- command: "dis, disable <num>"
  description: "disable a breakpoint"
  keywords: ["gdb", "disable", "breakpoint"]
  platform: [linux, macos]
  pipeline: false

- command: "r, run [<args>]"
  description: "run the program, optionally with arguments for the program"
  keywords: ["gdb", "run", "program", "optionally", "arguments"]
  platform: [linux, macos]
  pipeline: false

- command: "n, next"
  description: "run the current line, stepping over any invocations"
  keywords: ["gdb", "run", "current", "line", "stepping", "over", "any", "invocations"]
  platform: [linux, macos]
  pipeline: false

- command: "s, step"
  description: "run the current line, stepping into any invocations"
  keywords: ["gdb", "run", "current", "line", "stepping", "into", "any", "invocations"]
  platform: [linux, macos]
  pipeline: false

- command: "u, until"
  description: "run until the next line below, i.e., without new loop iteration"
  keywords: ["gdb", "run", "until", "next", "line", "below", "i.e", "without", "new", "loop", "iteration"]
  platform: [linux, macos]
  pipeline: false

- command: "si, stepi"
  description: "step or go to next line by a machine instruction"
  keywords: ["gdb", "step", "next", "line", "machine", "instruction"]
  platform: [linux, macos]
  pipeline: false

- command: "advance <loc>"
  description: "run until given location is reached"
  keywords: ["gdb", "run", "until", "given", "location", "reached"]
  platform: [linux, macos]
  pipeline: false

- command: "fin, finish"
  description: "run until function ends, i.e., jump out of a function"
  keywords: ["gdb", "run", "until", "function", "ends", "i.e", "jump", "out"]
  platform: [linux, macos]
  pipeline: false

- command: "c, continue"
  description: "continue execution"
  keywords: ["gdb", "continue", "execution"]
  platform: [linux, macos]
  pipeline: false

- command: "bt, backtrace [full]"
  description: "print a stacktrace, optionally with local variables"
  keywords: ["gdb", "print", "stacktrace", "optionally", "local", "variables"]
  platform: [linux, macos]
  pipeline: false

- command: "info frame"
  description: "show summary info on selected frame"
  keywords: ["gdb", "show", "summary", "info", "selected", "frame"]
  platform: [linux, macos]
  pipeline: false

- command: "info args, info locals"
  description: "print the arguments or local variables to the current function"
  keywords: ["gdb", "print", "arguments", "local", "variables", "current", "function"]
  platform: [linux, macos]
  pipeline: false

- command: "info registers"
  description: "print the registers"
  keywords: ["gdb", "print", "registers"]
  platform: [linux, macos]
  pipeline: false

- command: "info threads"
  description: "print a list of all the threads"
  keywords: ["gdb", "print", "list", "all", "threads"]
  platform: [linux, macos]
  pipeline: false

- command: "info sharedlibrary"
  description: "print a list of all the loaded shared libraries"
  keywords: ["gdb", "print", "list", "all", "loaded", "shared", "libraries"]
  platform: [linux, macos]
  pipeline: false

- command: "p length=strlen(string)"
  description: "evaluate an expression and print the result"
  keywords: ["gdb", "evaluate", "expression", "print", "result"]
  platform: [linux, macos]
  pipeline: false

- command: "p *<array>@<len>"
  description: "print an array of given length"
  keywords: ["gdb", "print", "array", "given", "length"]
  platform: [linux, macos]
  pipeline: false

- command: "l, list"
  description: "list surrounding source code"
  keywords: ["gdb", "list", "surrounding", "source", "code"]
  platform: [linux, macos]
  pipeline: false

- command: "$reg, $pc, $fp, $sp"
  description: "specify a given register, program counter, frame pointer, stack pointer"
  keywords: ["gdb", "specify", "given", "register", "program", "counter", "frame", "pointer", "stack"]
  platform: [linux, macos]
  pipeline: false

- command: "set pretty print on"
  description: "enable pretty print of arrays and more"
  keywords: ["gdb", "enable", "pretty", "print", "arrays", "more"]
  platform: [linux, macos]
  pipeline: false

- command: "C-x C-a, C-x a, C-x A"
  description: "toggle TUI mode"
  keywords: ["gdb", "toggle", "tui", "mode"]
  platform: [linux, macos]
  pipeline: false

- command: "C-x 1"
  description: "use a TUI layout with only one window"
  keywords: ["gdb", "use", "tui", "layout", "only", "one", "window"]
  platform: [linux, macos]
  pipeline: false

- command: "C-x 2"
  description: "use a TUI layout with two windows"
  keywords: ["gdb", "use", "tui", "layout", "two", "windows"]
  platform: [linux, macos]
  pipeline: false

- command: "C-x o"
  description: "change active window"
  keywords: ["gdb", "change", "active", "window"]
  platform: [linux, macos]
  pipeline: false

- command: "C-x s"
  description: "Switch in and out of the TUI SingleKey mode"
  keywords: ["gdb", "switch", "out", "tui", "singlekey", "mode"]
  platform: [linux, macos]
  pipeline: false

- command: "gem search <package>"
  description: "search for a package"
  keywords: ["gem", "packaging", "ruby", "search", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "gem install <package>"
  description: "install a package"
  keywords: ["gem", "packaging", "ruby", "install", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "gem install --user-install <package>"
  description: "install a package in user space"
  keywords: ["gem", "packaging", "ruby", "install", "package", "user", "space"]
  platform: [linux, macos]
  pipeline: false

- command: "gem install <package> -v <version>"
  description: "install specific version of a package"
  keywords: ["gem", "packaging", "ruby", "install", "specific", "version", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "gem uninstall <package>"
  description: "uninstall a package"
  keywords: ["gem", "packaging", "ruby", "uninstall", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "gem update <package>"
  description: "upgrade a package"
  keywords: ["gem", "packaging", "ruby", "upgrade", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "gem info <package>"
  description: "show details of a package"
  keywords: ["gem", "packaging", "ruby", "show", "details", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "gem list --local"
  description: "list local packages"
  keywords: ["gem", "packaging", "ruby", "list", "local", "packages"]
  platform: [linux, macos]
  pipeline: false

- command: "gem help <command>"
  description: "show help on command"
  keywords: ["gem", "packaging", "ruby", "show", "help", "command"]
  platform: [linux, macos]
  pipeline: false

- command: "git config --global user.name <name>"
  description: "set your identity"
  keywords: ["git", "vcs", "set", "your", "identity"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git config --global core.editor <editor>"
  description: "set your editor"
  keywords: ["git", "vcs", "set", "your", "editor"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git config --global color.ui true"
  description: "enable color"
  keywords: ["git", "vcs", "enable", "color"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git add --all"
  description: "stage all changes for commit"
  keywords: ["git", "vcs", "stage", "all", "changes", "commit"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git stash"
  description: "stash changes locally, this will keep the changes in a separate changelist"
  keywords: ["git", "vcs", "stash", "changes", "locally", "this", "keep", "separate", "changelist"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git stash push -m <message>"
  description: "stash changes with a message"
  keywords: ["git", "vcs", "stash", "changes", "message"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git stash list"
  description: "list all the stashed changes"
  keywords: ["git", "vcs", "list", "all", "stashed", "changes"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git stash pop"
  description: "apply the most recent change and remove the stash from the stash list"
  keywords: ["git", "vcs", "apply", "most", "recent", "change", "remove", "stash", "list"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git stash apply stash@{6}"
  description: "apply any stash from the list of stashes. This does not remove the stash"
  keywords: ["git", "vcs", "apply", "any", "stash", "list", "stashes", "this", "does", "not", "remove"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git commit -m <message>"
  description: "commit staged changes"
  keywords: ["git", "vcs", "commit", "staged", "changes"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git commit --amend"
  description: "edit previous commit message"
  keywords: ["git", "vcs", "edit", "previous", "commit", "message"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git filter-branch --env-filter \"
  description: "change the date of an existing commit"
  keywords: ["git", "vcs", "change", "date", "existing", "commit"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git reset --hard"
  description: "remove staged and working directory changes"
  keywords: ["git", "vcs", "remove", "staged", "working", "directory", "changes"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git reset --hard HEAD~2"
  description: "go 2 commits back"
  keywords: ["git", "vcs", "commits", "back"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git update-ref -d HEAD"
  description: "revert first/initial commit on a branch"
  keywords: ["git", "vcs", "revert", "first/initial", "commit", "branch"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git clean -f -d"
  description: "remove untracked files"
  keywords: ["git", "vcs", "remove", "untracked", "files"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git clean -f -d -x"
  description: "remove untracked and ignored files"
  keywords: ["git", "vcs", "remove", "untracked", "ignored", "files"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git push origin master"
  description: "push to the tracked master branch"
  keywords: ["git", "vcs", "push", "tracked", "master", "branch"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git push git@github.com:<username>/<repo>.git"
  description: "push to a specified repository"
  keywords: ["git", "vcs", "push", "specified", "repository"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git push -f"
  description: "force a push"
  keywords: ["git", "vcs", "force", "push"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git blame <file>"
  description: "see who commited which line in a file"
  keywords: ["git", "vcs", "see", "who", "commited", "which", "line", "file"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git remote add upstream git@github.com:<username>/<repo>.git # Set a new repo"
  description: "sync a fork with the master repo"
  keywords: ["git", "vcs", "sync", "fork", "master", "repo"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git log --pretty=email --patch-with-stat --reverse --full-index -- Admin\*.py > Sripts.patch"
  description: "view the commit history of a set of files"
  keywords: ["git", "vcs", "view", "commit", "history", "set", "files"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git --git-dir=../some_other_repo/.git format-patch -k -1 --stdout <commit SHA> | git am -3 -k"
  description: "import commits from another repo"
  keywords: ["git", "vcs", "import", "commits", "another", "repo"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: true

- command: "git log @{u}.."
  description: "view commits that will be pushed"
  keywords: ["git", "vcs", "view", "commits", "pushed"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git log -p feature --not master"
  description: "view changes that are new on a feature branch"
  keywords: ["git", "vcs", "view", "changes", "new", "feature", "branch"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git rebase -i @~7"
  description: "perform an interactive rebase for the prior 7 commits"
  keywords: ["git", "vcs", "perform", "interactive", "rebase", "prior", "commits"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git diff --no-index path/to/file/A path/to/file/B"
  description: "diff files WITHOUT considering them a part of git"
  keywords: ["git", "vcs", "diff", "files", "without", "considering", "them", "part"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git fetch --all"
  description: "pull changes while overwriting any local commits"
  keywords: ["git", "vcs", "pull", "changes", "while", "overwriting", "any", "local", "commits"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git pull <remote> <branch> --rebase"
  description: "pull down a remote branch, but rebase any locally differing commits onto"
  keywords: ["git", "vcs", "pull", "down", "remote", "branch", "but", "rebase", "any", "locally", "differing", "commits", "onto"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git submodule update --init --recursive"
  description: "update all submodules"
  keywords: ["git", "vcs", "update", "all", "submodules"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git clone --depth 1 <remote-url>"
  description: "perform a shallow clone to only get latest commits"
  keywords: ["git", "vcs", "perform", "shallow", "clone", "only", "get", "latest", "commits"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git pull --unshallow"
  description: "unshallow a clone"
  keywords: ["git", "vcs", "unshallow", "clone"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git checkout --orphan branch_name"
  description: "create a bare branch (one that has no commits on it)"
  keywords: ["git", "vcs", "create", "bare", "branch", "(one", "commits", "it)"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git checkout -b master upstream/master"
  description: "checkout a new branch from a different starting point"
  keywords: ["git", "vcs", "checkout", "new", "branch", "different", "starting", "point"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git remote prune origin"
  description: "remove all stale branches (ones that have been deleted on remote): So if"
  keywords: ["git", "vcs", "remove", "all", "stale", "branches", "(ones", "have", "been", "deleted", "remote)"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git remote prune $(git remote | tr '\n' ' ')"
  description: "prune all remotes at once"
  keywords: ["git", "vcs", "prune", "all", "remotes", "once"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: true

- command: "git checkout -p HEAD^ -- /path/to/file"
  description: "undo parts of last commit in a specific file"
  keywords: ["git", "vcs", "undo", "parts", "last", "commit", "specific", "file"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git revert <commit SHA>"
  description: "revert a commit and keep the history of the reverted change as a separate revert commit"
  keywords: ["git", "vcs", "revert", "commit", "keep", "history", "reverted", "change", "separate"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git cherry-pick <commit SHA1>"
  description: "pick a commit from a branch to current branch. This is different than"
  keywords: ["git", "vcs", "pick", "commit", "branch", "current", "this", "different", "than"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "git ls-files --others --exclude-standard"
  description: "list unstracked files"
  keywords: ["git", "vcs", "list", "unstracked", "files"]
  niche: "version-control"
  platform: [linux, macos]
  pipeline: false

- command: "go run ."
  description: "run the package in the current directory"
  keywords: ["go", "golang", "run", "package", "current", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "go run ./cmd/foo/"
  description: "run the package in the ./cmd/foo directory"
  keywords: ["go", "golang", "run", "package", "/cmd/foo", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "go get github.com/foo/bar@v1.2.3"
  description: "fetch dependencies"
  keywords: ["go", "golang", "fetch", "dependencies"]
  platform: [linux, macos]
  pipeline: false

- command: "go list -m all"
  description: "show all the dependencies of the module"
  keywords: ["go", "golang", "show", "all", "dependencies", "module"]
  platform: [linux, macos]
  pipeline: false

- command: "go mod why -m golang.org/x/sys"
  description: "sho why is that a dependency?"
  keywords: ["go", "golang", "sho", "why", "dependency"]
  platform: [linux, macos]
  pipeline: false

- command: "gpg --encrypt --recipient 'user@emailaddress.com' example.txt"
  description: "Encrypt a File"
  keywords: ["gpg", "encrypt", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "gpg --output example.txt --decrypt example.txt.gpg"
  description: "Decrypt a File"
  keywords: ["gpg", "decrypt", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "gradle build"
  description: "compile, test and package a project"
  keywords: ["gradle", "development", "build", "compile", "test", "package", "project"]
  platform: [linux, macos]
  pipeline: false

- command: "gradle build -x <test>"
  description: "skip a task from the build"
  keywords: ["gradle", "development", "build", "skip", "task"]
  platform: [linux, macos]
  pipeline: false

- command: "gradle build --offline"
  description: "prevent Gradle from accessing the network during builds"
  keywords: ["gradle", "development", "build", "prevent", "accessing", "network", "during", "builds"]
  platform: [linux, macos]
  pipeline: false

- command: "gradle clean"
  description: "clear the build directory"
  keywords: ["gradle", "development", "build", "clear", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "gradle clean build --refresh-dependencies"
  description: "refresh the project dependencies"
  keywords: ["gradle", "development", "build", "refresh", "project", "dependencies"]
  platform: [linux, macos]
  pipeline: false

- command: "gradle dependencies"
  description: "list the project dependencies"
  keywords: ["gradle", "development", "build", "list", "project", "dependencies"]
  platform: [linux, macos]
  pipeline: false

- command: "gradle tasks"
  description: "list the tasks you can run in your project"
  keywords: ["gradle", "development", "build", "list", "tasks", "you", "can", "run", "your", "project"]
  platform: [linux, macos]
  pipeline: false

- command: "gradle tasks --all"
  description: "list all the tasks"
  keywords: ["gradle", "development", "build", "list", "all", "tasks"]
  platform: [linux, macos]
  pipeline: false

- command: "gradle init"
  description: "create a Gradle build for a new project or convert a Maven build to Gradle"
  keywords: ["gradle", "development", "build", "create", "new", "project", "convert", "maven"]
  platform: [linux, macos]
  pipeline: false

- command: "gradle init --type java-library"
  description: "create a Gradle build for a new Java project"
  keywords: ["gradle", "development", "build", "create", "new", "java", "project"]
  platform: [linux, macos]
  pipeline: false

- command: "grep <pattern> <file>"
  description: "search a file for a pattern"
  keywords: ["grep", "search", "file", "pattern"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: false

- command: "grep -in <pattern> <file>"
  description: "perform a case-insensitive search (with line numbers)"
  keywords: ["grep", "perform", "case-insensitive", "search", "(with", "line", "numbers)"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: false

- command: "grep -R <pattern> <dir>"
  description: "recursively grep for string <pattern> in <dir>"
  keywords: ["grep", "recursively", "string", "<pattern>", "<dir>"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: false

- command: "grep \"^00\" <file>                                               # Match lines starting with 00"
  description: "grep with regular expressions"
  keywords: ["grep", "regular", "expressions"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: false

- command: "grep -rnw <dir> -e <pattern>"
  description: "find all files that match <pattern> in <dir>"
  keywords: ["grep", "find", "all", "files", "match", "<pattern>", "<dir>"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: false

- command: "ps aux | grep '[h]ttpd'"
  description: "exclude grep from your grepped output of ps"
  keywords: ["grep", "exclude", "your", "grepped", "output"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: true

- command: "gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=output.pdf input.pdf"
  description: "reduce the size of a pdf file"
  keywords: ["gs", "reduce", "size", "pdf", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "gyb --email youremail@gmail.com --action estimate"
  description: "estimate the number and the size of all mails on youremail@gmail.com"
  keywords: ["gyb", "estimate", "number", "size", "all", "mails", "youremail@gmail.com"]
  platform: [linux, macos]
  pipeline: false

- command: "gyb --email youremail@gmail.com --action backup --local-folder \"~/MyLocalFolder/\""
  description: "backup from youremail@gmail.com to your local-folder"
  keywords: ["gyb", "backup", "youremail@gmail.com", "your", "local-folder"]
  platform: [linux, macos]
  pipeline: false

- command: "gyb --email youremail@gmail.com --search \"is:important OR is:starred\""
  description: "backup from youremail@gmail.com only important or starred emails to the"
  keywords: ["gyb", "backup", "youremail@gmail.com", "only", "important", "starred", "emails"]
  platform: [linux, macos]
  pipeline: false

- command: "gyb --email youremail@gmail.com --action restore --local-folder \"~/MyLocalFolder/\""
  description: "restore from your local-folder to youremail@gmail.com"
  keywords: ["gyb", "restore", "your", "local-folder", "youremail@gmail.com"]
  platform: [linux, macos]
  pipeline: false

- command: "gzip test.txt"
  description: "create a *.gz compressed file"
  keywords: ["gzip", "compression", "create", "*.gz", "compressed", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "gzip -c test.txt > test_custom.txt.gz"
  description: "create a *.gz compressed file to a specific location using -c option (standard out)"
  keywords: ["gzip", "compression", "create", "*.gz", "compressed", "file", "specific", "location", "using", "option", "(standard", "out)"]
  platform: [linux, macos]
  pipeline: false

- command: "gzip -d test.txt.gz"
  description: "uncompress a *.gz file"
  keywords: ["gzip", "compression", "uncompress", "*.gz", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "gzip < test.txt > test.txt.gz"
  description: "create a *.gz compressed file and keep the original"
  keywords: ["gzip", "compression", "create", "*.gz", "compressed", "file", "keep", "original"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo lshw"
  description: "display all hardware details"
  keywords: ["hardware-info", "display", "all", "hardware", "details"]
  platform: [linux, macos]
  pipeline: false

- command: "lsmod"
  description: "list currently loaded kernel modules"
  keywords: ["hardware-info", "list", "currently", "loaded", "kernel", "modules"]
  platform: [linux, macos]
  pipeline: false

- command: "find /lib/modules/$(uname -r) -type f -iname \"*.ko\""
  description: "list all available modules"
  keywords: ["hardware-info", "list", "all", "available", "modules"]
  platform: [linux, macos]
  pipeline: false

- command: "modprobe <module>"
  description: "load a module"
  keywords: ["hardware-info", "load", "module"]
  platform: [linux, macos]
  pipeline: false

- command: "modprobe -r <module>"
  description: "remove a module"
  keywords: ["hardware-info", "remove", "module"]
  platform: [linux, macos]
  pipeline: false

- command: "lspci"
  description: "list devices connected via pci bus"
  keywords: ["hardware-info", "list", "devices", "connected", "via", "pci", "bus"]
  platform: [linux, macos]
  pipeline: false

- command: "lspci -vvxxx"
  description: "debug output for pci devices (hex)"
  keywords: ["hardware-info", "debug", "output", "pci", "devices", "(hex)"]
  platform: [linux, macos]
  pipeline: false

- command: "cat /proc/cpuinfo"
  description: "display cpu hardware stats"
  keywords: ["hardware-info", "display", "cpu", "hardware", "stats"]
  platform: [linux, macos]
  pipeline: false

- command: "cat /proc/meminfo"
  description: "display memory hardware stats"
  keywords: ["hardware-info", "display", "memory", "hardware", "stats"]
  platform: [linux, macos]
  pipeline: false

- command: "dmesg"
  description: "output the kernel ring buffer"
  keywords: ["hardware-info", "output", "kernel", "ring", "buffer"]
  platform: [linux, macos]
  pipeline: false

- command: "head <file>"
  description: "show the first 10 lines of <file>"
  keywords: ["head", "show", "first", "lines", "<file>"]
  platform: [linux, macos]
  pipeline: false

- command: "head -n <number> <file>"
  description: "show the first <number> lines of <file>"
  keywords: ["head", "show", "first", "<number>", "lines", "<file>"]
  platform: [linux, macos]
  pipeline: false

- command: "head -c <number> <file>"
  description: "show the first <number> bytes of <file>"
  keywords: ["head", "show", "first", "<number>", "bytes", "<file>"]
  platform: [linux, macos]
  pipeline: false

- command: "hg clone"
  description: "clone a directory"
  keywords: ["hg", "vcs", "clone", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "hg add <file>"
  description: "add files to hg tracker"
  keywords: ["hg", "vcs", "add", "files", "tracker"]
  platform: [linux, macos]
  pipeline: false

- command: "hg add <dir>"
  description: "add all files in <dir> to hg tracker"
  keywords: ["hg", "vcs", "add", "all", "files", "<dir>", "tracker"]
  platform: [linux, macos]
  pipeline: false

- command: "hg commit -m <message>"
  description: "create a commit with all tracked changes and a message"
  keywords: ["hg", "vcs", "create", "commit", "all", "tracked", "changes", "message"]
  platform: [linux, macos]
  pipeline: false

- command: "hg push"
  description: "push commits to source repository"
  keywords: ["hg", "vcs", "push", "commits", "source", "repository"]
  platform: [linux, macos]
  pipeline: false

- command: "hg pull"
  description: "pull changes from source repository"
  keywords: ["hg", "vcs", "pull", "changes", "source", "repository"]
  platform: [linux, macos]
  pipeline: false

- command: "hg pull --rebase"
  description: "rebase local commits to disambiguate with remote repository"
  keywords: ["hg", "vcs", "rebase", "local", "commits", "disambiguate", "remote", "repository"]
  platform: [linux, macos]
  pipeline: false

- command: "history | awk '{CMD[$2]++;count++;}END { for (a in CMD)print CMD[a] \" \" CMD[a]/count*100 \"% \" a;}' | grep -v \"./\" | column -c3 -s \" \" -t | sort -nr | nl | head -n10"
  description: "see most used top 10 commands"
  keywords: ["history", "see", "most", "used", "top", "commands"]
  platform: [linux, macos]
  pipeline: true

- command: "http example.org  User-Agent:Bacon/1.0  'Cookie:valued-visitor=yes;foo=bar' X-Foo:Bar  Referer:http://httpie.org/"
  description: "set custom headers you can use the Header:Value notation"
  keywords: ["http", "set", "custom", "headers", "you", "can", "use", "header:value", "notation"]
  platform: [linux, macos]
  pipeline: false

- command: "http --verify=no https://example.org"
  description: "skip the HOST'S SSL CERTIFICATE VERIFICATION, you can pass"
  keywords: ["http", "skip", "host's", "ssl", "certificate", "verification", "you", "can", "pass"]
  platform: [linux, macos]
  pipeline: false

- command: "http --cert=client.pem https://example.org"
  description: "use a CLIENT SIDE CERTIFICATE for the SSL communication, you can pass"
  keywords: ["http", "use", "client", "side", "certificate", "ssl", "communication", "you", "can", "pass"]
  platform: [linux, macos]
  pipeline: false

- command: "http --session=user2 -a user2:password example.org X-Bar:Foo"
  description: "create or reuse a different session, simple specify a different name"
  keywords: ["http", "create", "reuse", "different", "session", "simple", "specify", "name"]
  platform: [linux, macos]
  pipeline: false

- command: "iconv -f iso-8859-1 -t utf-8 iconv.src -o /tmp/iconv.out"
  description: "convert file (iconv.src) from iso-8859-1 to utf-8 and save to /tmp/iconv.out"
  keywords: ["iconv", "convert", "file", "(iconv.src)", "iso-8859-1", "utf-8", "save", "/tmp/iconv.out"]
  platform: [linux, macos]
  pipeline: false

- command: "ifconfig <interface>"
  description: "display network settings of an interface"
  keywords: ["ifconfig", "display", "network", "settings", "interface"]
  platform: [linux, macos]
  pipeline: false

- command: "ifconfig -a"
  description: "display all interfaces, even if down"
  keywords: ["ifconfig", "display", "all", "interfaces", "even", "down"]
  platform: [linux, macos]
  pipeline: false

- command: "ifconfig wlan0 {up|down}"
  description: "take down / up the wireless adapter"
  keywords: ["ifconfig", "take", "down", "wireless", "adapter"]
  platform: [linux, macos]
  pipeline: true

- command: "ifconfig eth0 192.168.1.100 netmask 255.255.255.0"
  description: "set a static IP and netmask"
  keywords: ["ifconfig", "set", "static", "netmask"]
  platform: [linux, macos]
  pipeline: false

- command: "indent -i3 -kr -nut -l120"
  description: "Format C/C++ source according to the style of Kernighan and Ritchie (K&R),"
  keywords: ["indent", "format", "c/c++", "source", "according", "style", "kernighan", "ritchie", "(k&r)"]
  platform: [linux, macos]
  pipeline: false

- command: "install -o <username> -g <groupname> -m 700 -d /home/<username>/<directoryname>"
  description: "create a directory for a user with a group with permission 700"
  keywords: ["install", "create", "directory", "user", "group", "permission", "700"]
  platform: [linux, macos]
  pipeline: false

- command: "ip addr"
  description: "display all interfaces with addresses"
  keywords: ["ip", "networking", "display", "all", "interfaces", "addresses"]
  platform: [linux, macos]
  pipeline: false

- command: "ip link set dev wlan0 {up|down}"
  description: "take down / up the wireless adapter"
  keywords: ["ip", "networking", "take", "down", "wireless", "adapter"]
  platform: [linux, macos]
  pipeline: true

- command: "ip addr add 192.168.1.100/32 dev eth0"
  description: "set a static IP and netmask"
  keywords: ["ip", "networking", "set", "static", "netmask"]
  platform: [linux, macos]
  pipeline: false

- command: "ip addr del 192.168.1.100/32 dev eth0"
  description: "remove a IP from an interface"
  keywords: ["ip", "networking", "remove", "interface"]
  platform: [linux, macos]
  pipeline: false

- command: "ip address flush dev eth0"
  description: "remove all IPs from an interface"
  keywords: ["ip", "networking", "remove", "all", "ips", "interface"]
  platform: [linux, macos]
  pipeline: false

- command: "ip route"
  description: "display all routes"
  keywords: ["ip", "networking", "display", "all", "routes"]
  platform: [linux, macos]
  pipeline: false

- command: "ip -6 route"
  description: "display all routes for IPv6"
  keywords: ["ip", "networking", "display", "all", "routes", "ipv6"]
  platform: [linux, macos]
  pipeline: false

- command: "ip route add default via 192.168.1.1"
  description: "add default route via gateway IP"
  keywords: ["ip", "networking", "add", "default", "route", "via", "gateway"]
  platform: [linux, macos]
  pipeline: false

- command: "ip route add 192.168.0.0/24 dev eth0"
  description: "add route via interface"
  keywords: ["ip", "networking", "add", "route", "via", "interface"]
  platform: [linux, macos]
  pipeline: false

- command: "ip route get to 8.8.8.8"
  description: "get the route used for an destination"
  keywords: ["ip", "networking", "get", "route", "used", "destination"]
  platform: [linux, macos]
  pipeline: false

- command: "ip link set dev eth0 address aa:bb:cc:dd:ee:ff"
  description: "change your mac address "
  keywords: ["ip", "networking", "change", "your", "mac", "address"]
  platform: [linux, macos]
  pipeline: false

- command: "ip neighbor show"
  description: "view neighbors (using ARP and NDP)"
  keywords: ["ip", "networking", "view", "neighbors", "(using", "arp", "ndp)"]
  platform: [linux, macos]
  pipeline: false

- command: "watch --interval 0 'iptables -nvL | grep -v \"0     0\"'"
  description: "show hit for rules with auto refresh"
  keywords: ["iptables", "networking", "show", "hit", "rules", "auto", "refresh"]
  platform: [linux, macos]
  pipeline: true

- command: "watch -d -n 2 iptables -nvL"
  description: "show hit for rule with auto refresh and highlight any changes since the last refresh"
  keywords: ["iptables", "networking", "show", "hit", "rule", "auto", "refresh", "highlight", "any", "changes", "since", "last"]
  platform: [linux, macos]
  pipeline: false

- command: "iptables -A INPUT -i eth0 -p tcp --dport 902 -j REJECT --reject-with icmp-port-unreachable"
  description: "block port 902 and hide this port from nmap"
  keywords: ["iptables", "networking", "block", "port", "902", "hide", "this", "nmap"]
  platform: [linux, macos]
  pipeline: false

- command: "iptables ... -m comment --comment \"This rule is here for this reason\""
  description: "add a comment to a rule"
  keywords: ["iptables", "networking", "add", "comment", "rule"]
  platform: [linux, macos]
  pipeline: false

- command: "iptables -L INPUT --line-numbers"
  description: "remove or insert a rule"
  keywords: ["iptables", "networking", "remove", "insert", "rule"]
  platform: [linux, macos]
  pipeline: false

- command: "/connect <server>"
  description: "connect to an IRC server"
  keywords: ["irssi", "connect", "irc", "server"]
  platform: [linux, macos]
  pipeline: false

- command: "/join #<channel>"
  description: "join a channel"
  keywords: ["irssi", "join", "channel"]
  platform: [linux, macos]
  pipeline: false

- command: "/nick <nickname>"
  description: "set a nickname"
  keywords: ["irssi", "set", "nickname"]
  platform: [linux, macos]
  pipeline: false

- command: "/msg <nickname>"
  description: "send a private message to a user"
  keywords: ["irssi", "send", "private", "message", "user"]
  platform: [linux, macos]
  pipeline: false

- command: "/wc"
  description: "close the current channel window"
  keywords: ["irssi", "close", "current", "channel", "window"]
  platform: [linux, macos]
  pipeline: false

- command: "ALT+<number>, eg. ALT+1, ALT+2"
  description: "switch between channel windows"
  keywords: ["irssi", "switch", "between", "channel", "windows"]
  platform: [linux, macos]
  pipeline: false

- command: "/names"
  description: "list the nicknames within the active channel"
  keywords: ["irssi", "list", "nicknames", "within", "active", "channel"]
  platform: [linux, macos]
  pipeline: false

- command: "/topic <description>"
  description: "change the channel topic"
  keywords: ["irssi", "change", "channel", "topic"]
  platform: [linux, macos]
  pipeline: false

- command: "/ignore #foo,#bar JOINS PARTS QUITS NICKS   # Quieten only channels `#foo`, `#bar`"
  description: "limit channel background noise (joins, parts, quits, etc.)"
  keywords: ["irssi", "limit", "channel", "background", "noise", "(joins", "parts", "quits", "etc.)"]
  platform: [linux, macos]
  pipeline: false

- command: "/save"
  description: "save the current Irssi session config into the configuration file"
  keywords: ["irssi", "save", "current", "session", "config", "into", "configuration", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "/exit"
  description: "quit Irssi"
  keywords: ["irssi", "quit"]
  platform: [linux, macos]
  pipeline: false

- command: "iwconfig wlan0"
  description: "display wireless settings of the first wireless adapter"
  keywords: ["iwconfig", "networking", "display", "wireless", "settings", "first", "adapter"]
  platform: [linux, macos]
  pipeline: false

- command: "iwconfig wlan0 txpower {on|auto|off}"
  description: "take down / up the wireless adapter"
  keywords: ["iwconfig", "networking", "take", "down", "wireless", "adapter"]
  platform: [linux, macos]
  pipeline: true

- command: "iwconfig wlan0 mode {managed|ad-hoc|monitor}"
  description: "change the mode of the wireless adapter"
  keywords: ["iwconfig", "networking", "change", "mode", "wireless", "adapter"]
  platform: [linux, macos]
  pipeline: true

- command: "jar cf <file.jar> *"
  description: "archive all files in the current directory into a jar file"
  keywords: ["jar", "java", "archive", "all", "files", "current", "directory", "into", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "jar cfm <file.jar> <manifest_file> *"
  description: "create a jar file using a pre-existing manifest file"
  keywords: ["jar", "java", "create", "file", "using", "pre-existing", "manifest"]
  platform: [linux, macos]
  pipeline: false

- command: "jar xf <file.jar>"
  description: "extract all files from a jar file in the current directory"
  keywords: ["jar", "java", "extract", "all", "files", "file", "current", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "jar xf <file.jar> <file_to_extract>"
  description: "extract only certain files from a jar file"
  keywords: ["jar", "java", "extract", "only", "certain", "files", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "jar tf <file.jar>"
  description: "list the content of a jar file"
  keywords: ["jar", "java", "list", "content", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "jar tf <file.jar>"
  description: "list the content of a jar file with verbose output"
  keywords: ["jar", "java", "list", "content", "file", "verbose", "output"]
  platform: [linux, macos]
  pipeline: false

- command: "java -jar <filename.jar>"
  description: "run a java file"
  keywords: ["java", "jar", "run", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "java -jar <filename.jar> <arg1> <arg2> ..."
  description: "pass arguments to your java program"
  keywords: ["java", "jar", "pass", "arguments", "your", "program"]
  platform: [linux, macos]
  pipeline: false

- command: "java -showversion"
  description: "get the version of the installed java enviroment"
  keywords: ["java", "jar", "get", "version", "installed", "enviroment"]
  platform: [linux, macos]
  pipeline: false

- command: "java -Xms256m -Xmx2g -Xss1m -jar <filename.jar>"
  description: "set the intial memory size to be used by the program"
  keywords: ["java", "jar", "set", "intial", "memory", "size", "used", "program"]
  platform: [linux, macos]
  pipeline: false

- command: "java -classpath <classpath> -jar <filename.jar>"
  description: "use the classpath variable"
  keywords: ["java", "jar", "use", "classpath", "variable"]
  platform: [linux, macos]
  pipeline: false

- command: "java -cp <path> <class> <arg>"
  description: "execute a java class"
  keywords: ["java", "jar", "execute", "class"]
  platform: [linux, macos]
  pipeline: false

- command: "javac HelloWorld.java"
  description: "compile a simple source file"
  keywords: ["javac", "compile", "simple", "source", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "javac *.java"
  description: "compile several source files"
  keywords: ["javac", "compile", "several", "source", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "javac -d build HelloWorld.java"
  description: "specify another destination directory"
  keywords: ["javac", "specify", "another", "destination", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "javac -sourcepath src/dependencies/java Main.java"
  description: "use another source directory for source dependencies"
  keywords: ["javac", "use", "another", "source", "directory", "dependencies"]
  platform: [linux, macos]
  pipeline: false

- command: "javac -classpath lib/commons-cli-1.4.jar:lib/log4j-1.2.12.jar HelloWorld.java"
  description: "define where compiled dependencies should be searched"
  keywords: ["javac", "define", "where", "compiled", "dependencies", "should", "searched"]
  platform: [linux, macos]
  pipeline: false

- command: "javac -Werror NoWarning.java"
  description: "consider warnings as errors"
  keywords: ["javac", "consider", "warnings", "errors"]
  platform: [linux, macos]
  pipeline: false

- command: "javac -source 1.7 Java7.java"
  description: "compile Java 7 code"
  keywords: ["javac", "compile", "java", "code"]
  platform: [linux, macos]
  pipeline: false

- command: "javac -verbose *.java"
  description: "make the compiler more verbose"
  keywords: ["javac", "make", "compiler", "more", "verbose"]
  platform: [linux, macos]
  pipeline: false

- command: "javac -deprecation App.java"
  description: "display usage of deprecated APIs"
  keywords: ["javac", "display", "usage", "deprecated", "apis"]
  platform: [linux, macos]
  pipeline: false

- command: "javac -g HelloWorld.java"
  description: "include debugging info in class files"
  keywords: ["javac", "include", "debugging", "info", "class", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "javac -version"
  description: "display version"
  keywords: ["javac", "display", "version"]
  platform: [linux, macos]
  pipeline: false

- command: "javac -help"
  description: "get help"
  keywords: ["javac", "get", "help"]
  platform: [linux, macos]
  pipeline: false

- command: "jobs"
  description: "see the background running commands"
  keywords: ["jobs", "see", "background", "running", "commands"]
  platform: [linux, macos]
  pipeline: false

- command: "jobs -l"
  description: "see the background running commands with PID"
  keywords: ["jobs", "see", "background", "running", "commands", "pid"]
  platform: [linux, macos]
  pipeline: false

- command: "jobs -r"
  description: "see the running jobs only"
  keywords: ["jobs", "see", "running", "only"]
  platform: [linux, macos]
  pipeline: false

- command: "jobs -s"
  description: "see stopped jobs only"
  keywords: ["jobs", "see", "stopped", "only"]
  platform: [linux, macos]
  pipeline: false

- command: "journalctl -f"
  description: "actively follow log (like tail -f)"
  keywords: ["journalctl", "actively", "follow", "log", "(like", "tail", "-f)"]
  platform: [linux, macos]
  pipeline: false

- command: "journalctl -b -p err"
  description: "display all errors since last boot"
  keywords: ["journalctl", "display", "all", "errors", "since", "last", "boot"]
  platform: [linux, macos]
  pipeline: false

- command: "journalctl --since=2012-10-15 --until=\"2011-10-16 23:59:59\""
  description: "filter by time period"
  keywords: ["journalctl", "filter", "time", "period"]
  platform: [linux, macos]
  pipeline: false

- command: "journalctl -F _SYSTEMD_UNIT"
  description: "show list of systemd units logged in journal"
  keywords: ["journalctl", "show", "list", "systemd", "units", "logged", "journal"]
  platform: [linux, macos]
  pipeline: false

- command: "journalctl -u dbus"
  description: "filter by specific unit"
  keywords: ["journalctl", "filter", "specific", "unit"]
  platform: [linux, macos]
  pipeline: false

- command: "journalctl /usr/bin/dbus-daemon"
  description: "filter by executable name"
  keywords: ["journalctl", "filter", "executable", "name"]
  platform: [linux, macos]
  pipeline: false

- command: "journalctl _PID=123"
  description: "filter by PID"
  keywords: ["journalctl", "filter", "pid"]
  platform: [linux, macos]
  pipeline: false

- command: "journalctl _COMM=sshd"
  description: "filter by Command, e.g., sshd"
  keywords: ["journalctl", "filter", "command", "e.g", "sshd"]
  platform: [linux, macos]
  pipeline: false

- command: "journalctl _COMM=crond --since '10:00' --until '11:00'"
  description: "filter by Command and time period"
  keywords: ["journalctl", "filter", "command", "time", "period"]
  platform: [linux, macos]
  pipeline: false

- command: "journalctl --list-boots"
  description: "list all available boots"
  keywords: ["journalctl", "list", "all", "available", "boots"]
  platform: [linux, macos]
  pipeline: false

- command: "journalctl _UID=1000"
  description: "filter by specific User ID e.g., user id 1000"
  keywords: ["journalctl", "filter", "specific", "user", "e.g", "1000"]
  platform: [linux, macos]
  pipeline: false

- command: "journalctl -t systemd-resolved"
  description: "filter by specific SYSLOG_INDENTIFIER"
  keywords: ["journalctl", "filter", "specific", "syslog_indentifier"]
  platform: [linux, macos]
  pipeline: false

- command: "jq \".\" < filename.json"
  description: "pretty print the json"
  keywords: ["jq", "pretty", "print", "json"]
  platform: [linux, macos]
  pipeline: false

- command: "jq '.foo'"
  description: "access the value at key \"foo\""
  keywords: ["jq", "access", "value", "key", "\"foo\""]
  platform: [linux, macos]
  pipeline: false

- command: "jq '.[0]'"
  description: "access first list item"
  keywords: ["jq", "access", "first", "list", "item"]
  platform: [linux, macos]
  pipeline: false

- command: "jrnl"
  description: "add entry to default jrnl (from your configured text editor)"
  keywords: ["jrnl", "add", "entry", "default", "(from", "your", "configured", "text", "editor)"]
  platform: [linux, macos]
  pipeline: false

- command: "jrnl <entry>"
  description: "add <entry> to default jrnl"
  keywords: ["jrnl", "add", "<entry>", "default"]
  platform: [linux, macos]
  pipeline: false

- command: "jrnl --tags"
  description: "list of tags"
  keywords: ["jrnl", "list", "tags"]
  platform: [linux, macos]
  pipeline: false

- command: "jrnl @tag"
  description: "entries per tag"
  keywords: ["jrnl", "entries", "per", "tag"]
  platform: [linux, macos]
  pipeline: false

- command: "jrnl --export json"
  description: "export jrnl as json"
  keywords: ["jrnl", "export", "json"]
  platform: [linux, macos]
  pipeline: false

- command: "jrnl -from 2009 -until may"
  description: "entries in a timeframe"
  keywords: ["jrnl", "entries", "timeframe"]
  platform: [linux, macos]
  pipeline: false

- command: "\"editor\": \"F:\\Powerpack\\Sublime\\sublime_text.exe -w\" # Windows"
  description: "add Sublime text to .jrnl_config"
  keywords: ["jrnl", "add", "sublime", "text", "jrnl_config"]
  platform: [linux, macos]
  pipeline: false

- command: "kill -15 <pid>"
  description: "kill a process gracefully"
  keywords: ["kill", "process", "gracefully"]
  platform: [linux, macos]
  pipeline: false

- command: "kill -9 <pid>"
  description: "kill a process forcefully"
  keywords: ["kill", "process", "forcefully"]
  platform: [linux, macos]
  pipeline: false

- command: "kubectl -h"
  description: "display list of all available commands"
  keywords: ["kubectl", "display", "list", "all", "available", "commands"]
  platform: [linux, macos]
  pipeline: false

- command: "kubectl command_name -h"
  description: "display an explanation of a specific command"
  keywords: ["kubectl", "display", "explanation", "specific", "command"]
  platform: [linux, macos]
  pipeline: false

- command: "kubectl api-resources"
  description: "display complete list of supported resources"
  keywords: ["kubectl", "display", "complete", "list", "supported", "resources"]
  platform: [linux, macos]
  pipeline: false

- command: "kubectl explain resource_name"
  description: "display an explanation of a specific resource"
  keywords: ["kubectl", "display", "explanation", "specific", "resource"]
  platform: [linux, macos]
  pipeline: false

- command: "kubectl explain resource_name.field_name"
  description: "display an explanation of a specific field of resource"
  keywords: ["kubectl", "display", "explanation", "specific", "field", "resource"]
  platform: [linux, macos]
  pipeline: false

- command: "kubectl options"
  description: "display list of global command-line options"
  keywords: ["kubectl", "display", "list", "global", "command-line", "options"]
  platform: [linux, macos]
  pipeline: false

- command: "source <(kubectl completion bash)"
  description: "set up `kubectl` autocomplete in bash (press Tab to use)"
  keywords: ["kubectl", "set", "`kubectl`", "autocomplete", "bash", "(press", "tab", "use)"]
  platform: [linux, macos]
  pipeline: false

- command: "kubectl get all -A"
  description: "display all resources in all namespaces"
  keywords: ["kubectl", "display", "all", "resources", "namespaces"]
  platform: [linux, macos]
  pipeline: false

- command: "kubectl get events --sort-by='.metadata.creationTimestamp'"
  description: "order events by `creationTimestamp`"
  keywords: ["kubectl", "order", "events", "`creationtimestamp`"]
  platform: [linux, macos]
  pipeline: false

- command: "kubectl config use-context CONTEXT_NAME [options]"
  description: "switch context of a specific cluster"
  keywords: ["kubectl", "switch", "context", "specific", "cluster"]
  platform: [linux, macos]
  pipeline: false

- command: "v"
  description: "edit the current file in $EDITOR"
  keywords: ["less", "edit", "current", "file", "$editor"]
  platform: [linux, macos]
  pipeline: false

- command: "less +F <filename>"
  description: "start less in follow-mode"
  keywords: ["less", "start", "follow-mode"]
  platform: [linux, macos]
  pipeline: false

- command: "less -X"
  description: "disable the terminal refresh when exiting"
  keywords: ["less", "disable", "terminal", "refresh", "when", "exiting"]
  platform: [linux, macos]
  pipeline: false

- command: "s <filename>"
  description: "save the contents to a file"
  keywords: ["less", "save", "contents", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "ldconfig -p"
  description: "display available libraries"
  keywords: ["lib", "display", "available", "libraries"]
  platform: [linux, macos]
  pipeline: false

- command: "ldconfig"
  description: "update library resources"
  keywords: ["lib", "update", "library", "resources"]
  platform: [linux, macos]
  pipeline: false

- command: "ldd"
  description: "display libraries and file location"
  keywords: ["lib", "display", "libraries", "file", "location"]
  platform: [linux, macos]
  pipeline: false

- command: "\"Dynamic Libraries\" (.so.)"
  description: "libraries available to apps in real-time"
  keywords: ["lib", "libraries", "available", "apps", "real-time"]
  platform: [linux, macos]
  pipeline: false

- command: "\"Static Libraries\" (.a.)"
  description: "libraries only available to apps when installed (imported)"
  keywords: ["lib", "libraries", "only", "available", "apps", "when", "installed", "(imported)"]
  platform: [linux, macos]
  pipeline: false

- command: "/lib"
  description: "standard (usual) library file location"
  keywords: ["lib", "standard", "(usual)", "library", "file", "location"]
  platform: [linux, macos]
  pipeline: false

- command: "/etc/ld.so.cache 	# (binary)"
  description: "sofware-accessible source for library info "
  keywords: ["lib", "sofware-accessible", "source", "library", "info"]
  platform: [linux, macos]
  pipeline: false

- command: "/etc/ld.so.conf 	# (points to /etc/ld.so.conf.d)"
  description: "human-readable source for library info"
  keywords: ["lib", "human-readable", "source", "library", "info"]
  platform: [linux, macos]
  pipeline: false

- command: "ln -s <source-location> <symlink-location>"
  description: "create a symlink"
  keywords: ["ln", "create", "symlink"]
  platform: [linux, macos]
  pipeline: false

- command: "ln -sf <source-location> <symlink-location>"
  description: "symlink, while overwriting existing destination files"
  keywords: ["ln", "symlink", "while", "overwriting", "existing", "destination", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "ls <dir>"
  description: "display everything in <dir>, excluding hidden files"
  keywords: ["ls", "display", "everything", "<dir>", "excluding", "hidden", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "ls -a <dir>"
  description: "display everything in <dir>, including hidden files"
  keywords: ["ls", "display", "everything", "<dir>", "including", "hidden", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "ls -lh <dir>"
  description: "display all files, along with the size (with unit suffixes) and timestamp"
  keywords: ["ls", "display", "all", "files", "along", "size", "(with", "unit", "suffixes)", "timestamp"]
  platform: [linux, macos]
  pipeline: false

- command: "ls -S <dir>"
  description: "display files, sorted by size"
  keywords: ["ls", "display", "files", "sorted", "size"]
  platform: [linux, macos]
  pipeline: false

- command: "ls -d */ <dir>"
  description: "display directories only"
  keywords: ["ls", "display", "directories", "only"]
  platform: [linux, macos]
  pipeline: false

- command: "ls -d .*/ */ <dir>"
  description: "display directories only, include hidden"
  keywords: ["ls", "display", "directories", "only", "include", "hidden"]
  platform: [linux, macos]
  pipeline: false

- command: "ls -ltc"
  description: "display all files sorted by changed date, most recent first"
  keywords: ["ls", "display", "all", "files", "sorted", "changed", "date", "most", "recent", "first"]
  platform: [linux, macos]
  pipeline: false

- command: "ls -lt"
  description: "display files sorted by create time"
  keywords: ["ls", "display", "files", "sorted", "create", "time"]
  platform: [linux, macos]
  pipeline: false

- command: "ls -1"
  description: "display files in a single column"
  keywords: ["ls", "display", "files", "single", "column"]
  platform: [linux, macos]
  pipeline: false

- command: "/bin/ls -le"
  description: "show ACLs (MacOS)"
  keywords: ["ls", "show", "acls", "(macos)"]
  platform: [linux, macos]
  pipeline: false

- command: "ls -R"
  description: "show all the subtree files (Recursive Mode)"
  keywords: ["ls", "show", "all", "subtree", "files", "(recursive", "mode)"]
  platform: [linux, macos]
  pipeline: false

- command: "lsblk"
  description: "show all available block devices along with their partitioning schemes"
  keywords: ["lsblk", "show", "all", "available", "block", "devices", "along", "their", "partitioning", "schemes"]
  platform: [linux, macos]
  pipeline: false

- command: "lsblk --scsi"
  description: "show SCSI devices"
  keywords: ["lsblk", "show", "scsi", "devices"]
  platform: [linux, macos]
  pipeline: false

- command: "lsblk /dev/sda"
  description: "show a specific device"
  keywords: ["lsblk", "show", "specific", "device"]
  platform: [linux, macos]
  pipeline: false

- command: "lsblk --discard"
  description: "verify TRIM support"
  keywords: ["lsblk", "verify", "trim", "support"]
  platform: [linux, macos]
  pipeline: false

- command: "lsblk --fs"
  description: "fetch info about filesystems"
  keywords: ["lsblk", "fetch", "info", "about", "filesystems"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo lsof -i4"
  description: "list all IPv4 network files"
  keywords: ["lsof", "list", "all", "ipv4", "network", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo lsof -i6"
  description: "list all IPv6 network files"
  keywords: ["lsof", "list", "all", "ipv6", "network", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "lsof -i"
  description: "list all open sockets"
  keywords: ["lsof", "list", "all", "open", "sockets"]
  platform: [linux, macos]
  pipeline: false

- command: "lsof -Pnl +M -i4"
  description: "list all listening ports"
  keywords: ["lsof", "list", "all", "listening", "ports"]
  platform: [linux, macos]
  pipeline: false

- command: "lsof -i TCP:80"
  description: "find which program is using the port 80"
  keywords: ["lsof", "find", "which", "program", "using", "port"]
  platform: [linux, macos]
  pipeline: false

- command: "lsof -i@192.168.1.5"
  description: "list all connections to a specific host"
  keywords: ["lsof", "list", "all", "connections", "specific", "host"]
  platform: [linux, macos]
  pipeline: false

- command: "lsof <path>"
  description: "list all processes accessing a particular file/directory"
  keywords: ["lsof", "list", "all", "processes", "accessing", "particular", "file/directory"]
  platform: [linux, macos]
  pipeline: false

- command: "lsof -u <username>"
  description: "list all files open for a particular user"
  keywords: ["lsof", "list", "all", "files", "open", "particular", "user"]
  platform: [linux, macos]
  pipeline: false

- command: "lsof -c <command>"
  description: "list all files/network connections a command is using"
  keywords: ["lsof", "list", "all", "files/network", "connections", "command", "using"]
  platform: [linux, macos]
  pipeline: false

- command: "lsof -p <pid>"
  description: "list all files a process has open"
  keywords: ["lsof", "list", "all", "files", "process", "open"]
  platform: [linux, macos]
  pipeline: false

- command: "lsof +f -- <mount-point>"
  description: "list all files open mounted at /mount/point"
  keywords: ["lsof", "list", "all", "files", "open", "mounted", "/mount/point"]
  platform: [linux, macos]
  pipeline: false

- command: "man -t bash | ps2pdf - bash.pdf"
  description: "convert a man page to pdf"
  keywords: ["man", "convert", "page", "pdf"]
  platform: [linux, macos]
  pipeline: true

- command: "man 7 ascii"
  description: "view the ascii chart"
  keywords: ["man", "view", "ascii", "chart"]
  platform: [linux, macos]
  pipeline: false

- command: "cat /private/etc/man.conf"
  description: "see config"
  keywords: ["man", "see", "config"]
  platform: [linux, macos]
  pipeline: false

- command: "man -k <keyword>"
  description: "check the existence of a keyword in all of man pages"
  keywords: ["man", "check", "existence", "keyword", "all", "pages"]
  platform: [linux, macos]
  pipeline: false

- command: "mvn org.apache.maven.plugins:maven-dependency-plugin:get -Dartifact=org.apache.geronimo.specs:specs:1.2 -Dpackaging=pom -Dtransitive=false"
  description: "manually download artifacts"
  keywords: ["maven", "manually", "download", "artifacts"]
  platform: [linux, macos]
  pipeline: false

- command: "mdadm --create /dev/md${M} --level=raid5 --raid-devices=4 /dev/sd{a,b,c,d,e}${P} --spare-devices=/dev/sdf1"
  description: "create (initialize) a new array"
  keywords: ["mdadm", "create", "(initialize)", "new", "array"]
  platform: [linux, macos]
  pipeline: false

- command: "mdadm --assemble /dev/md${M} /dev/sd{a,b,c,d,e}${P}"
  description: "manually assemble (activate) an existing array"
  keywords: ["mdadm", "manually", "assemble", "(activate)", "existing", "array"]
  platform: [linux, macos]
  pipeline: false

- command: "mdadm --assemble --scan"
  description: "automatically assemble (activate) all existing arrays"
  keywords: ["mdadm", "automatically", "assemble", "(activate)", "all", "existing", "arrays"]
  platform: [linux, macos]
  pipeline: false

- command: "mdadm --stop /dev/md${M}"
  description: "stop an assembled (active) array"
  keywords: ["mdadm", "stop", "assembled", "(active)", "array"]
  platform: [linux, macos]
  pipeline: false

- command: "mdadm --query /dev/md${M}"
  description: "see array configuration"
  keywords: ["mdadm", "see", "array", "configuration"]
  platform: [linux, macos]
  pipeline: false

- command: "mdadm --query --examine /dev/sd${D}${P}"
  description: "see array component configuration (dump superblock content)"
  keywords: ["mdadm", "see", "array", "component", "configuration", "(dump", "superblock", "content)"]
  platform: [linux, macos]
  pipeline: false

- command: "mdadm --detail /dev/md${M}"
  description: "see detailed array confiration/status"
  keywords: ["mdadm", "see", "detailed", "array", "confiration/status"]
  platform: [linux, macos]
  pipeline: false

- command: "mdadm --detail --scan > /etc/mdadm/mdadm.conf"
  description: "save existing arrays configuration"
  keywords: ["mdadm", "save", "existing", "arrays", "configuration"]
  platform: [linux, macos]
  pipeline: false

- command: "mdadm --zero-superblock /dev/sd${D}${P}"
  description: "erase array component superblock"
  keywords: ["mdadm", "erase", "array", "component", "superblock"]
  platform: [linux, macos]
  pipeline: false

- command: "mdadm --manage /dev/md${M} --fail /dev/sd${D}${P}"
  description: "manually mark a component as failed"
  keywords: ["mdadm", "manually", "mark", "component", "failed"]
  platform: [linux, macos]
  pipeline: false

- command: "mdadm --manage /dev/md${M} --remove /dev/sd${D}${P}"
  description: "remove a failed component"
  keywords: ["mdadm", "remove", "failed", "component"]
  platform: [linux, macos]
  pipeline: false

- command: "sfdisk -d /dev/sd${D,sane} | sfdisk /dev/sd${D,new}"
  description: "prepare (format) a new device to replace a failed one"
  keywords: ["mdadm", "prepare", "(format)", "new", "device", "replace", "failed", "one"]
  platform: [linux, macos]
  pipeline: true

- command: "mdadm --manage /dev/md${M} --add /dev/sd${D,new}${P}"
  description: "add new component to an existing array"
  keywords: ["mdadm", "add", "new", "component", "existing", "array"]
  platform: [linux, macos]
  pipeline: false

- command: "cat /proc/mdstat"
  description: "see assembled (active) arrays status"
  keywords: ["mdadm", "see", "assembled", "(active)", "arrays", "status"]
  platform: [linux, macos]
  pipeline: false

- command: "mdadm --assemble /dev/md${M} /dev/sd{a,b,c,d,e}${P} --name=\"${name}:${M}\" --update=name"
  description: "rename a device"
  keywords: ["mdadm", "rename", "device"]
  platform: [linux, macos]
  pipeline: false

- command: "minikube start --vm-driver=virtualbox"
  description: "start with virtualbox driver"
  keywords: ["minikube", "start", "virtualbox", "driver"]
  platform: [linux, macos]
  pipeline: false

- command: "minikube docker-env"
  description: "configure docker environment variables"
  keywords: ["minikube", "configure", "docker", "environment", "variables"]
  platform: [linux, macos]
  pipeline: false

- command: "minikube dashboard"
  description: "start view the dashboard in a browser"
  keywords: ["minikube", "start", "view", "dashboard", "browser"]
  platform: [linux, macos]
  pipeline: false

- command: "minikube service list"
  description: "list all services"
  keywords: ["minikube", "list", "all", "services"]
  platform: [linux, macos]
  pipeline: false

- command: "minikube service <service>"
  description: "start a service in a browser"
  keywords: ["minikube", "start", "service", "browser"]
  platform: [linux, macos]
  pipeline: false

- command: "mkdir -p foo/bar/baz"
  description: "create nested directories"
  keywords: ["mkdir", "create", "nested", "directories"]
  platform: [linux, macos]
  pipeline: false

- command: "mkdir -p foo/{bar,baz}"
  description: "create foo/bar and foo/baz directories"
  keywords: ["mkdir", "create", "foo/bar", "foo/baz", "directories"]
  platform: [linux, macos]
  pipeline: false

- command: "mkdir -p foo/{bar,baz/{zip,zap}}"
  description: "create the foo/bar, foo/baz, foo/baz/zip and foo/baz/zap directories"
  keywords: ["mkdir", "create", "foo/bar", "foo/baz", "foo/baz/zip", "foo/baz/zap", "directories"]
  platform: [linux, macos]
  pipeline: false

- command: "more +5 <file>"
  description: "show <file> beginning at line number 5"
  keywords: ["more", "show", "<file>", "beginning", "line", "number"]
  platform: [linux, macos]
  pipeline: false

- command: "mount -o remount,rw /"
  description: "mount / partition as read-write in repair mode"
  keywords: ["mount", "partition", "read-write", "repair", "mode"]
  platform: [linux, macos]
  pipeline: false

- command: "mount --bind <source> <destination>"
  description: "bind mount path to a second location"
  keywords: ["mount", "bind", "path", "second", "location"]
  platform: [linux, macos]
  pipeline: false

- command: "mount -o uid=username,gid=usergroup /dev/sdx /mnt/xxx"
  description: "mount Usb disk as user writable"
  keywords: ["mount", "usb", "disk", "user", "writable"]
  platform: [linux, macos]
  pipeline: false

- command: "mount -t nfs <host>:<remote-dir> <local-dir>"
  description: "mount a remote NFS directory"
  keywords: ["mount", "remote", "nfs", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "mount -o loop disk1.iso /mnt/disk"
  description: "mount an ISO"
  keywords: ["mount", "iso"]
  platform: [linux, macos]
  pipeline: false

- command: "mv <src> <dest>"
  description: "move a file from one place to another"
  keywords: ["mv", "move", "file", "one", "place", "another"]
  platform: [linux, macos]
  pipeline: false

- command: "mv -f <src> <dest>"
  description: "move a file from one place to another and automatically overwrite if the destination file exists"
  keywords: ["mv", "move", "file", "one", "place", "another", "automatically", "overwrite", "destination", "exists"]
  platform: [linux, macos]
  pipeline: false

- command: "mv -i <src> <dest>"
  description: "move a file from one place to another but ask before overwriting an existing file"
  keywords: ["mv", "move", "file", "one", "place", "another", "but", "ask", "before", "overwriting", "existing"]
  platform: [linux, macos]
  pipeline: false

- command: "mv -n <src> <dest>"
  description: "move a file from one place to another but never overwrite anything"
  keywords: ["mv", "move", "file", "one", "place", "another", "but", "never", "overwrite", "anything"]
  platform: [linux, macos]
  pipeline: false

- command: "mv -t <dest> <file>..."
  description: "move listed file(s) to a directory"
  keywords: ["mv", "move", "listed", "file(s)", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "mysql -h <host> -u <username> -p"
  description: "connect to a database"
  keywords: ["mysql", "database", "connect"]
  niche: "database"
  platform: [linux, macos]
  pipeline: false

- command: "mysqldump --all-databases --all-routines -u <username> -p > ~/dump.sql"
  description: "backup all databases"
  keywords: ["mysql", "database", "backup", "all", "databases"]
  niche: "database"
  platform: [linux, macos]
  pipeline: false

- command: "mysql -u <username> -p  < ~/fulldump.sql"
  description: "restore all databases"
  keywords: ["mysql", "database", "restore", "all", "databases"]
  niche: "database"
  platform: [linux, macos]
  pipeline: false

- command: "CREATE DATABASE owa CHARACTER SET utf8 COLLATE utf8_general_ci;"
  description: "create a database in utf8 charset"
  keywords: ["mysql", "database", "create", "utf8", "charset"]
  niche: "database"
  platform: [linux, macos]
  pipeline: false

- command: "GRANT ALL PRIVILEGES ON database.* TO 'user'@'localhost'IDENTIFIED BY 'password' WITH GRANT OPTION;"
  description: "add a user and give rights on the given database"
  keywords: ["mysql", "database", "add", "user", "give", "rights", "given"]
  niche: "database"
  platform: [linux, macos]
  pipeline: false

- command: "SHOW GRANTS FOR CURRENT_USER();"
  description: "list the privileges granted to the account that you are using to connect to the server. Any of the 3 statements will work. "
  keywords: ["mysql", "database", "list", "privileges", "granted", "account", "you", "using", "connect", "server", "any", "statements", "work"]
  niche: "database"
  platform: [linux, macos]
  pipeline: false

- command: "SHOW PROCEDURE STATUS;"
  description: "check stored procedure"
  keywords: ["mysql", "database", "check", "stored", "procedure"]
  niche: "database"
  platform: [linux, macos]
  pipeline: false

- command: "SHOW FUNCTION STATUS;"
  description: "check stored function"
  keywords: ["mysql", "database", "check", "stored", "function"]
  niche: "database"
  platform: [linux, macos]
  pipeline: false

- command: "mysqldump -u<username> -p<password> <database> > db.sql"
  description: "dump a database to a file (Note that your password will appear in your command history!)"
  keywords: ["mysqldump", "database", "dump", "file", "(note", "your", "password", "appear", "command", "history!)"]
  platform: [linux, macos]
  pipeline: false

- command: "mysqldump -u<username> -p <database> > db.sql"
  description: "dump a database to a file"
  keywords: ["mysqldump", "database", "dump", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "mysqldump -u<username> -p<password> <database> | gzip -9 > db.sql"
  description: "dump a database to a .tgz file (Note that your password will appear in your command history!)"
  keywords: ["mysqldump", "database", "dump", "tgz", "file", "(note", "your", "password", "appear", "command", "history!)"]
  platform: [linux, macos]
  pipeline: true

- command: "mysqldump -u<username> -p <database> | gzip -9 > db.sql"
  description: "dump a database to a .tgz file"
  keywords: ["mysqldump", "database", "dump", "tgz", "file"]
  platform: [linux, macos]
  pipeline: true

- command: "mysqldump -u<username> -p<password> --all-databases > all-databases.sql"
  description: "dump all databases to a file (Note that your password will appear in your command history!)"
  keywords: ["mysqldump", "database", "dump", "all", "databases", "file", "(note", "your", "password", "appear", "command", "history!)"]
  platform: [linux, macos]
  pipeline: false

- command: "mysqldump -u<username> -p --all-databases > all-databases.sql"
  description: "dump all databases to a file"
  keywords: ["mysqldump", "database", "dump", "all", "databases", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "mysqldump --no-data -u<username> -p <database> > dump_file"
  description: "export the database structure only"
  keywords: ["mysqldump", "database", "export", "structure", "only"]
  platform: [linux, macos]
  pipeline: false

- command: "mysqldump --no-create-info -u<username> -p <database> > dump_file"
  description: "export the database data only"
  keywords: ["mysqldump", "database", "export", "data", "only"]
  platform: [linux, macos]
  pipeline: false

- command: "nc -p <src-port> -w <seconds> <dest-host> <dest-port>"
  description: "open a TCP connection from <src-port> to <dest-port> of <dest-host>, with a timeout of <seconds>"
  keywords: ["nc", "networking", "open", "tcp", "connection", "<src-port>", "<dest-port>", "<dest-host>", "timeout", "<seconds>"]
  platform: [linux, macos]
  pipeline: false

- command: "nc -u <dest-host> <dest-port>"
  description: "open a UDP connection to <dest-port> of <dest-host>"
  keywords: ["nc", "networking", "open", "udp", "connection", "<dest-port>", "<dest-host>"]
  platform: [linux, macos]
  pipeline: false

- command: "nc -s <source-host> <dest-host> <port>"
  description: "open a TCP connection to port 42 of <host> using <source-host> as the IP for the local end of the connection"
  keywords: ["nc", "networking", "open", "tcp", "connection", "port", "<host>", "using", "<source-host>", "local", "end"]
  platform: [linux, macos]
  pipeline: false

- command: "nc -lU /var/tmp/dsocket"
  description: "create and listen on a UNIX-domain stream socket"
  keywords: ["nc", "networking", "create", "listen", "unix-domain", "stream", "socket"]
  platform: [linux, macos]
  pipeline: false

- command: "nc -x<proxy-host>:<proxy-port> -Xconnect <dest-host> <dest-port>"
  description: "connect to <dest-port> of <dest-host> via an HTTP proxy at <proxy-host>,"
  keywords: ["nc", "networking", "connect", "<dest-port>", "<dest-host>", "via", "http", "proxy", "<proxy-host>"]
  platform: [linux, macos]
  pipeline: false

- command: "nc -zv -s source_IP target_IP Port"
  description: "choose the source IP for the testing using the -s option"
  keywords: ["nc", "networking", "choose", "source", "testing", "using", "option"]
  platform: [linux, macos]
  pipeline: false

- command: "ncdu -o <file>"
  description: "save results to <file>"
  keywords: ["ncdu", "save", "results", "<file>"]
  platform: [linux, macos]
  pipeline: false

- command: "ncdu -f <file>"
  description: "read from <file>"
  keywords: ["ncdu", "read", "<file>"]
  platform: [linux, macos]
  pipeline: false

- command: "ncdu -o- | gzip > <file>"
  description: "save results to a compressed file"
  keywords: ["ncdu", "save", "results", "compressed", "file"]
  platform: [linux, macos]
  pipeline: true

- command: "zcat <file> | ncdu -f-"
  description: "read from a compressed file"
  keywords: ["ncdu", "read", "compressed", "file"]
  platform: [linux, macos]
  pipeline: true

- command: "sudo netstat -lnptu"
  description: "view which users/processes are listening to which ports"
  keywords: ["netstat", "networking", "view", "which", "users/processes", "listening", "ports"]
  platform: [linux, macos]
  pipeline: false

- command: "netstat -r"
  description: "view routing table (use -n flag to disable DNS lookups)"
  keywords: ["netstat", "networking", "view", "routing", "table", "(use", "flag", "disable", "dns", "lookups)"]
  platform: [linux, macos]
  pipeline: false

- command: "nkf -g <file>"
  description: "check the file's charactor code"
  keywords: ["nkf", "check", "file's", "charactor", "code"]
  platform: [linux, macos]
  pipeline: false

- command: "nkf -w --overwrite <file>"
  description: "convert charactor code to UTF-8"
  keywords: ["nkf", "convert", "charactor", "code", "utf-8"]
  platform: [linux, macos]
  pipeline: false

- command: "nkf -e --overwrite <file>"
  description: "convert charactor code to EUC-JP"
  keywords: ["nkf", "convert", "charactor", "code", "euc-jp"]
  platform: [linux, macos]
  pipeline: false

- command: "nkf -s --overwrite <file>"
  description: "convert charactor code to Shift-JIS"
  keywords: ["nkf", "convert", "charactor", "code", "shift-jis"]
  platform: [linux, macos]
  pipeline: false

- command: "nkf -j --overwrite <file>"
  description: "convert charactor code to ISO-2022-JP"
  keywords: ["nkf", "convert", "charactor", "code", "iso-2022-jp"]
  platform: [linux, macos]
  pipeline: false

- command: "nkf -Lu --overwrite <file>"
  description: "convert newline to LF"
  keywords: ["nkf", "convert", "newline"]
  platform: [linux, macos]
  pipeline: false

- command: "nkf -Lw --overwrite <file>"
  description: "convert newline to CRLF"
  keywords: ["nkf", "convert", "newline", "crlf"]
  platform: [linux, macos]
  pipeline: false

- command: "nkf -Lm --overwrite <file>"
  description: "convert newline to CR"
  keywords: ["nkf", "convert", "newline"]
  platform: [linux, macos]
  pipeline: false

- command: "echo テスト | nkf -WwMQ"
  description: "MIME encode"
  keywords: ["nkf", "mime", "encode"]
  platform: [linux, macos]
  pipeline: true

- command: "echo \"=E3=83=86=E3=82=B9=E3=83=88\" | nkf -WwmQ"
  description: "MIME decode"
  keywords: ["nkf", "mime", "decode"]
  platform: [linux, macos]
  pipeline: true

- command: "notify-send -i 'icon-file/name' -a 'application_name' 'summary' 'body of message'"
  description: "send a desktop notification via dbus"
  keywords: ["notify-send", "send", "desktop", "notification", "via", "dbus"]
  platform: [linux, macos]
  pipeline: false

- command: "nova list"
  description: "list VMs on current tenant"
  keywords: ["nova", "list", "vms", "current", "tenant"]
  platform: [linux, macos]
  pipeline: false

- command: "nova list --all-tenants"
  description: "list VMs of all tenants (admin user only)"
  keywords: ["nova", "list", "vms", "all", "tenants", "(admin", "user", "only)"]
  platform: [linux, macos]
  pipeline: false

- command: "nova boot --nic net-id=<net_id> \"
  description: "boot a VM on a specific host"
  keywords: ["nova", "boot", "specific", "host"]
  platform: [linux, macos]
  pipeline: false

- command: "nova stop <server>"
  description: "stop a server"
  keywords: ["nova", "stop", "server"]
  platform: [linux, macos]
  pipeline: false

- command: "nova start <server>"
  description: "start a server"
  keywords: ["nova", "start", "server"]
  platform: [linux, macos]
  pipeline: false

- command: "nova interface-attach --net-id <net_id> <server>"
  description: "attach a network interface to a specific VM"
  keywords: ["nova", "attach", "network", "interface", "specific"]
  platform: [linux, macos]
  pipeline: false

- command: "npm install <package>"
  description: "install a package in the current directory"
  keywords: ["npm", "packaging", "install", "package", "current", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "npm install --save <package>"
  description: "install a package, and save it in the `dependencies` section of `package.json`"
  keywords: ["npm", "packaging", "install", "package", "save", "`dependencies`", "section", "`package.json`"]
  platform: [linux, macos]
  pipeline: false

- command: "npm install --save-dev <package>"
  description: "install a package, and save it in the `devDependencies` section of `package.json`"
  keywords: ["npm", "packaging", "install", "package", "save", "`devdependencies`", "section", "`package.json`"]
  platform: [linux, macos]
  pipeline: false

- command: "npm outdated"
  description: "show outdated packages in the current directory"
  keywords: ["npm", "packaging", "show", "outdated", "packages", "current", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "npm update"
  description: "update outdated packages"
  keywords: ["npm", "packaging", "update", "outdated", "packages"]
  platform: [linux, macos]
  pipeline: false

- command: "npm install -g npm"
  description: "update `npm` (will override the one shipped with Node.js)"
  keywords: ["npm", "packaging", "update", "`npm`", "(will", "override", "one", "shipped", "node.js)"]
  platform: [linux, macos]
  pipeline: false

- command: "npm uninstall <package>"
  description: "uninstall a package"
  keywords: ["npm", "packaging", "uninstall", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "npm config set //npm.intra/:_authToken=\${NPM_TOKEN}"
  description: "set the `authToken` using env variable `NPM_TOKEN`"
  keywords: ["npm", "packaging", "set", "`authtoken`", "using", "env", "variable", "`npm_token`"]
  platform: [linux, macos]
  pipeline: false

- command: "service ntp status"
  description: "verify if ntpd is running"
  keywords: ["ntp", "verify", "ntpd", "running"]
  platform: [linux, macos]
  pipeline: false

- command: "service ntp start"
  description: "start ntpd if not running"
  keywords: ["ntp", "start", "ntpd", "not", "running"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo hwclock -r"
  description: "display current hardware clock value"
  keywords: ["ntp", "display", "current", "hardware", "clock", "value"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo hwclock --systohc"
  description: "apply system time to hardware time"
  keywords: ["ntp", "apply", "system", "time", "hardware"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo hwclock --hctosys"
  description: "apply hardware time to system time"
  keywords: ["ntp", "apply", "hardware", "time", "system"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo hwclock --localtime"
  description: "set hwclock to local time"
  keywords: ["ntp", "set", "hwclock", "local", "time"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo hwclock --utc"
  description: "set hwclock to UTC"
  keywords: ["ntp", "set", "hwclock", "utc"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo hwclock --set --date=\"8/10/15 13:10:05\""
  description: "set hwclock manually"
  keywords: ["ntp", "set", "hwclock", "manually"]
  platform: [linux, macos]
  pipeline: false

- command: "ntpq -pn"
  description: "query surrounding stratum time servers"
  keywords: ["ntp", "query", "surrounding", "stratum", "time", "servers"]
  platform: [linux, macos]
  pipeline: false

- command: "/etc/ntp.conf"
  description: "config file"
  keywords: ["ntp", "config", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "/var/lib/ntp/ntp.drift"
  description: "driftfile"
  keywords: ["ntp", "driftfile"]
  platform: [linux, macos]
  pipeline: false

- command: "numfmt --to=iec --suffix=B --padding=7 1048576"
  description: "convert bytes to Human readable format"
  keywords: ["numfmt", "convert", "bytes", "human", "readable", "format"]
  platform: [linux, macos]
  pipeline: false

- command: "od <binary-file>"
  description: "dump a file in octal format"
  keywords: ["od", "dump", "file", "octal", "format"]
  platform: [linux, macos]
  pipeline: false

- command: "od -x <binary-file>"
  description: "dump a file in hexadecimal format"
  keywords: ["od", "dump", "file", "hexadecimal", "format"]
  platform: [linux, macos]
  pipeline: false

- command: "od -A x -t x1 <binary-file>"
  description: "dump a file in hexadecimal format, with hexadecimal offsets and a space between each byte"
  keywords: ["od", "dump", "file", "hexadecimal", "format", "offsets", "space", "between", "each", "byte"]
  platform: [linux, macos]
  pipeline: false

- command: "openssl genrsa -out server.key 2048"
  description: "create a 2048-bit private key"
  keywords: ["openssl", "create", "2048-bit", "private", "key"]
  platform: [linux, macos]
  pipeline: false

- command: "openssl req -new -key server.key -out server.csr"
  description: "create the Certificate Signing Request (CSR)"
  keywords: ["openssl", "create", "certificate", "signing", "request", "(csr)"]
  platform: [linux, macos]
  pipeline: false

- command: "openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt"
  description: "sign a certificate using a private key and CSR"
  keywords: ["openssl", "sign", "certificate", "using", "private", "key", "csr"]
  platform: [linux, macos]
  pipeline: false

- command: "openssl req -text -noout -in server.csr"
  description: "show certificate information for a certificate signing request"
  keywords: ["openssl", "show", "certificate", "information", "signing", "request"]
  platform: [linux, macos]
  pipeline: false

- command: "openssl x509 -text -noout -in server.crt"
  description: "show certificate information for generated certificate"
  keywords: ["openssl", "show", "certificate", "information", "generated"]
  platform: [linux, macos]
  pipeline: false

- command: "openssl x509 -in server.crt -noout -sha256 -fingerprint"
  description: "get the sha256 fingerprint of a certificate"
  keywords: ["openssl", "get", "sha256", "fingerprint", "certificate"]
  platform: [linux, macos]
  pipeline: false

- command: "echo | openssl s_client -connect <hostname>:443 2> /dev/null | \"
  description: "view certificate expiration"
  keywords: ["openssl", "view", "certificate", "expiration"]
  platform: [linux, macos]
  pipeline: true

- command: "openssl dhparam -outform PEM -out dhparams.pem 2048"
  description: "generate Diffie-Hellman parameters"
  keywords: ["openssl", "generate", "diffie-hellman", "parameters"]
  platform: [linux, macos]
  pipeline: false

- command: "openssl s_client -connect 10.240.2.130:433"
  description: "test an https server"
  keywords: ["openssl", "test", "https", "server"]
  platform: [linux, macos]
  pipeline: false

- command: "p4 info"
  description: "print details related to client and server configuration"
  keywords: ["p4", "print", "details", "related", "client", "server", "configuration"]
  platform: [linux, macos]
  pipeline: false

- command: "p4 add <filename>"
  description: "open a file and add it to depot"
  keywords: ["p4", "open", "file", "add", "depot"]
  platform: [linux, macos]
  pipeline: false

- command: "pacman -Ss <package>..."
  description: "search for a package"
  keywords: ["pacman", "packaging", "search", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "pacman -Suy"
  description: "update the local package base and upgrade all out-of-date packages"
  keywords: ["pacman", "packaging", "update", "local", "package", "base", "upgrade", "all", "out-of-date", "packages"]
  platform: [linux, macos]
  pipeline: false

- command: "pacman -S <package>..."
  description: "install a package"
  keywords: ["pacman", "packaging", "install", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "pacman -R <package>..."
  description: "uninstall a package"
  keywords: ["pacman", "packaging", "uninstall", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "pacman -Rcs <package>..."
  description: "uninstall a package and its depedencies, removing all new orphans"
  keywords: ["pacman", "packaging", "uninstall", "package", "depedencies", "removing", "all", "new", "orphans"]
  platform: [linux, macos]
  pipeline: false

- command: "pacman -Si <package>..."
  description: "get information about package"
  keywords: ["pacman", "packaging", "get", "information", "about", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "pacman -U <file>"
  description: "install a package from builded package file (.tar.xz)"
  keywords: ["pacman", "packaging", "install", "package", "builded", "file", "(.tar.xz)"]
  platform: [linux, macos]
  pipeline: false

- command: "pacman -Ql <package>... | sed -n -e 's/.*\/bin\///p' | tail -n +2"
  description: "list the commands provided by an installed package"
  keywords: ["pacman", "packaging", "list", "commands", "provided", "installed", "package"]
  platform: [linux, macos]
  pipeline: true

- command: "pacman -Qe"
  description: "list explicitly installed packages"
  keywords: ["pacman", "packaging", "list", "explicitly", "installed", "packages"]
  platform: [linux, macos]
  pipeline: false

- command: "expac --timefmt='%Y-%m-%d %T' '%l\t%n' $(comm -23 <(pacman -Qeq|sort) <(pacman -Qqg base base-devel|sort)) | sort -r | head -20"
  description: "list the top-most recent explicitly installed packages (not in the base groups)"
  keywords: ["pacman", "packaging", "list", "top-most", "recent", "explicitly", "installed", "packages", "(not", "base", "groups)"]
  platform: [linux, macos]
  pipeline: true

- command: "pacman -Qdt"
  description: "list orphan packages (installed as dependencies and not required anymore)"
  keywords: ["pacman", "packaging", "list", "orphan", "packages", "(installed", "dependencies", "not", "required", "anymore)"]
  platform: [linux, macos]
  pipeline: false

- command: "pacman -Qi | awk '/^Name/ {name=$3} /^Installed Size/ {print name, $4 substr($5,1,1)}' | column -t | sort -rhk2 | cat -n | tac"
  description: "list installed packages sorted by size"
  keywords: ["pacman", "packaging", "list", "installed", "packages", "sorted", "size"]
  platform: [linux, macos]
  pipeline: true

- command: "paste <file>..."
  description: "concat columns from files"
  keywords: ["paste", "concat", "columns", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "ls | paste - - -"
  description: "list the files in the current directory in three columns"
  keywords: ["paste", "list", "files", "current", "directory", "three", "columns"]
  platform: [linux, macos]
  pipeline: true

- command: "paste -s -d '\t\n' <file>"
  description: "combine pairs of lines from a file into single lines"
  keywords: ["paste", "combine", "pairs", "lines", "file", "into", "single"]
  platform: [linux, macos]
  pipeline: false

- command: "sed = <file> | paste -s -d '\t\n' - -"
  description: "number the lines in a file, similar to nl(1)"
  keywords: ["paste", "number", "lines", "file", "similar", "nl(1)"]
  platform: [linux, macos]
  pipeline: true

- command: "find / -name bin -type d | paste -s -d : -"
  description: "create a colon-separated list of directories named bin, suitable for use in the PATH environment variable"
  keywords: ["paste", "create", "colon-separated", "list", "directories", "named", "bin", "suitable", "use", "path", "environment", "variable"]
  platform: [linux, macos]
  pipeline: true

- command: "patch <file> < <patch-file>"
  description: "patch one file"
  keywords: ["patch", "one", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "patch -R <file> < <patch-file>"
  description: "reverse a patch"
  keywords: ["patch", "reverse"]
  platform: [linux, macos]
  pipeline: false

- command: "$ cd dir"
  description: "patch all files in a directory, adding any missing new files"
  keywords: ["patch", "all", "files", "directory", "adding", "any", "missing", "new"]
  platform: [linux, macos]
  pipeline: false

- command: "patch -p1 -r <dir> < <patch-file>"
  description: "patch files in a directory, with one level (/) offset"
  keywords: ["patch", "files", "directory", "one", "level", "(/)", "offset"]
  platform: [linux, macos]
  pipeline: false

- command: "pdftk 1.pdf 2.pdf 3.pdf cat output 123.pdf"
  description: "concatenate specific pdf files into one"
  keywords: ["pdftk", "concatenate", "specific", "pdf", "files", "into", "one"]
  platform: [linux, macos]
  pipeline: false

- command: "pdftk file.pdf cat 2-3 output file_with_page_2_and_3.pdf"
  description: "extract pages 2 to 3 from a file"
  keywords: ["pdftk", "extract", "pages", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "pgrep <pattern>"
  description: "get a list of PIDs matching <pattern>"
  keywords: ["pgrep", "get", "list", "pids", "matching", "<pattern>"]
  platform: [linux, macos]
  pipeline: false

- command: "pgrep -f <pattern> | xargs kill"
  description: "kill all PIDs matching <pattern>"
  keywords: ["pgrep", "kill", "all", "pids", "matching", "<pattern>"]
  platform: [linux, macos]
  pipeline: true

- command: "php -v"
  description: "view the php version"
  keywords: ["php", "view", "version"]
  platform: [linux, macos]
  pipeline: false

- command: "php -m"
  description: "view the installed php modules"
  keywords: ["php", "view", "installed", "modules"]
  platform: [linux, macos]
  pipeline: false

- command: "php -i"
  description: "view phpinfo() information"
  keywords: ["php", "view", "phpinfo()", "information"]
  platform: [linux, macos]
  pipeline: false

- command: "php -l file.php"
  description: "lint a php file"
  keywords: ["php", "lint", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "find . -name \"*.php\" -print0 | xargs -0 -n1 -P8 php -l"
  description: "lint all php files within the cwd"
  keywords: ["php", "lint", "all", "files", "within", "cwd"]
  platform: [linux, macos]
  pipeline: true

- command: "php -a"
  description: "enter an interactive shell"
  keywords: ["php", "enter", "interactive", "shell"]
  platform: [linux, macos]
  pipeline: false

- command: "php -i | grep \"php.ini\""
  description: "locate the system's php.ini files"
  keywords: ["php", "locate", "system's", "php.ini", "files"]
  platform: [linux, macos]
  pipeline: true

- command: "php -S localhost:3000"
  description: "start a local webserver for the cwd on port 3000 (requires php >= 5.4)"
  keywords: ["php", "start", "local", "webserver", "cwd", "port", "3000", "(requires", "5.4)"]
  platform: [linux, macos]
  pipeline: false

- command: "ping -c 15 <host>"
  description: "ping <host> with 15 packets"
  keywords: ["ping", "networking", "<host>", "packets"]
  platform: [linux, macos]
  pipeline: false

- command: "ping -c 15 -i .5 <host>"
  description: "ping <host> with 15 packets, one every .5 seconds"
  keywords: ["ping", "networking", "<host>", "packets", "one", "every", "seconds"]
  platform: [linux, macos]
  pipeline: false

- command: "ping -s 1500 -c 10 -M do <host>"
  description: "test if a packet size of 1500 bytes is supported (to check the MTU for example)"
  keywords: ["ping", "networking", "test", "packet", "size", "1500", "bytes", "supported", "(to", "check", "mtu", "example)"]
  platform: [linux, macos]
  pipeline: false

- command: "ping6 -I eth0 ff02::1"
  description: "Get all ipv6 neighbors via broadcast ping"
  keywords: ["ping6", "networking", "get", "all", "ipv6", "neighbors", "via", "broadcast", "ping"]
  platform: [linux, macos]
  pipeline: false

- command: "pip search <package>"
  description: "search for a package"
  keywords: ["pip", "packaging", "search", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "pip install <package>..."
  description: "install packages"
  keywords: ["pip", "packaging", "install", "packages"]
  platform: [linux, macos]
  pipeline: false

- command: "pip install --user <package>"
  description: "install a package in user space"
  keywords: ["pip", "packaging", "install", "package", "user", "space"]
  platform: [linux, macos]
  pipeline: false

- command: "pip install --upgrade <package>"
  description: "upgrade a package"
  keywords: ["pip", "packaging", "upgrade", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "pip freeze > requirements.txt"
  description: "output and install packages in a requirement file"
  keywords: ["pip", "packaging", "output", "install", "packages", "requirement", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "pip show <package>"
  description: "show details of a package"
  keywords: ["pip", "packaging", "show", "details", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "pip list --outdated"
  description: "list outdated packages"
  keywords: ["pip", "packaging", "list", "outdated", "packages"]
  platform: [linux, macos]
  pipeline: false

- command: "pip freeze --local | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U"
  description: "upgrade all outdated packages"
  keywords: ["pip", "packaging", "upgrade", "all", "outdated", "packages"]
  platform: [linux, macos]
  pipeline: true

- command: "pip list --outdated --format=freeze | cut -d = -f 1 | xargs -n1 pip install -U"
  description: "upgrade outdated packages on latest version of pip"
  keywords: ["pip", "packaging", "upgrade", "outdated", "packages", "latest", "version"]
  platform: [linux, macos]
  pipeline: true

- command: "pip install -I SomePackage1==1.1.0 'SomePackage2>=1.0.4'"
  description: "install specific version of a package"
  keywords: ["pip", "packaging", "install", "specific", "version", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "pkcon refresh"
  description: "update cached information about available updates"
  keywords: ["pkcon", "packaging", "update", "cached", "information", "about", "available", "updates"]
  platform: [linux, macos]
  pipeline: false

- command: "pkcon update"
  description: "update installed packages"
  keywords: ["pkcon", "packaging", "update", "installed", "packages"]
  platform: [linux, macos]
  pipeline: false

- command: "cd <dir>"
  description: "create a Slackware package from a structured directory and sub-tree"
  keywords: ["pkgtools", "packaging", "create", "slackware", "package", "structured", "directory", "sub-tree"]
  platform: [linux, macos]
  pipeline: false

- command: "installpkg foo-1.0.3-x86_64-1.tgz"
  description: "install a Slackware package"
  keywords: ["pkgtools", "packaging", "install", "slackware", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "ROOT=/path/to/dir installpkg foo-1.0.4-noarch-1.tgz"
  description: "install a Slackware package to non-standard location"
  keywords: ["pkgtools", "packaging", "install", "slackware", "package", "non-standard", "location"]
  platform: [linux, macos]
  pipeline: false

- command: "tar czvf /tmp/backup.tar.gz $(installpkg --warn foo-1.0.4-noarch-1.tgz)"
  description: "create backup of files that will be overwritten when installing"
  keywords: ["pkgtools", "packaging", "create", "backup", "files", "overwritten", "when", "installing"]
  platform: [linux, macos]
  pipeline: false

- command: "upgradepkg --install-new foo-1.0.6-noarch-1.tgz"
  description: "upgrade a Slackware package including files only in new version"
  keywords: ["pkgtools", "packaging", "upgrade", "slackware", "package", "including", "files", "only", "new", "version"]
  platform: [linux, macos]
  pipeline: false

- command: "upgradepkg --reinstall foo-1.0.4-noarch-1.tgz"
  description: "upgrade a Slackware package even if version is the same"
  keywords: ["pkgtools", "packaging", "upgrade", "slackware", "package", "even", "version", "same"]
  platform: [linux, macos]
  pipeline: false

- command: "removepkg foo-0.2.8-x86_64-1"
  description: "remove a Slackware package"
  keywords: ["pkgtools", "packaging", "remove", "slackware", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "removepkg -copy foo-0.2.8-x86_64-1  # -> /var/log/setup/tmp/preserved_packages/foo..."
  description: "remove a Slackware package, retaining a backup (uninstalled) copy"
  keywords: ["pkgtools", "packaging", "remove", "slackware", "package", "retaining", "backup", "(uninstalled)", "copy"]
  platform: [linux, macos]
  pipeline: false

- command: "pkill <process-name>"
  description: "kill a process using its full process name"
  keywords: ["pkill", "kill", "process", "using", "full", "name"]
  platform: [linux, macos]
  pipeline: false

- command: "pkill -f <string>"
  description: "kill a process by its partial name"
  keywords: ["pkill", "kill", "process", "partial", "name"]
  platform: [linux, macos]
  pipeline: false

- command: "popd"
  description: "return to the directory at the top of the `pushd' stack"
  keywords: ["popd", "return", "directory", "top", "`pushd'", "stack"]
  platform: [linux, macos]
  pipeline: false

- command: "ps aux"
  description: "list every process on the system"
  keywords: ["ps", "list", "every", "process", "system"]
  platform: [linux, macos]
  pipeline: false

- command: "ps axjf"
  description: "list a process tree"
  keywords: ["ps", "list", "process", "tree"]
  platform: [linux, macos]
  pipeline: false

- command: "ps -aufoouser"
  description: "list every process owned by foouser"
  keywords: ["ps", "list", "every", "process", "owned", "foouser"]
  platform: [linux, macos]
  pipeline: false

- command: "ps -eo pid,user,command"
  description: "list every process with a user-defined format"
  keywords: ["ps", "list", "every", "process", "user-defined", "format"]
  platform: [linux, macos]
  pipeline: false

- command: "pushd <directory>"
  description: "pushes your current directory to the top of a stack while changing to the specified directory"
  keywords: ["pushd", "pushes", "your", "current", "directory", "top", "stack", "while", "changing", "specified"]
  platform: [linux, macos]
  pipeline: false

- command: "popd"
  description: "return use popd"
  keywords: ["pushd", "return", "use", "popd"]
  platform: [linux, macos]
  pipeline: false

- command: "ci -u <filename>"
  description: "initially check-in a file (leaving file active in filesystem)"
  keywords: ["rcs", "initially", "check-in", "file", "(leaving", "active", "filesystem)"]
  platform: [linux, macos]
  pipeline: false

- command: "co -l <filename>"
  description: "check out with lock"
  keywords: ["rcs", "check", "out", "lock"]
  platform: [linux, macos]
  pipeline: false

- command: "ci -u <filename>"
  description: "check in and unlock (leaving file active in filesystem)"
  keywords: ["rcs", "check", "unlock", "(leaving", "file", "active", "filesystem)"]
  platform: [linux, macos]
  pipeline: false

- command: "co -px.y <filename>"
  description: "display version x.y of a file"
  keywords: ["rcs", "display", "version", "x.y", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "co -rx.y <filename>"
  description: "undo to version x.y (overwrites file active in filesystem with the specified revision)"
  keywords: ["rcs", "undo", "version", "x.y", "(overwrites", "file", "active", "filesystem", "specified", "revision)"]
  platform: [linux, macos]
  pipeline: false

- command: "rcsdiff <filename>"
  description: "diff file active in filesystem and last revision"
  keywords: ["rcs", "diff", "file", "active", "filesystem", "last", "revision"]
  platform: [linux, macos]
  pipeline: false

- command: "rcsdiff -rx.y -rx.z <filename>"
  description: "diff versions x.y and x.z"
  keywords: ["rcs", "diff", "versions", "x.y", "x.z"]
  platform: [linux, macos]
  pipeline: false

- command: "rlog <filename>"
  description: "view log of check-ins"
  keywords: ["rcs", "view", "log", "check-ins"]
  platform: [linux, macos]
  pipeline: false

- command: "rcs -u <filename>"
  description: "break an RCS lock held by another person on a file"
  keywords: ["rcs", "break", "lock", "held", "another", "person", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "rename 'y/A-Z/a-z/' *"
  description: "lowercase all files and folders in current directory"
  keywords: ["rename", "lowercase", "all", "files", "folders", "current", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "rename 's/sometext/replacedby/' *"
  description: "replace 'sometext' with 'replacedby' in all files in current directory"
  keywords: ["rename", "replace", "'sometext'", "'replacedby'", "all", "files", "current", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "rm -rf <dir>"
  description: "remove all files and subdirs in <dir>"
  keywords: ["rm", "remove", "all", "files", "subdirs", "<dir>"]
  platform: [linux, macos]
  pipeline: false

- command: "rm -f <dir>"
  description: "ignore non-existent files"
  keywords: ["rm", "ignore", "non-existent", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "find /tmp/ -inum 6666 -exec rm -i '{}' \;"
  description: "remove a file with this inode"
  keywords: ["rm", "remove", "file", "this", "inode"]
  platform: [linux, macos]
  pipeline: false

- command: "route -n"
  description: "display routing table IP addresses instead of host names"
  keywords: ["route", "networking", "display", "routing", "table", "addresses", "instead", "host", "names"]
  platform: [linux, macos]
  pipeline: false

- command: "route add default gateway 192.168.0.1"
  description: "add a default gateway"
  keywords: ["route", "networking", "add", "default", "gateway"]
  platform: [linux, macos]
  pipeline: false

- command: "route add -net 127.0.0.0 netmask 255.0.0.0 dev lo"
  description: "add the normal loopback entry, using netmask 255.0.0.0 and associated with"
  keywords: ["route", "networking", "add", "normal", "loopback", "entry", "using", "netmask", "255.0.0.0", "associated"]
  platform: [linux, macos]
  pipeline: false

- command: "route add -net 192.56.76.0 netmask 255.255.255.0 dev eth0"
  description: "add a route to the local network 192.56.76.x via \"eth0\".  The word \"dev\" can be omitted here"
  keywords: ["route", "networking", "add", "local", "network", "192.56.76.x", "via", "\"eth0\"", "word", "\"dev\"", "can", "omitted", "here"]
  platform: [linux, macos]
  pipeline: false

- command: "route del default"
  description: "delete the current default route, which is labeled \"default\" or 0.0.0.0 in the destination field of the current routing table"
  keywords: ["route", "networking", "delete", "current", "default", "which", "labeled", "\"default\"", "0.0.0.0", "destination", "field", "routing", "table"]
  platform: [linux, macos]
  pipeline: false

- command: "route add default gw mango-gw"
  description: "add a default  route (which will be used if no other route matches).  All"
  keywords: ["route", "networking", "add", "default", "(which", "used", "other", "matches)", "all"]
  platform: [linux, macos]
  pipeline: false

- command: "route add ipx4 sl0"
  description: "add the route to the \"ipx4\" host via the SLIP interface (assuming that \"ipx4\" is the SLIP host)"
  keywords: ["route", "networking", "add", "\"ipx4\"", "host", "via", "slip", "interface", "(assuming", "host)"]
  platform: [linux, macos]
  pipeline: false

- command: "route add -net 192.57.66.0 netmask 255.255.255.0 gw ipx4"
  description: "add the net \"192.57.66.x\" to be gateway through the former route to the SLIP interface"
  keywords: ["route", "networking", "add", "net", "\"192.57.66.x\"", "gateway", "through", "former", "slip", "interface"]
  platform: [linux, macos]
  pipeline: false

- command: "route add -net 10.0.0.0 netmask 255.0.0.0 reject"
  description: "install a rejecting route for the private network \"10.x.x.x.\""
  keywords: ["route", "networking", "install", "rejecting", "private", "network", "\"10.x.x.x.\""]
  platform: [linux, macos]
  pipeline: false

- command: "rpm -ivh <rpm>"
  description: "install a package"
  keywords: ["rpm", "packaging", "install", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "rpm -Uv <rpm>"
  description: "update a package"
  keywords: ["rpm", "packaging", "update", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "rpm -e <package>"
  description: "remove a package"
  keywords: ["rpm", "packaging", "remove", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "rpm -e --nodeps <package>"
  description: "remove a package, but not its dependencies"
  keywords: ["rpm", "packaging", "remove", "package", "but", "not", "dependencies"]
  platform: [linux, macos]
  pipeline: false

- command: "rpm -qf <file>"
  description: "find what package installs a file"
  keywords: ["rpm", "packaging", "find", "what", "package", "installs", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "rpm -ql <package>"
  description: "find what files are installed by a package"
  keywords: ["rpm", "packaging", "find", "what", "files", "installed", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "rpm -q --whatrequires <package>"
  description: "find what packages require a package or file"
  keywords: ["rpm", "packaging", "find", "what", "packages", "require", "package", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "rpm -qa"
  description: "list all installed packages"
  keywords: ["rpm", "packaging", "list", "all", "installed", "packages"]
  platform: [linux, macos]
  pipeline: false

- command: "rpm -i --test <package>"
  description: "find a packages's dependencies"
  keywords: ["rpm", "packaging", "find", "packages's", "dependencies"]
  platform: [linux, macos]
  pipeline: false

- command: "rpm -K <package>"
  description: "display checksum against a source"
  keywords: ["rpm", "packaging", "display", "checksum", "against", "source"]
  platform: [linux, macos]
  pipeline: false

- command: "rpm -V <package>"
  description: "verify a package"
  keywords: ["rpm", "packaging", "verify", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "rpm2cpio <rpm-file> | cpio -vt"
  description: "list contents of an RPM"
  keywords: ["rpm2cpio", "packaging", "list", "contents", "rpm"]
  platform: [linux, macos]
  pipeline: true

- command: "rpm2cpio <rpm-file> | cpio -vid"
  description: "extract contents of an RPM"
  keywords: ["rpm2cpio", "packaging", "extract", "contents", "rpm"]
  platform: [linux, macos]
  pipeline: true

- command: "r2e list"
  description: "list all feeds"
  keywords: ["rss2email", "list", "all", "feeds"]
  platform: [linux, macos]
  pipeline: false

- command: "r2e run"
  description: "convert RSS entries to email"
  keywords: ["rss2email", "convert", "rss", "entries", "email"]
  platform: [linux, macos]
  pipeline: false

- command: "r2e add <feed-address>"
  description: "add a new feed"
  keywords: ["rss2email", "add", "new", "feed"]
  platform: [linux, macos]
  pipeline: false

- command: "r2e add <feed-address> [new-email-address]"
  description: "add a new feed with new email address"
  keywords: ["rss2email", "add", "new", "feed", "email", "address"]
  platform: [linux, macos]
  pipeline: false

- command: "r2e delete <number-of-feed-in-list>"
  description: "delete a feed "
  keywords: ["rss2email", "delete", "feed"]
  platform: [linux, macos]
  pipeline: false

- command: "r2e -h"
  description: "get help"
  keywords: ["rss2email", "get", "help"]
  platform: [linux, macos]
  pipeline: false

- command: "rsync -avz host:file1 :file1 /dest/"
  description: "copy files from remote to local, maintaining file properties and sym-links"
  keywords: ["rsync", "copy", "files", "remote", "local", "maintaining", "file", "properties", "sym-links"]
  platform: [linux, macos]
  pipeline: false

- command: "rsync -avc <src> <dest>"
  description: "copy files using checksum (-c) rather than time to detect if the file has"
  keywords: ["rsync", "copy", "files", "using", "checksum", "(-c)", "rather", "than", "time", "detect", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "rsync -auv /src/foo /dest"
  description: "copy /src/foo folder into destination"
  keywords: ["rsync", "copy", "/src/foo", "folder", "into", "destination"]
  platform: [linux, macos]
  pipeline: false

- command: "rsync -auv /src/foo/ /foo_bak"
  description: "copy contents of /src/foo into destination"
  keywords: ["rsync", "copy", "contents", "/src/foo", "into", "destination"]
  platform: [linux, macos]
  pipeline: false

- command: "rsync -avz -e \"ssh -p1234\" <source> <username>@<host>:<dest>"
  description: "copy file from local to remote over ssh with non standard port 1234 to"
  keywords: ["rsync", "copy", "file", "local", "remote", "over", "ssh", "non", "standard", "port", "1234"]
  platform: [linux, macos]
  pipeline: false

- command: "ruby -run -e httpd . -p <port>"
  description: "serve the current directory"
  keywords: ["ruby", "serve", "current", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "ruby <file>"
  description: "execute a script file"
  keywords: ["ruby", "execute", "script", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "ruby -e 'command'"
  description: "execute one line of script"
  keywords: ["ruby", "execute", "one", "line", "script"]
  platform: [linux, macos]
  pipeline: false

- command: "ruby -c <file>"
  description: "check script file syntax"
  keywords: ["ruby", "check", "script", "file", "syntax"]
  platform: [linux, macos]
  pipeline: false

- command: "ruby -Idirectory"
  description: "specify $LOAD_PATH directory"
  keywords: ["ruby", "specify", "$load_path", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "scd -ar ~/Documents/"
  description: "index recursively some paths for the very first run"
  keywords: ["scd", "index", "recursively", "some", "paths", "very", "first", "run"]
  platform: [linux, macos]
  pipeline: false

- command: "scd doc"
  description: "change to a directory path matching \"doc\""
  keywords: ["scd", "change", "directory", "path", "matching", "\"doc\""]
  platform: [linux, macos]
  pipeline: false

- command: "scd a b c"
  description: "change to a path matching all of \"a\", \"b\" and \"c\""
  keywords: ["scd", "change", "path", "matching", "all", "\"a\"", "\"b\"", "\"c\""]
  platform: [linux, macos]
  pipeline: false

- command: "scd \"ts$\""
  description: "change to a directory path that ends with \"ts\""
  keywords: ["scd", "change", "directory", "path", "ends", "\"ts\""]
  platform: [linux, macos]
  pipeline: false

- command: "scd -v"
  description: "show selection menu and ranking of 20 most likely directories"
  keywords: ["scd", "show", "selection", "menu", "ranking", "most", "likely", "directories"]
  platform: [linux, macos]
  pipeline: false

- command: "scd --alias=xray"
  description: "alias current directory as \"xray\""
  keywords: ["scd", "alias", "current", "directory", "\"xray\""]
  platform: [linux, macos]
  pipeline: false

- command: "scd xray"
  description: "jump to a previously defined aliased directory"
  keywords: ["scd", "jump", "previously", "defined", "aliased", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "scp <file> <user>@<host>:<dest>"
  description: "copy a file from your local machine to a remote server"
  keywords: ["scp", "copy", "file", "your", "local", "machine", "remote", "server"]
  platform: [linux, macos]
  pipeline: false

- command: "scp <user>@<host>:<src> <dest>"
  description: "copy a file from a remote server to your local machine"
  keywords: ["scp", "copy", "file", "remote", "server", "your", "local", "machine"]
  platform: [linux, macos]
  pipeline: false

- command: "scp -o \"ProxyCommand nc -x 127.0.0.1:9999 -X 4 %h %p\" <file> <user>@<host>:<dest>"
  description: "scp a file over a SOCKS proxy on localhost and port 9999 (see ssh for tunnel setup)"
  keywords: ["scp", "file", "over", "socks", "proxy", "localhost", "port", "9999", "(see", "ssh", "tunnel", "setup)"]
  platform: [linux, macos]
  pipeline: false

- command: "scp -3 <user>@<host1>:<src> <user>@<host2>:<dest>"
  description: "scp between two remote servers from the third machine"
  keywords: ["scp", "between", "two", "remote", "servers", "third", "machine"]
  platform: [linux, macos]
  pipeline: false

- command: "screen -S <session-name>"
  description: "start a new named screen session"
  keywords: ["screen", "start", "new", "named", "session"]
  platform: [linux, macos]
  pipeline: false

- command: "Press Ctrl+A then press d"
  description: "detach from the current session"
  keywords: ["screen", "detach", "current", "session"]
  platform: [linux, macos]
  pipeline: false

- command: "screen -r <session-name>"
  description: "re-attach a detached session"
  keywords: ["screen", "re-attach", "detached", "session"]
  platform: [linux, macos]
  pipeline: false

- command: "screen -ls"
  description: "list all screen sessions"
  keywords: ["screen", "list", "all", "sessions"]
  platform: [linux, macos]
  pipeline: false

- command: "screen -XS <session-name> quit"
  description: "quit a session"
  keywords: ["screen", "quit", "session"]
  platform: [linux, macos]
  pipeline: false

- command: "sed 's/day/night/g' <file>"
  description: "replace all occurrences of \"day\" with \"night\" and write to stdout"
  keywords: ["sed", "replace", "all", "occurrences", "\"day\"", "\"night\"", "write", "stdout"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: false

- command: "sed -i 's/day/night/g' <file>"
  description: "replace all occurrences of \"day\" with \"night\" within <file>"
  keywords: ["sed", "replace", "all", "occurrences", "\"day\"", "\"night\"", "within", "<file>"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: false

- command: "echo 'It is daytime' | sed 's/day/night/g'"
  description: "replace all occurrences of \"day\" with \"night\" on stdin"
  keywords: ["sed", "replace", "all", "occurrences", "\"day\"", "\"night\"", "stdin"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: true

- command: "sed -i -r 's/^\s+//g' <file>"
  description: "remove leading spaces"
  keywords: ["sed", "remove", "leading", "spaces"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: false

- command: "sed '/^$/d' <file>"
  description: "remove empty lines and print results to stdout"
  keywords: ["sed", "remove", "empty", "lines", "print", "results", "stdout"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: false

- command: "sed ':a;N;$!ba;s/\n//g' <file>"
  description: "replace newlines in multiple lines"
  keywords: ["sed", "replace", "newlines", "multiple", "lines"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: false

- command: "sed '/Once upon a time/i\Chapter 1'"
  description: "insert a line before a matching pattern"
  keywords: ["sed", "insert", "line", "before", "matching", "pattern"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: false

- command: "sed '/happily ever after/a\The end.'"
  description: "add a line after a matching pattern"
  keywords: ["sed", "add", "line", "after", "matching", "pattern"]
  niche: "text-processing"
  platform: [linux, macos]
  pipeline: false

- command: "getenforce"
  description: "get the status of selinux"
  keywords: ["selinux", "security", "get", "status"]
  platform: [linux, macos]
  pipeline: false

- command: "setenforce 0"
  description: "set the status to permissive"
  keywords: ["selinux", "security", "set", "status", "permissive"]
  platform: [linux, macos]
  pipeline: false

- command: "ls -Z"
  description: "get the context of files/processes/ports/users"
  keywords: ["selinux", "security", "get", "context", "files/processes/ports/users"]
  platform: [linux, macos]
  pipeline: false

- command: "getsebool -a"
  description: "get all booleans"
  keywords: ["selinux", "security", "get", "all", "booleans"]
  platform: [linux, macos]
  pipeline: false

- command: "setsebool foo_bar 1 -P"
  description: "set a boolean permanently"
  keywords: ["selinux", "security", "set", "boolean", "permanently"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo cat /var/lib/selinux/targeted/active/booleans.local"
  description: "get all changed booleans"
  keywords: ["selinux", "security", "get", "all", "changed", "booleans"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo chcon -t foo_bar_t /foo/bar/baz.txt"
  description: "set a context the complicated way"
  keywords: ["selinux", "security", "set", "context", "complicated", "way"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo semanage fcontext -a -t httpd_sys_content_t \"/foo(/.*)?\""
  description: "create a rule with semanage for /foo and for the httpd server"
  keywords: ["selinux", "security", "create", "rule", "semanage", "/foo", "httpd", "server"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo setenforce 0"
  description: "create a module, you need to set selinux in permissive mode and test the application with all its features"
  keywords: ["selinux", "security", "create", "module", "you", "need", "set", "permissive", "mode", "test", "application", "all", "features"]
  platform: [linux, macos]
  pipeline: false

- command: "sha256sum <file>"
  description: "compute hash (checksum) of <file>"
  keywords: ["sha256sum", "cryptography", "hash", "checksum", "verification", "compute", "(checksum)", "<file>"]
  platform: [linux, macos]
  pipeline: false

- command: "sha256sum"
  description: "compute hash (checksum) from input text"
  keywords: ["sha256sum", "cryptography", "hash", "checksum", "verification", "compute", "(checksum)", "input", "text"]
  platform: [linux, macos]
  pipeline: false

- command: "sha256sum --check <file-with-list-of-checksums>"
  description: "verify if a hash (checksum) is correct if a hash-file is provided"
  keywords: ["sha256sum", "cryptography", "hash", "checksum", "verification", "verify", "(checksum)", "correct", "hash-file", "provided"]
  platform: [linux, macos]
  pipeline: false

- command: "shred -n 5 -v <file>"
  description: "shred a file (5 passes) and verbose output"
  keywords: ["shred", "file", "passes)", "verbose", "output"]
  platform: [linux, macos]
  pipeline: false

- command: "shred -n 5 -vz <file>"
  description: "shred a file (5 passes) and a final overwrite of zeroes"
  keywords: ["shred", "file", "passes)", "final", "overwrite", "zeroes"]
  platform: [linux, macos]
  pipeline: false

- command: "shred -n 5 -vzu <file>"
  description: "do the above, and then truncate and rm the file"
  keywords: ["shred", "above", "then", "truncate", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "shred -n 5 -vz /dev/sda"
  description: "shred a partition"
  keywords: ["shred", "partition"]
  platform: [linux, macos]
  pipeline: false

- command: "shutdown -r now"
  description: "reboot the system immediately"
  keywords: ["shutdown", "reboot", "system", "immediately"]
  platform: [linux, macos]
  pipeline: false

- command: "shutdown -h now"
  description: "shut system down immediately"
  keywords: ["shutdown", "shut", "system", "down", "immediately"]
  platform: [linux, macos]
  pipeline: false

- command: "shutdown -r +5"
  description: "reboot system after 5 minutes"
  keywords: ["shutdown", "reboot", "system", "after", "minutes"]
  platform: [linux, macos]
  pipeline: false

- command: "shutdown -c"
  description: "cancel a scheduled shutdown"
  keywords: ["shutdown", "cancel", "scheduled"]
  platform: [linux, macos]
  pipeline: false

- command: "sbatch job.sh"
  description: "submit a new job"
  keywords: ["slurm", "submit", "new", "job"]
  platform: [linux, macos]
  pipeline: false

- command: "squeue -u <user>"
  description: "list all jobs for a user"
  keywords: ["slurm", "list", "all", "jobs", "user"]
  platform: [linux, macos]
  pipeline: false

- command: "scancel <job-id>"
  description: "cancel a job by id or name"
  keywords: ["slurm", "cancel", "job", "name"]
  platform: [linux, macos]
  pipeline: false

- command: "scontrol show jobid -dd <job-id>"
  description: "list all information for a job"
  keywords: ["slurm", "list", "all", "information", "job"]
  platform: [linux, macos]
  pipeline: false

- command: "sstat --format=AveCPU,AvePages,AveRSS,AveVMSize,JobID -j <job-id> --allsteps"
  description: "status info for currently running job"
  keywords: ["slurm", "status", "info", "currently", "running", "job"]
  platform: [linux, macos]
  pipeline: false

- command: "smbclient -L <host> -U%"
  description: "display public shares on the server"
  keywords: ["smbclient", "display", "public", "shares", "server"]
  platform: [linux, macos]
  pipeline: false

- command: "smbclient //<host>/<share> -U<user>%<password>"
  description: "connect to a share"
  keywords: ["smbclient", "connect", "share"]
  platform: [linux, macos]
  pipeline: false

- command: "snap find <package>"
  description: "find <package>"
  keywords: ["snap", "packaging", "find", "<package>"]
  platform: [linux, macos]
  pipeline: false

- command: "snap info <package>"
  description: "view detailed information about <package>"
  keywords: ["snap", "packaging", "view", "detailed", "information", "about", "<package>"]
  platform: [linux, macos]
  pipeline: false

- command: "snap find --private"
  description: "view all private snaps (must be logged in)"
  keywords: ["snap", "packaging", "view", "all", "private", "snaps", "(must", "logged", "in)"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo snap install <package>"
  description: "install the <package>"
  keywords: ["snap", "packaging", "install", "<package>"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo snap install <package> --channel=beta"
  description: "install the <package> from the \"beta\" channel"
  keywords: ["snap", "packaging", "install", "<package>", "\"beta\"", "channel"]
  platform: [linux, macos]
  pipeline: false

- command: "snap list"
  description: "view installed snaps"
  keywords: ["snap", "packaging", "view", "installed", "snaps"]
  platform: [linux, macos]
  pipeline: false

- command: "snap list --all"
  description: "list all revisions of installed snaps"
  keywords: ["snap", "packaging", "list", "all", "revisions", "installed", "snaps"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo snap refresh"
  description: "(manually) update all snaps"
  keywords: ["snap", "packaging", "(manually)", "update", "all", "snaps"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo snap refresh <package>"
  description: "(manually) update <package>"
  keywords: ["snap", "packaging", "(manually)", "update", "<package>"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo snap refresh <package> --channel=beta"
  description: "update <package> to the \"beta\" channel"
  keywords: ["snap", "packaging", "update", "<package>", "\"beta\"", "channel"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo snap revert <package>"
  description: "revert <package> to a prior version"
  keywords: ["snap", "packaging", "revert", "<package>", "prior", "version"]
  platform: [linux, macos]
  pipeline: false

- command: "snap revert <package> --revision 5"
  description: "revert <package> to revision 5"
  keywords: ["snap", "packaging", "revert", "<package>", "revision"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo snap remove <package>"
  description: "remove <package>"
  keywords: ["snap", "packaging", "remove", "<package>"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo snap login"
  description: "log in to snap (must first create account online)"
  keywords: ["snap", "packaging", "log", "(must", "first", "create", "account", "online)"]
  platform: [linux, macos]
  pipeline: false

- command: "snap logout"
  description: "log out of snap"
  keywords: ["snap", "packaging", "log", "out"]
  platform: [linux, macos]
  pipeline: false

- command: "snap changes"
  description: "view a transaction log summary"
  keywords: ["snap", "packaging", "view", "transaction", "log", "summary"]
  platform: [linux, macos]
  pipeline: false

- command: "snap change 123"
  description: "view details of item 123 in the transaction log"
  keywords: ["snap", "packaging", "view", "details", "item", "123", "transaction", "log"]
  platform: [linux, macos]
  pipeline: false

- command: "snap watch 123"
  description: "watch transaction 123"
  keywords: ["snap", "packaging", "watch", "transaction", "123"]
  platform: [linux, macos]
  pipeline: false

- command: "snap abort 123"
  description: "abort transaction 123"
  keywords: ["snap", "packaging", "abort", "transaction", "123"]
  platform: [linux, macos]
  pipeline: false

- command: "snap download <package>"
  description: "download <package> (and its assertions) *without* installing it"
  keywords: ["snap", "packaging", "download", "<package>", "(and", "assertions)", "*without*", "installing"]
  platform: [linux, macos]
  pipeline: false

- command: "snap ack foo.assert"
  description: "install the locally-downloaded `foo` snap with assertions"
  keywords: ["snap", "packaging", "install", "locally-downloaded", "`foo`", "assertions"]
  platform: [linux, macos]
  pipeline: false

- command: "snap install --dangerous foo.snap"
  description: "install the locally-downloaded `foo` snap without assertions"
  keywords: ["snap", "packaging", "install", "locally-downloaded", "`foo`", "without", "assertions"]
  platform: [linux, macos]
  pipeline: false

- command: "snap install --devmode foo"
  description: "install snap `foo` in \"dev mode\""
  keywords: ["snap", "packaging", "install", "`foo`", "\"dev", "mode\""]
  platform: [linux, macos]
  pipeline: false

- command: "snap install --classic foo"
  description: "install snap `foo` in \"classic mode\""
  keywords: ["snap", "packaging", "install", "`foo`", "\"classic", "mode\""]
  platform: [linux, macos]
  pipeline: false

- command: "snap interfaces"
  description: "view available snap interfaces"
  keywords: ["snap", "packaging", "view", "available", "interfaces"]
  platform: [linux, macos]
  pipeline: false

- command: "snap connect foo:camera :camera"
  description: "connect the `foo:camera` plug to the ubuntu core slot"
  keywords: ["snap", "packaging", "connect", "`foo:camera`", "plug", "ubuntu", "core", "slot"]
  platform: [linux, macos]
  pipeline: false

- command: "snap disconnect foo:camera"
  description: "disconnect the `foo:camera` plug from the ubuntu core slot"
  keywords: ["snap", "packaging", "disconnect", "`foo:camera`", "plug", "ubuntu", "core", "slot"]
  platform: [linux, macos]
  pipeline: false

- command: "snap disable foo"
  description: "disable the `foo` snap"
  keywords: ["snap", "packaging", "disable", "`foo`"]
  platform: [linux, macos]
  pipeline: false

- command: "snap enable foo"
  description: "enable the `foo` snap"
  keywords: ["snap", "packaging", "enable", "`foo`"]
  platform: [linux, macos]
  pipeline: false

- command: "snap set foo bar=10"
  description: "set snap `foo`'s `bar` property to 10"
  keywords: ["snap", "packaging", "set", "`foo`'s", "`bar`", "property"]
  platform: [linux, macos]
  pipeline: false

- command: "snap get foo bar"
  description: "read snap `foo`'s current `bar` property"
  keywords: ["snap", "packaging", "read", "`foo`'s", "current", "`bar`", "property"]
  platform: [linux, macos]
  pipeline: false

- command: "snmpwalk -Os -c public -v 1 zeus system"
  description: "retrieve all of the variables under system for host zeus"
  keywords: ["snmpwalk", "retrieve", "all", "variables", "under", "system", "host", "zeus"]
  platform: [linux, macos]
  pipeline: false

- command: "snmpwalk -Os -c public -v 1 -CE sysORTable zeus system"
  description: "retrieve the scalar values, but omit the sysORTable for host zeus"
  keywords: ["snmpwalk", "retrieve", "scalar", "values", "but", "omit", "sysortable", "host", "zeus"]
  platform: [linux, macos]
  pipeline: false

- command: "sudo sockstat -l"
  description: "view which users/processes are listening to which ports"
  keywords: ["sockstat", "networking", "view", "which", "users/processes", "listening", "ports"]
  platform: [linux, macos]
  pipeline: false

- command: "sort <file>"
  description: "sort a file"
  keywords: ["sort", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "sort -u <file>"
  description: "sort a file by keeping only unique"
  keywords: ["sort", "file", "keeping", "only", "unique"]
  platform: [linux, macos]
  pipeline: false

- command: "sort -r <file>"
  description: "sort a file and reverse the result"
  keywords: ["sort", "file", "reverse", "result"]
  platform: [linux, macos]
  pipeline: false

- command: "sort -R <file>"
  description: "sort a file randomly"
  keywords: ["sort", "file", "randomly"]
  platform: [linux, macos]
  pipeline: false

- command: "sort <inputFile> -o <outputFile>"
  description: "sort a file and store the output in another file"
  keywords: ["sort", "file", "store", "output", "another"]
  platform: [linux, macos]
  pipeline: false

- command: "split <file> -l 1000"
  description: "split a large text file into smaller files of 1000 lines each"
  keywords: ["split", "large", "text", "file", "into", "smaller", "files", "1000", "lines", "each"]
  platform: [linux, macos]
  pipeline: false

- command: "split <file> -b 10M"
  description: "split a large binary file into smaller files of 10M each"
  keywords: ["split", "large", "binary", "file", "into", "smaller", "files", "10m", "each"]
  platform: [linux, macos]
  pipeline: false

- command: "cat x* > <file>"
  description: "consolidate split files into a single file"
  keywords: ["split", "consolidate", "files", "into", "single", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "sport r"
  description: "sync to newest slackbuild.org tree"
  keywords: ["sport", "packaging", "sync", "newest", "slackbuild.org", "tree"]
  platform: [linux, macos]
  pipeline: false

- command: "SBOPATH=/path/to/tree sport s foo"
  description: "operate from alternate build tree"
  keywords: ["sport", "packaging", "operate", "alternate", "build", "tree"]
  platform: [linux, macos]
  pipeline: false

- command: "sport i --build-only foo"
  description: "build a package"
  keywords: ["sport", "packaging", "build", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "sport i ."
  description: "build and install package from current directory"
  keywords: ["sport", "packaging", "build", "install", "package", "current", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "INSTALLER=upgradepkg sport i foo"
  description: "upgrade instead of install"
  keywords: ["sport", "packaging", "upgrade", "instead", "install"]
  platform: [linux, macos]
  pipeline: false

- command: "echo \"foo bar\" >> /tmp/baz.list"
  description: "build dependency list for baz"
  keywords: ["sport", "packaging", "build", "dependency", "list", "baz"]
  platform: [linux, macos]
  pipeline: false

- command: "sport i $(< /tmp/baz.list)"
  description: "install list of packages from file"
  keywords: ["sport", "packaging", "install", "list", "packages", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "sport k foo"
  description: "check if package is installed"
  keywords: ["sport", "packaging", "check", "package", "installed"]
  platform: [linux, macos]
  pipeline: false

- command: "sqlite3 <database>"
  description: "create database and launch interactive shell"
  keywords: ["sqlite3", "database", "create", "launch", "interactive", "shell"]
  platform: [linux, macos]
  pipeline: false

- command: "sqlite3 <database> \"create table os(id integer primary key, name text, year integer);\""
  description: "create table"
  keywords: ["sqlite3", "database", "create", "table"]
  platform: [linux, macos]
  pipeline: false

- command: "sqlite3 <database> \"insert into 'os' values(1,'linux',1991);\""
  description: "insert data"
  keywords: ["sqlite3", "database", "insert", "data"]
  platform: [linux, macos]
  pipeline: false

- command: "sqlite3 <database> \".tables\""
  description: "list tables"
  keywords: ["sqlite3", "database", "list", "tables"]
  platform: [linux, macos]
  pipeline: false

- command: "sqlite3 <database> \".schema 'os'\""
  description: "describe table"
  keywords: ["sqlite3", "database", "describe", "table"]
  platform: [linux, macos]
  pipeline: false

- command: "sqlite3 <database> \"select * from 'os';\""
  description: "view records in table"
  keywords: ["sqlite3", "database", "view", "records", "table"]
  platform: [linux, macos]
  pipeline: false

- command: "sqlite3 <database> \"select * from 'os' where year='1991';\""
  description: "view records in table conditionally"
  keywords: ["sqlite3", "database", "view", "records", "table", "conditionally"]
  platform: [linux, macos]
  pipeline: false

- command: "sqlite3 <database> \"select * from 'os' where year like '19%';\""
  description: "view records with fuzzy matching"
  keywords: ["sqlite3", "database", "view", "records", "fuzzy", "matching"]
  platform: [linux, macos]
  pipeline: false

- command: "sqlite3 <database> \".import /path/to/city.csv cities\""
  description: "create a table named `cities` and import a csv into it"
  keywords: ["sqlite3", "database", "create", "table", "named", "`cities`", "import", "csv", "into"]
  platform: [linux, macos]
  pipeline: false

- command: "ssh -i <pemfile> <user>@<host>"
  description: "ssh via pem file (which normally needs 0600 permissions)"
  keywords: ["ssh", "via", "pem", "file", "(which", "normally", "needs", "0600", "permissions)"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh -p <port> <user>@<host>"
  description: "connect on a non-standard port"
  keywords: ["ssh", "connect", "non-standard", "port"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh -A <user>@<host>"
  description: "connect and forward the authentication agent"
  keywords: ["ssh", "connect", "forward", "authentication", "agent"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh -t <user>@<host> 'the-remote-command'"
  description: "execute a command on a remote server"
  keywords: ["ssh", "execute", "command", "remote", "server"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh -oKeXAlgorithms=+diffie-hellman-group-exchange-sha1 <user>@<server>"
  description: "connect to a host with a specific key exchange algorithm"
  keywords: ["ssh", "connect", "host", "specific", "key", "exchange", "algorithm"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh -X <user>@<host>"
  description: "tunnel an x session over SSH"
  keywords: ["ssh", "tunnel", "session", "over"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh -X -t <user>@<host> 'chromium-browser'"
  description: "launch a specific x application over SSH"
  keywords: ["ssh", "launch", "specific", "application", "over"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh -qND <port> <user>@<host>"
  description: "create a SOCKS proxy on localhost and <port>"
  keywords: ["ssh", "create", "socks", "proxy", "localhost", "<port>"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh -o \"ProxyCommand nc -x 127.0.0.1:9999 -X 4 %h %p\" <user>@<host>"
  description: "tunnel an ssh session over the SOCKS proxy on localhost and port 9999"
  keywords: ["ssh", "tunnel", "session", "over", "socks", "proxy", "localhost", "port", "9999"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh <user>@<host> \"cd /var/www/Shared/; tar zcf - asset1 asset2\" | tar zxf -"
  description: "copy files and folders through ssh from remote host to pwd with tar.gz"
  keywords: ["ssh", "copy", "files", "folders", "through", "remote", "host", "pwd", "tar.gz"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: true

- command: "sshfs <user>@<host>:/path/to/folder /path/to/mount/point"
  description: "mount folder/filesystem through SSH"
  keywords: ["ssh", "mount", "folder/filesystem", "through"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-add <keyfile>"
  description: "add private key"
  keywords: ["ssh-add", "ssh", "add", "private", "key"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-add -K"
  description: "load resident keys from FIDO2 authenticator"
  keywords: ["ssh-add", "ssh", "load", "resident", "keys", "fido2", "authenticator"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-add -K ~/.ssh/github_rsa"
  description: "store a GitHub SSH passphrase in your keychain"
  keywords: ["ssh-add", "ssh", "store", "github", "passphrase", "your", "keychain"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-add -L"
  description: "list all public keys"
  keywords: ["ssh-add", "ssh", "list", "all", "public", "keys"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-add -l"
  description: "list fingerprints of all keys"
  keywords: ["ssh-add", "ssh", "list", "fingerprints", "all", "keys"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-add -d <keyfile>"
  description: "delete key"
  keywords: ["ssh-add", "ssh", "delete", "key"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-add -D"
  description: "delete all keys"
  keywords: ["ssh-add", "ssh", "delete", "all", "keys"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-copy-id <user>@<host>"
  description: "copy your keys listed in `ssh-add -L` to a remote host"
  keywords: ["ssh-copy-id", "ssh", "copy", "your", "keys", "listed", "`ssh-add", "-l`", "remote", "host"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-copy-id <user>@<host> -p 2222"
  description: "copy the keys to a remote host on a non-standard port"
  keywords: ["ssh-copy-id", "ssh", "copy", "keys", "remote", "host", "non-standard", "port"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-copy-id -i ~/.ssh/a_public_key.pub \"username@host -p 2222\""
  description: "copy one single public key to a remote host on a non-standard port"
  keywords: ["ssh-copy-id", "ssh", "copy", "one", "single", "public", "key", "remote", "host", "non-standard", "port"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-keygen -t rsa"
  description: "generate an SSH key"
  keywords: ["ssh-keygen", "ssh", "generate", "key"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-keygen -t rsa -b 4096"
  description: "generate a 4096-bit SSH key"
  keywords: ["ssh-keygen", "ssh", "generate", "4096-bit", "key"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-keygen -t ed25519-sk"
  description: "generate a FIDO/U2F token-backed key"
  keywords: ["ssh-keygen", "ssh", "generate", "fido/u2f", "token-backed", "key"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-keygen -t ed25519-sk -O resident"
  description: "generate a FIDO2 resident key"
  keywords: ["ssh-keygen", "ssh", "generate", "fido2", "resident", "key"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-keygen -p -P <old-passphrase> -N <new-passphrase> -f <keyfile>"
  description: "update a passphrase on a key"
  keywords: ["ssh-keygen", "ssh", "update", "passphrase", "key"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-keygen -p -P <old-passphrase> -N '' -f <keyfile>"
  description: "remove a passphrase on a key"
  keywords: ["ssh-keygen", "ssh", "remove", "passphrase", "key"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-keygen -t rsa -b 4096 -C \"$USER@$HOSTNAME\" -P <passphrase>"
  description: "generate a 4096 bit RSA key with a passphase and comment containing the user and hostname"
  keywords: ["ssh-keygen", "ssh", "generate", "4096", "bit", "rsa", "key", "passphase", "comment", "containing", "user", "hostname"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-keygen -lf <keyfile>"
  description: "print the fingerprint of a public key"
  keywords: ["ssh-keygen", "ssh", "print", "fingerprint", "public", "key"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-keygen -E md5 -lf <keyfile>"
  description: "print the Github-style (MD5) fingerprint of a public key"
  keywords: ["ssh-keygen", "ssh", "print", "github-style", "(md5)", "fingerprint", "public", "key"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-keygen -K"
  description: "download resident keys from a FIDO2 authenticator to the current directory"
  keywords: ["ssh-keygen", "ssh", "download", "resident", "keys", "fido2", "authenticator", "current", "directory"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "ssh-keygen -y -f <private-key-file> > <public-key-file>"
  description: "view the public key associated with a private key"
  keywords: ["ssh-keygen", "ssh", "view", "public", "key", "associated", "private"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "some-command 2>&1"
  description: "redirect stderr to stdout"
  keywords: ["stdout", "redirect", "stderr"]
  platform: [linux, macos]
  pipeline: false

- command: "some-command > <file>"
  description: "redirect stdout to <file>"
  keywords: ["stdout", "redirect", "<file>"]
  platform: [linux, macos]
  pipeline: false

- command: "some-command 2> <file>"
  description: "redirect stderr to <file>"
  keywords: ["stdout", "redirect", "stderr", "<file>"]
  platform: [linux, macos]
  pipeline: false

- command: "some-command > <file> 2>&1"
  description: "redirect all output (stderr and stdout) to file"
  keywords: ["stdout", "redirect", "all", "output", "(stderr", "stdout)", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "strace <command>"
  description: "strace a command"
  keywords: ["strace", "command"]
  platform: [linux, macos]
  pipeline: false

- command: "strace -o <outfile> <command>"
  description: "save the trace to a file"
  keywords: ["strace", "save", "trace", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "strace -e trace=open <command>"
  description: "follow only the open() system call"
  keywords: ["strace", "follow", "only", "open()", "system", "call"]
  platform: [linux, macos]
  pipeline: false

- command: "strace -e trace=file <command>"
  description: "follow all the system calls which open a file"
  keywords: ["strace", "follow", "all", "system", "calls", "which", "open", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "strace -e trace=process <command>"
  description: "follow all the system calls associated with process management"
  keywords: ["strace", "follow", "all", "system", "calls", "associated", "process", "management"]
  platform: [linux, macos]
  pipeline: false

- command: "strace -f <command>"
  description: "follow child processes as they are created"
  keywords: ["strace", "follow", "child", "processes", "they", "created"]
  platform: [linux, macos]
  pipeline: false

- command: "strace -c <command>"
  description: "count time, calls and errors for each system call"
  keywords: ["strace", "count", "time", "calls", "errors", "each", "system", "call"]
  platform: [linux, macos]
  pipeline: false

- command: "strace -p <pid>"
  description: "trace a running process (multiple PIDs can be specified)"
  keywords: ["strace", "trace", "running", "process", "(multiple", "pids", "can", "specified)"]
  platform: [linux, macos]
  pipeline: false

- command: "su <user>"
  description: "switch to another user account"
  keywords: ["su", "switch", "another", "user", "account"]
  platform: [linux, macos]
  pipeline: false

- command: "svn update \"/path\""
  description: "Update working copy from repository"
  keywords: ["svn", "vcs", "update", "working", "copy", "repository"]
  platform: [linux, macos]
  pipeline: false

- command: "svn status"
  description: "Show changed files in working copy"
  keywords: ["svn", "vcs", "show", "changed", "files", "working", "copy"]
  platform: [linux, macos]
  pipeline: false

- command: "svn diff \"/path/filename\""
  description: "Show what changed in local file"
  keywords: ["svn", "vcs", "show", "what", "changed", "local", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "svn add \"path/item\""
  description: "Add files or folders"
  keywords: ["svn", "vcs", "add", "files", "folders"]
  platform: [linux, macos]
  pipeline: false

- command: "svn revert \"/path/file\""
  description: "Revert local uncommited changes"
  keywords: ["svn", "vcs", "revert", "local", "uncommited", "changes"]
  platform: [linux, macos]
  pipeline: false

- command: "svn commit -m \"message\" \"/path\""
  description: "Commit changes to repo"
  keywords: ["svn", "vcs", "commit", "changes", "repo"]
  platform: [linux, macos]
  pipeline: false

- command: "svn help diff"
  description: "Show help for 'svn diff'"
  keywords: ["svn", "vcs", "show", "help", "'svn", "diff'"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl"
  description: "see running processes"
  keywords: ["systemctl", "see", "running", "processes"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl status foo.service"
  description: "check the status of a service"
  keywords: ["systemctl", "check", "status", "service"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl start/restart/stop foo.service"
  description: "start/restart/stop a service"
  keywords: ["systemctl", "start/restart/stop", "service"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl reload foo.service"
  description: "reload a service's configuration"
  keywords: ["systemctl", "reload", "service's", "configuration"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl edit foo.service"
  description: "edit a service's configuration"
  keywords: ["systemctl", "edit", "service's", "configuration"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl daemon-reload"
  description: "reload systemd manager configuration"
  keywords: ["systemctl", "reload", "systemd", "manager", "configuration"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl enable foo.service"
  description: "enable a service to startup on boot"
  keywords: ["systemctl", "enable", "service", "startup", "boot"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl disable foo.service"
  description: "disable a service to startup on boot"
  keywords: ["systemctl", "disable", "service", "startup", "boot"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl --user start/restart/stop emacs.service"
  description: "start/restart/stop per-user service"
  keywords: ["systemctl", "start/restart/stop", "per-user", "service"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl list-units"
  description: "see all active units, add --all for everything"
  keywords: ["systemctl", "see", "all", "active", "units", "add", "--all", "everything"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl list-units -at service"
  description: "see all service units"
  keywords: ["systemctl", "see", "all", "service", "units"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl list-units -t service --state running"
  description: "see filtered units (all running service)"
  keywords: ["systemctl", "see", "filtered", "units", "(all", "running", "service)"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl list-unit-files -at service"
  description: "see all service files, see which are enabled or disabled"
  keywords: ["systemctl", "see", "all", "service", "files", "which", "enabled", "disabled"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl list-units --all --state=inactive"
  description: "list all units with specific status, inactive, active, enabled, running, exited"
  keywords: ["systemctl", "list", "all", "units", "specific", "status", "inactive", "active", "enabled", "running", "exited"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl list-unit-files"
  description: "use systemctl to list all unit files"
  keywords: ["systemctl", "use", "list", "all", "unit", "files"]
  platform: [linux, macos]
  pipeline: false

- command: "journalctl -b"
  description: "see log items from the most recent boot"
  keywords: ["systemctl", "see", "log", "items", "most", "recent", "boot"]
  platform: [linux, macos]
  pipeline: false

- command: "journalctl -k"
  description: "to see only kernal messages, add -b for at the most recent boot"
  keywords: ["systemctl", "see", "only", "kernal", "messages", "add", "most", "recent", "boot"]
  platform: [linux, macos]
  pipeline: false

- command: "journalctl -b -u foo.service"
  description: "get the log entries for a service since boot"
  keywords: ["systemctl", "get", "log", "entries", "service", "since", "boot"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl list-dependencies foo.service"
  description: "list the dependencies of a service"
  keywords: ["systemctl", "list", "dependencies", "service"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl show foo.service"
  description: "see low level details of a service settings on the system"
  keywords: ["systemctl", "see", "low", "level", "details", "service", "settings", "system"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl list-units --type=target"
  description: "list currently loaded targets"
  keywords: ["systemctl", "list", "currently", "loaded", "targets"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl isolate foo.target"
  description: "change current target"
  keywords: ["systemctl", "change", "current", "target"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl enable foo.target"
  description: "change default target"
  keywords: ["systemctl", "change", "default", "target"]
  platform: [linux, macos]
  pipeline: false

- command: "systemd-analyze"
  description: "display process startup time"
  keywords: ["systemd", "display", "process", "startup", "time"]
  platform: [linux, macos]
  pipeline: false

- command: "systemd-analyze blame"
  description: "display process startup time at service level"
  keywords: ["systemd", "display", "process", "startup", "time", "service", "level"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl list-units"
  description: "list running units"
  keywords: ["systemd", "list", "running", "units"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl enable foo.service"
  description: "load a unit at startup"
  keywords: ["systemd", "load", "unit", "startup"]
  platform: [linux, macos]
  pipeline: false

- command: "systemctl <start | stop> foo.service"
  description: "start or Stop a unit"
  keywords: ["systemd", "start", "stop", "unit"]
  platform: [linux, macos]
  pipeline: true

- command: "/etc/systemd/system"
  description: "unit file locations"
  keywords: ["systemd", "unit", "file", "locations"]
  platform: [linux, macos]
  pipeline: false

- command: "tail <file>"
  description: "show the last 10 lines of <file>"
  keywords: ["tail", "show", "last", "lines", "<file>"]
  platform: [linux, macos]
  pipeline: false

- command: "tail -n <number> <file>"
  description: "show the last <number> lines of <file>"
  keywords: ["tail", "show", "last", "<number>", "lines", "<file>"]
  platform: [linux, macos]
  pipeline: false

- command: "tail -n +<number> <file>"
  description: "show the last lines of <file> starting with <number>"
  keywords: ["tail", "show", "last", "lines", "<file>", "starting", "<number>"]
  platform: [linux, macos]
  pipeline: false

- command: "tail -c <number> <file>"
  description: "show the last <number> bytes of <file>"
  keywords: ["tail", "show", "last", "<number>", "bytes", "<file>"]
  platform: [linux, macos]
  pipeline: false

- command: "tail -f <file>"
  description: "show the last 10 lines of <file> and to wait for <file> to grow"
  keywords: ["tail", "show", "last", "lines", "<file>", "wait", "grow"]
  platform: [linux, macos]
  pipeline: false

- command: "tar -xvf /path/to/foo.tar"
  description: "extract an uncompressed archive"
  keywords: ["tar", "compression", "extract", "uncompressed", "archive"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "tar -xvf /path/to/foo.tar -C /path/to/destination/"
  description: "extract a .tar in specified directory"
  keywords: ["tar", "compression", "extract", "specified", "directory"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "tar -cvf /path/to/foo.tar /path/to/foo/"
  description: "create an uncompressed archive"
  keywords: ["tar", "compression", "create", "uncompressed", "archive"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "tar -xzvf /path/to/foo.tgz"
  description: "extract a .tgz or .tar.gz archive"
  keywords: ["tar", "compression", "extract", "tgz", "tar.gz", "archive"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "tar -czvf /path/to/foo.tgz /path/to/foo/"
  description: "create a .tgz or .tar.gz archive"
  keywords: ["tar", "compression", "create", "tgz", "tar.gz", "archive"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "tar -tzvf /path/to/foo.tgz"
  description: "list the content of an .tgz or .tar.gz archive"
  keywords: ["tar", "compression", "list", "content", "tgz", "tar.gz", "archive"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "tar -xjvf /path/to/foo.tar.bz2"
  description: "extract a .tar.bz2 archive"
  keywords: ["tar", "compression", "extract", "tar.bz2", "archive"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "tar -cjvf /path/to/foo.tar.bz2 /path/to/foo/"
  description: "create a .tar.bz2 archive"
  keywords: ["tar", "compression", "create", "tar.bz2", "archive"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "tar -tjvf /path/to/foo.tar.bz2"
  description: "list the content of an .tar.bz2 archive"
  keywords: ["tar", "compression", "list", "content", "tar.bz2", "archive"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "tar -czvf /path/to/foo.tgz --exclude=\*.{jpg,gif,png,wmv,flv,tar.gz,zip} /path/to/foo/"
  description: "create a .tgz archive and exclude all jpg,gif,... from the tgz"
  keywords: ["tar", "compression", "create", "tgz", "archive", "exclude", "all", "jpg,gif"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "tar -z ... -> tar -Ipigz ..."
  description: "use parallel (multi-threaded) implementation of compression algorithms"
  keywords: ["tar", "compression", "use", "parallel", "(multi-threaded)", "implementation", "algorithms"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "tar -rf <archive.tar> <new-file-to-append>"
  description: "append a new file to an old tar archive"
  keywords: ["tar", "compression", "append", "new", "file", "old", "archive"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "tcpdump 'tcp[tcpflags] & (tcp-syn|tcp-fin) != 0 and not src and dst net local_addr'"
  description: "display SYN and FIN packets of each TCP session to a host that is not on our network"
  keywords: ["tcpdump", "display", "syn", "fin", "packets", "each", "tcp", "session", "host", "not", "our", "network"]
  platform: [linux, macos]
  pipeline: true

- command: "tcpdump 'tcp port 80 and (((ip[2:2] - ((ip[0]&0xf)<<2)) - ((tcp[12]&0xf0)>>2)) != 0)'"
  description: "display all IPv4 HTTP packets that come or arrive on port 80 and that contain only data (no SYN, FIN no, no packet containing an ACK)"
  keywords: ["tcpdump", "display", "all", "ipv4", "http", "packets", "come", "arrive", "port", "contain", "only", "data", "(no", "syn", "fin", "packet", "containing", "ack)"]
  platform: [linux, macos]
  pipeline: false

- command: "ls | tee <outfile>"
  description: "tee stdout to <outfile>"
  keywords: ["tee", "stdout", "<outfile>"]
  platform: [linux, macos]
  pipeline: true

- command: "ls | tee -a <outfile>"
  description: "tee stdout and append to <outfile>"
  keywords: ["tee", "stdout", "append", "<outfile>"]
  platform: [linux, macos]
  pipeline: true

- command: "ls | tee /dev/tty | xargs printf \"\033[1;34m%s\033[m\n\""
  description: "tee stdout to the terminal, and also pipe it into another program for further processing"
  keywords: ["tee", "stdout", "terminal", "also", "pipe", "into", "another", "program", "further", "processing"]
  platform: [linux, macos]
  pipeline: true

- command: "terraform init -upgrade"
  description: "upgrade your [Terraform providers](https://www.terraform.io/docs/providers/index.html), which are distributed separately from the Terraform binary."
  keywords: ["terraform", "orchestration", "iac", "upgrade", "your", "[terraform", "providers](https://www.terraform.io/docs/providers/index.html)", "which", "distributed", "separately", "binary"]
  platform: [linux, macos]
  pipeline: false

- command: "terraform get -update"
  description: "upgrade your [Terraform modules](https://www.terraform.io/docs/modules/index.html), which are distributed separately from the Terraform binary."
  keywords: ["terraform", "orchestration", "iac", "upgrade", "your", "[terraform", "modules](https://www.terraform.io/docs/modules/index.html)", "which", "distributed", "separately", "binary"]
  platform: [linux, macos]
  pipeline: false

- command: "tmux"
  description: "start tmux"
  keywords: ["tmux", "start"]
  platform: [linux, macos]
  pipeline: false

- command: "Ctrl-b d"
  description: "detach from tmux"
  keywords: ["tmux", "detach"]
  platform: [linux, macos]
  pipeline: false

- command: "tmux attach"
  description: "restore tmux session"
  keywords: ["tmux", "restore", "session"]
  platform: [linux, macos]
  pipeline: false

- command: "tmux attach -d"
  description: "detach an already attached session (great if you are moving devices with different screen resolutions)"
  keywords: ["tmux", "detach", "already", "attached", "session", "(great", "you", "moving", "devices", "different", "screen", "resolutions)"]
  platform: [linux, macos]
  pipeline: false

- command: "tmux ls"
  description: "display session"
  keywords: ["tmux", "display", "session"]
  platform: [linux, macos]
  pipeline: false

- command: "Ctrl-b $"
  description: "rename session"
  keywords: ["tmux", "rename", "session"]
  platform: [linux, macos]
  pipeline: false

- command: "Ctrl-b s"
  description: "switch session"
  keywords: ["tmux", "switch", "session"]
  platform: [linux, macos]
  pipeline: false

- command: "tmux -S /tmp/your_shared_session"
  description: "start a shared session"
  keywords: ["tmux", "start", "shared", "session"]
  platform: [linux, macos]
  pipeline: false

- command: "Ctrl-b ?"
  description: "help screen (Q to quit)"
  keywords: ["tmux", "help", "screen", "quit)"]
  platform: [linux, macos]
  pipeline: false

- command: "Ctrl-b PageUp/PageDown"
  description: "scroll in window"
  keywords: ["tmux", "scroll", "window"]
  platform: [linux, macos]
  pipeline: false

- command: "Ctrl-b : source-file /path/to/file"
  description: "reload configuration file"
  keywords: ["tmux", "reload", "configuration", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "Ctrl-b c"
  description: "create a window"
  keywords: ["tmux", "create", "window"]
  platform: [linux, macos]
  pipeline: false

- command: "Ctrl-b n"
  description: "go next window"
  keywords: ["tmux", "next", "window"]
  platform: [linux, macos]
  pipeline: false

- command: "Ctrl-b x"
  description: "destroy a window"
  keywords: ["tmux", "destroy", "window"]
  platform: [linux, macos]
  pipeline: false

- command: "Ctrl-b [0-9]"
  description: "switch between windows"
  keywords: ["tmux", "switch", "between", "windows"]
  platform: [linux, macos]
  pipeline: false

- command: "Ctrl-b %"
  description: "split windows horizontally"
  keywords: ["tmux", "split", "windows", "horizontally"]
  platform: [linux, macos]
  pipeline: false

- command: "Ctrl-b \""
  description: "split windows vertically"
  keywords: ["tmux", "split", "windows", "vertically"]
  platform: [linux, macos]
  pipeline: false

- command: "Ctrl-b :swap-window -s [0-9] -t [0-9]"
  description: "swap windows"
  keywords: ["tmux", "swap", "windows"]
  platform: [linux, macos]
  pipeline: false

- command: "top -i <interval>"
  description: "update every <interval> samples"
  keywords: ["top", "update", "every", "<interval>", "samples"]
  platform: [linux, macos]
  pipeline: false

- command: "top -s <delay>"
  description: "set the delay between updates to <delay> seconds"
  keywords: ["top", "set", "delay", "between", "updates", "<delay>", "seconds"]
  platform: [linux, macos]
  pipeline: false

- command: "top -a"
  description: "set event counting to accumulative mode"
  keywords: ["top", "set", "event", "counting", "accumulative", "mode"]
  platform: [linux, macos]
  pipeline: false

- command: "top -d"
  description: "set event counting to delta mode"
  keywords: ["top", "set", "event", "counting", "delta", "mode"]
  platform: [linux, macos]
  pipeline: false

- command: "top -e"
  description: "set event counting to absolute mode"
  keywords: ["top", "set", "event", "counting", "absolute", "mode"]
  platform: [linux, macos]
  pipeline: false

- command: "top -F"
  description: "not calculate statistics on shared libraries, also known as frameworks"
  keywords: ["top", "not", "calculate", "statistics", "shared", "libraries", "also", "known", "frameworks"]
  platform: [linux, macos]
  pipeline: false

- command: "top -f"
  description: "calculate statistics on shared libraries, also known as frameworks (default)"
  keywords: ["top", "calculate", "statistics", "shared", "libraries", "also", "known", "frameworks", "(default)"]
  platform: [linux, macos]
  pipeline: false

- command: "top -h"
  description: "print command line usage information and exit"
  keywords: ["top", "print", "command", "line", "usage", "information", "exit"]
  platform: [linux, macos]
  pipeline: false

- command: "top -o <key>"
  description: "order the display by sorting on <key> in descending order"
  keywords: ["top", "order", "display", "sorting", "<key>", "descending"]
  platform: [linux, macos]
  pipeline: false

- command: "touch -d <time> <file>"
  description: "change a file's modification time"
  keywords: ["touch", "change", "file's", "modification", "time"]
  platform: [linux, macos]
  pipeline: false

- command: "touch -r <refrence-file> <target-file>"
  description: "put the timestamp of a file on another"
  keywords: ["touch", "put", "timestamp", "file", "another"]
  platform: [linux, macos]
  pipeline: false

- command: "echo $PATH | tr \":\" \"\n\""
  description: "replace : with a new line"
  keywords: ["tr", "replace", "new", "line"]
  platform: [linux, macos]
  pipeline: true

- command: "echo aabbcc | tr -d \"ab\"         # ouput: cc"
  description: "remove all occurance of \"ab\""
  keywords: ["tr", "remove", "all", "occurance", "\"ab\""]
  platform: [linux, macos]
  pipeline: true

- command: "echo aabbccd | tr -c \"aa\" x       # output: aaxxxxx (no newline)"
  description: "complement \"aa\""
  keywords: ["tr", "complement", "\"aa\""]
  platform: [linux, macos]
  pipeline: true

- command: "echo aabbccd | tr -c \"ab\n\" x    #output: aabbxxx (with newline)"
  description: "complement \"ab\n\""
  keywords: ["tr", "complement", "\"ab\n\""]
  platform: [linux, macos]
  pipeline: true

- command: "echo $PATH | tr -cs \"[:alpha:]\" \"\n\""
  description: "preserve all alpha(-c). \":-[:digit:] etc\" will be translated to \"\n\". sequeeze mode"
  keywords: ["tr", "preserve", "all", "alpha(-c)", "\":-[:digit:]", "etc\"", "translated", "\"\n\"", "sequeeze", "mode"]
  platform: [linux, macos]
  pipeline: true

- command: "echo \"1. /usr/bin\n2. /bin\" | tr -cs \" /[:alpha:]\n\" \"+\""
  description: "convert an ordered list to an unordered list"
  keywords: ["tr", "convert", "ordered", "list", "unordered"]
  platform: [linux, macos]
  pipeline: true

- command: "tr < file-with-nulls -d '\000' > file-without-nulls"
  description: "remove all NULLs"
  keywords: ["tr", "remove", "all", "nulls"]
  platform: [linux, macos]
  pipeline: false

- command: "trash foo bar"
  description: "trash foo and bar"
  keywords: ["trashy", "trash", "foo", "bar"]
  platform: [linux, macos]
  pipeline: false

- command: "trash foo\ bar"
  description: "trash \"foo bar\""
  keywords: ["trashy", "trash", "\"foo", "bar\""]
  platform: [linux, macos]
  pipeline: false

- command: "trash -v --list"
  description: "list files in trash"
  keywords: ["trashy", "list", "files", "trash"]
  platform: [linux, macos]
  pipeline: false

- command: "trash --restore foo"
  description: "restore foo from trash"
  keywords: ["trashy", "restore", "foo", "trash"]
  platform: [linux, macos]
  pipeline: false

- command: "trash --empty"
  description: "empty trash"
  keywords: ["trashy", "empty", "trash"]
  platform: [linux, macos]
  pipeline: false

- command: "tree"
  description: "display a recursive directory tree"
  keywords: ["tree", "display", "recursive", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "tree <dir>"
  description: "make tree output contents from <dir>"
  keywords: ["tree", "make", "output", "contents", "<dir>"]
  platform: [linux, macos]
  pipeline: false

- command: "tree --prune"
  description: "make tree omit any empty directories from the output"
  keywords: ["tree", "make", "omit", "any", "empty", "directories", "output"]
  platform: [linux, macos]
  pipeline: false

- command: "tree -a"
  description: "make tree list *all* files and directories, even hidden ones"
  keywords: ["tree", "make", "list", "*all*", "files", "directories", "even", "hidden", "ones"]
  platform: [linux, macos]
  pipeline: false

- command: "tree -d -L 2"
  description: "list directories only (`-d`), and at a max depth of two levels (`-L`)"
  keywords: ["tree", "list", "directories", "only", "(`-d`)", "max", "depth", "two", "levels", "(`-l`)"]
  platform: [linux, macos]
  pipeline: false

- command: "truncate -s 0 <file>"
  description: "clear the contents from <file>"
  keywords: ["truncate", "clear", "contents", "<file>"]
  platform: [linux, macos]
  pipeline: false

- command: "truncate -s 100 <file>"
  description: "truncate <file> to 100 bytes"
  keywords: ["truncate", "<file>", "100", "bytes"]
  platform: [linux, macos]
  pipeline: false

- command: "truncate -s 100K <file>"
  description: "truncate <file> to 100 KB"
  keywords: ["truncate", "<file>", "100"]
  platform: [linux, macos]
  pipeline: false

- command: "udisksctl info -b <device>"
  description: "get info about a device"
  keywords: ["udisksctl", "get", "info", "about", "device"]
  platform: [linux, macos]
  pipeline: false

- command: "udisksctl mount --block-device <device>"
  description: "mount a device"
  keywords: ["udisksctl", "mount", "device"]
  platform: [linux, macos]
  pipeline: false

- command: "udisksctl unmount --block-device <device>"
  description: "unmount a device"
  keywords: ["udisksctl", "unmount", "device"]
  platform: [linux, macos]
  pipeline: false

- command: "udisksctl help"
  description: "get help"
  keywords: ["udisksctl", "get", "help"]
  platform: [linux, macos]
  pipeline: false

- command: "uname -a"
  description: "print all system information"
  keywords: ["uname", "print", "all", "system", "information"]
  platform: [linux, macos]
  pipeline: false

- command: "uname -n"
  description: "print the hostname"
  keywords: ["uname", "print", "hostname"]
  platform: [linux, macos]
  pipeline: false

- command: "uname -r"
  description: "print the kernel release"
  keywords: ["uname", "print", "kernel", "release"]
  platform: [linux, macos]
  pipeline: false

- command: "uname -v"
  description: "print the kernel version, with more specific information"
  keywords: ["uname", "print", "kernel", "version", "more", "specific", "information"]
  platform: [linux, macos]
  pipeline: false

- command: "uname -m"
  description: "print the hardware instruction set"
  keywords: ["uname", "print", "hardware", "instruction", "set"]
  platform: [linux, macos]
  pipeline: false

- command: "uname -s"
  description: "print the kernel name"
  keywords: ["uname", "print", "kernel", "name"]
  platform: [linux, macos]
  pipeline: false

- command: "uname -o"
  description: "print the operating system"
  keywords: ["uname", "print", "operating", "system"]
  platform: [linux, macos]
  pipeline: false

- command: "sort <file> | uniq"
  description: "show all lines without duplication"
  keywords: ["uniq", "show", "all", "lines", "without", "duplication"]
  platform: [linux, macos]
  pipeline: true

- command: "sort <file> | uniq -u"
  description: "show not duplicated lines"
  keywords: ["uniq", "show", "not", "duplicated", "lines"]
  platform: [linux, macos]
  pipeline: true

- command: "sort <file> | uniq -d"
  description: "show duplicated lines only"
  keywords: ["uniq", "show", "duplicated", "lines", "only"]
  platform: [linux, macos]
  pipeline: true

- command: "sort <file> | uniq -c"
  description: "count all lines"
  keywords: ["uniq", "count", "all", "lines"]
  platform: [linux, macos]
  pipeline: true

- command: "sort <file> | uniq -uc"
  description: "count not duplicated lines"
  keywords: ["uniq", "count", "not", "duplicated", "lines"]
  platform: [linux, macos]
  pipeline: true

- command: "sort <file> | uniq -dc"
  description: "count only duplicated lines"
  keywords: ["uniq", "count", "only", "duplicated", "lines"]
  platform: [linux, macos]
  pipeline: true

- command: "unzip <archive>"
  description: "extract an archive"
  keywords: ["unzip", "compression", "extract", "archive"]
  platform: [linux, macos]
  pipeline: false

- command: "unzip <archive> -d <directory>"
  description: "extract an archive to a specific directory"
  keywords: ["unzip", "compression", "extract", "archive", "specific", "directory"]
  platform: [linux, macos]
  pipeline: false

- command: "unzip -tq <archive>"
  description: "test integrity of archive"
  keywords: ["unzip", "compression", "test", "integrity", "archive"]
  platform: [linux, macos]
  pipeline: false

- command: "unzip -l <archive>"
  description: "list files and directories an archive"
  keywords: ["unzip", "compression", "list", "files", "directories", "archive"]
  platform: [linux, macos]
  pipeline: false

- command: "urpmq -Y <package>"
  description: "search (fuzzy) <package>"
  keywords: ["urpm", "packaging", "search", "(fuzzy)", "<package>"]
  platform: [linux, macos]
  pipeline: false

- command: "rpm -q <package>"
  description: "check if <package> is installed"
  keywords: ["urpm", "packaging", "check", "<package>", "installed"]
  platform: [linux, macos]
  pipeline: false

- command: "urpmi <package>"
  description: "install <package>"
  keywords: ["urpm", "packaging", "install", "<package>"]
  platform: [linux, macos]
  pipeline: false

- command: "urpmi --no-install <package>"
  description: "download <package> without installing it"
  keywords: ["urpm", "packaging", "download", "<package>", "without", "installing"]
  platform: [linux, macos]
  pipeline: false

- command: "urpme <package>"
  description: "uninstall <package>"
  keywords: ["urpm", "packaging", "uninstall", "<package>"]
  platform: [linux, macos]
  pipeline: false

- command: "vagrant init"
  description: "initate Vagrant"
  keywords: ["vagrant", "initate"]
  platform: [linux, macos]
  pipeline: false

- command: "vagrant box add hashicorp/precise32"
  description: "add a box to a vagrant repo"
  keywords: ["vagrant", "add", "box", "repo"]
  platform: [linux, macos]
  pipeline: false

- command: "vagrant up"
  description: "start a vm"
  keywords: ["vagrant", "start"]
  platform: [linux, macos]
  pipeline: false

- command: "vagrant ssh"
  description: "connect to a running instance"
  keywords: ["vagrant", "connect", "running", "instance"]
  platform: [linux, macos]
  pipeline: false

- command: "vagrant halt"
  description: "shut down a vm"
  keywords: ["vagrant", "shut", "down"]
  platform: [linux, macos]
  pipeline: false

- command: "vagrant suspend"
  description: "hibernate a vm"
  keywords: ["vagrant", "hibernate"]
  platform: [linux, macos]
  pipeline: false

- command: "vagrant destroy"
  description: "set a vm to its initial state by cleaning all data"
  keywords: ["vagrant", "set", "initial", "state", "cleaning", "all", "data"]
  platform: [linux, macos]
  pipeline: false

- command: "vagrant reload --provision"
  description: "restart a vm with a new provision script"
  keywords: ["vagrant", "restart", "new", "provision", "script"]
  platform: [linux, macos]
  pipeline: false

- command: ":'<,'>!sort -gk 1 -t ,"
  description: "sort  a visual range on column 1 as a number"
  keywords: ["vim", "sort", "visual", "range", "column", "number"]
  platform: [linux, macos]
  pipeline: false

- command: "virtualenv /path/to/project/env_name"
  description: "create a new environment"
  keywords: ["virtualenv", "create", "new", "environment"]
  platform: [linux, macos]
  pipeline: false

- command: "virtualenv --system-site-package /path/to/project/env_name"
  description: "create a new environment and inherit already installed Python libraries"
  keywords: ["virtualenv", "create", "new", "environment", "inherit", "already", "installed", "python", "libraries"]
  platform: [linux, macos]
  pipeline: false

- command: "virtualenv /path/to/project/env_name -p /usr/bin/python/3.4"
  description: "create a new environment with a given Python interpreter"
  keywords: ["virtualenv", "create", "new", "environment", "given", "python", "interpreter"]
  platform: [linux, macos]
  pipeline: false

- command: "source /path/to/project/env_name/bin/activate"
  description: "activate an environnment"
  keywords: ["virtualenv", "activate", "environnment"]
  platform: [linux, macos]
  pipeline: false

- command: "deactivate"
  description: "quit an environment"
  keywords: ["virtualenv", "quit", "environment"]
  platform: [linux, macos]
  pipeline: false

- command: "pip install --user virtualenvwrapper"
  description: "Virtualenvwrapper (wrapper for virtualenv) installation"
  keywords: ["virtualenv", "virtualenvwrapper", "(wrapper", "virtualenv)", "installation"]
  platform: [linux, macos]
  pipeline: false

- command: "mkvirtualenv env_name"
  description: "create a new environmment (with virtualenvwrapper)"
  keywords: ["virtualenv", "create", "new", "environmment", "(with", "virtualenvwrapper)"]
  platform: [linux, macos]
  pipeline: false

- command: "workon env_name"
  description: "activate environmment (with virtualenvwrapper)"
  keywords: ["virtualenv", "activate", "environmment", "(with", "virtualenvwrapper)"]
  platform: [linux, macos]
  pipeline: false

- command: "deactivate"
  description: "quit environmment (with virtualenvwrapper)"
  keywords: ["virtualenv", "quit", "environmment", "(with", "virtualenvwrapper)"]
  platform: [linux, macos]
  pipeline: false

- command: "rmvirtualenv env_name"
  description: "delete environmment (with virtualenvwrapper)"
  keywords: ["virtualenv", "delete", "environmment", "(with", "virtualenvwrapper)"]
  platform: [linux, macos]
  pipeline: false

- command: "wc -w <file>"
  description: "count the number of words (file or STDIN)"
  keywords: ["wc", "count", "number", "words", "(file", "stdin)"]
  platform: [linux, macos]
  pipeline: false

- command: "wc -l <file>"
  description: "count the number of lines (file or STDIN)"
  keywords: ["wc", "count", "number", "lines", "(file", "stdin)"]
  platform: [linux, macos]
  pipeline: false

- command: "wc -c <file>"
  description: "count the number of bytes (file or STDIN)"
  keywords: ["wc", "count", "number", "bytes", "(file", "stdin)"]
  platform: [linux, macos]
  pipeline: false

- command: "ls | wc -l"
  description: "count files and directories at a given location"
  keywords: ["wc", "count", "files", "directories", "given", "location"]
  platform: [linux, macos]
  pipeline: true

- command: "ls -l | wc -l | xargs"
  description: "if you ever use `wc` in a shell script and need to compare the output with an int you can"
  keywords: ["wc", "you", "ever", "use", "`wc`", "shell", "script", "need", "compare", "output", "int", "can"]
  platform: [linux, macos]
  pipeline: true

- command: "Ctrl-s Ctrl-u"
  description: "set an unread marker on all windows"
  keywords: ["weechat", "set", "unread", "marker", "all", "windows"]
  platform: [linux, macos]
  pipeline: false

- command: "Ctrl-p, Alt-left"
  description: "switch to the left buffer"
  keywords: ["weechat", "switch", "left", "buffer"]
  platform: [linux, macos]
  pipeline: false

- command: "Ctrl-n, Alt-right"
  description: "switch to the right buffer"
  keywords: ["weechat", "switch", "right", "buffer"]
  platform: [linux, macos]
  pipeline: false

- command: "Alt-a"
  description: "switch to the next buffer with activity"
  keywords: ["weechat", "switch", "next", "buffer", "activity"]
  platform: [linux, macos]
  pipeline: false

- command: "Alt-0...9"
  description: "switch buffers"
  keywords: ["weechat", "switch", "buffers"]
  platform: [linux, macos]
  pipeline: false

- command: "F9/F10"
  description: "scroll buffer title"
  keywords: ["weechat", "scroll", "buffer", "title"]
  platform: [linux, macos]
  pipeline: false

- command: "F11/F12"
  description: "scroll nick list"
  keywords: ["weechat", "scroll", "nick", "list"]
  platform: [linux, macos]
  pipeline: false

- command: "wget <url>"
  description: "download <url>"
  keywords: ["wget", "download", "<url>"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "wget <url>..."
  description: "download multiples files with multiple URLs"
  keywords: ["wget", "download", "multiples", "files", "multiple", "urls"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "wget <url> -O <outfile>"
  description: "download <url> and change its name"
  keywords: ["wget", "download", "<url>", "change", "name"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "wget -P <dir> <url>"
  description: "download <url> into <dir>"
  keywords: ["wget", "download", "<url>", "into", "<dir>"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "wget -c <url>"
  description: "continue an aborted downloaded"
  keywords: ["wget", "continue", "aborted", "downloaded"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "wget -i url_list.txt"
  description: "parse a file that contains a list of URLs to fetch each one"
  keywords: ["wget", "parse", "file", "contains", "list", "urls", "fetch", "each", "one"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "wget -pk <url>"
  description: "mirror a whole page locally"
  keywords: ["wget", "mirror", "whole", "page", "locally"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "wget -mk <url>"
  description: "mirror a whole site locally"
  keywords: ["wget", "mirror", "whole", "site", "locally"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "wget http://example.com/files-{1..15}.tar.bz2"
  description: "download files according to a pattern"
  keywords: ["wget", "download", "files", "according", "pattern"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "wget -r -l1 -A.extension http://example.com/directory"
  description: "download all the files in a directory with a specific extension if directory indexing is enabled"
  keywords: ["wget", "download", "all", "files", "directory", "specific", "extension", "indexing", "enabled"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "wget -S --spider -O - <url>"
  description: "download only response headers (-S --spider) and display them on stdout (-O -)."
  keywords: ["wget", "download", "only", "response", "headers", "(-s", "--spider)", "display", "them", "stdout", "(-o"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "wget -U 'toto' <url>"
  description: "change the User-Agent to 'User-Agent: toto'"
  keywords: ["wget", "change", "user-agent", "'user-agent", "toto'"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "wget --limit-rate=500k <url>"
  description: "download a file with specific speed EX:500kb/sec"
  keywords: ["wget", "download", "file", "specific", "speed", "ex:500kb/sec"]
  niche: "networking"
  platform: [linux, macos]
  pipeline: false

- command: "find -name *.pdf | xargs rm -rf"
  description: "Find all file name ending with .pdf and remove them"
  keywords: ["xargs", "find", "all", "file", "name", "ending", "pdf", "remove", "them"]
  platform: [linux, macos]
  pipeline: true

- command: "xmlto pdf mydoc.xml"
  description: "convert DocBook XML to PDF"
  keywords: ["xmlto", "convert", "docbook", "xml", "pdf"]
  platform: [linux, macos]
  pipeline: false

- command: "xmlto -o html-dir html mydoc.xml"
  description: "convert DocBook XML to HTML"
  keywords: ["xmlto", "convert", "docbook", "xml", "html"]
  platform: [linux, macos]
  pipeline: false

- command: "xmlto html-nochunks mydoc.xml"
  description: "convert DocBook XML to single HTML file"
  keywords: ["xmlto", "convert", "docbook", "xml", "single", "html", "file"]
  platform: [linux, macos]
  pipeline: false

- command: "xmlto -m ulink.xsl pdf mydoc.xml"
  description: "modify output with XSL override"
  keywords: ["xmlto", "modify", "output", "xsl", "override"]
  platform: [linux, macos]
  pipeline: false

- command: "xmlto -x mystylesheet.xsl pdf mydoc.xml"
  description: "use non-default xsl"
  keywords: ["xmlto", "use", "non-default", "xsl"]
  platform: [linux, macos]
  pipeline: false

- command: "xrandr --output HDMI2 --auto"
  description: "enable HDMI2 output with maximal resolution"
  keywords: ["xrandr", "enable", "hdmi2", "output", "maximal", "resolution"]
  platform: [linux, macos]
  pipeline: false

- command: "xrandr --output HDMI2 --mode 1280x800"
  description: "enable HDMI2 output with specific resolution"
  keywords: ["xrandr", "enable", "hdmi2", "output", "specific", "resolution"]
  platform: [linux, macos]
  pipeline: false

- command: "xrandr --output HDMI2 --auto --right-of HDMI1"
  description: "enable HDMI2 output next to HDMI1 output"
  keywords: ["xrandr", "enable", "hdmi2", "output", "next", "hdmi1"]
  platform: [linux, macos]
  pipeline: false

- command: "xrandr --output HDMI2 --off"
  description: "disable HDMI2 output"
  keywords: ["xrandr", "disable", "hdmi2", "output"]
  platform: [linux, macos]
  pipeline: false

- command: "echo '42 is the solution' | xxd -p"
  description: "convert bin/string to hex"
  keywords: ["xxd", "convert", "bin/string", "hex"]
  platform: [linux, macos]
  pipeline: true

- command: "echo '34322069732074686520736f6c7574696f6e0a' | xxd -r -p"
  description: "convert hex to bin/string"
  keywords: ["xxd", "convert", "hex", "bin/string"]
  platform: [linux, macos]
  pipeline: true

- command: "yaourt <package>"
  description: "search for <package> and install it"
  keywords: ["yaourt", "packaging", "search", "<package>", "install"]
  platform: [linux, macos]
  pipeline: false

- command: "yaourt -Suya --devel"
  description: "update the local package base and upgrade all out of date package,"
  keywords: ["yaourt", "packaging", "update", "local", "package", "base", "upgrade", "all", "out", "date"]
  platform: [linux, macos]
  pipeline: false

- command: "yaourt -Sb <package>"
  description: "build <package> from source"
  keywords: ["yaourt", "packaging", "build", "<package>", "source"]
  platform: [linux, macos]
  pipeline: false

- command: "youtube-dl -f 22 example.com/watch?v=id"
  description: "download a video in 720p MP4"
  keywords: ["youtube-dl", "download", "video", "720p", "mp4"]
  platform: [linux, macos]
  pipeline: false

- command: "youtube-dl -f 22/45/120"
  description: "download a video in 720p MP4 or WebM or FLV"
  keywords: ["youtube-dl", "download", "video", "720p", "mp4", "webm", "flv"]
  platform: [linux, macos]
  pipeline: false

- command: "youtube-dl -F example.com/watch?v=id"
  description: "list all available formats of a video"
  keywords: ["youtube-dl", "list", "all", "available", "formats", "video"]
  platform: [linux, macos]
  pipeline: false

- command: "youtube-dl -o '%(uploader)s/%(date)s/%(title)s.%(ext)s' example.com/watch?v=id"
  description: "download a video to /$uploader/$date/$title.$ext"
  keywords: ["youtube-dl", "download", "video", "/$uploader/$date/$title.$ext"]
  platform: [linux, macos]
  pipeline: false

- command: "youtube-dl --playlist-start 5 example.com/watch?v=id&list=listid"
  description: "download a video playlist starting from a certain video"
  keywords: ["youtube-dl", "download", "video", "playlist", "starting", "certain"]
  platform: [linux, macos]
  pipeline: false

- command: "youtube-dl -s example.com/watch?v=id"
  description: "simulate a download with youtube-dl"
  keywords: ["youtube-dl", "simulate", "download"]
  platform: [linux, macos]
  pipeline: false

- command: "youtube-dl --extract-audio --audio-format mp3 --audio-quality 0 example.com/watch?v=id"
  description: "download audio in mp3 format with best quality available"
  keywords: ["youtube-dl", "download", "audio", "mp3", "format", "best", "quality", "available"]
  platform: [linux, macos]
  pipeline: false

- command: "yum install <package>"
  description: "install the latest version of a package"
  keywords: ["yum", "packaging", "install", "latest", "version", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "yum localinstall <package>"
  description: "perform a local install"
  keywords: ["yum", "packaging", "perform", "local", "install"]
  platform: [linux, macos]
  pipeline: false

- command: "yum remove <package>"
  description: "remove a package"
  keywords: ["yum", "packaging", "remove", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "yum search <package>"
  description: "search for a package"
  keywords: ["yum", "packaging", "search", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "yum whatprovides <executable>"
  description: "find what package installs an executable"
  keywords: ["yum", "packaging", "find", "what", "package", "installs", "executable"]
  platform: [linux, macos]
  pipeline: false

- command: "yum deplist <package>"
  description: "find the dependencies of a package"
  keywords: ["yum", "packaging", "find", "dependencies", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "yum info <package>"
  description: "find information about a package"
  keywords: ["yum", "packaging", "find", "information", "about", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "yumdownloader --source <package>"
  description: "download the source RPM for a package"
  keywords: ["yum", "packaging", "download", "source", "rpm", "package"]
  platform: [linux, macos]
  pipeline: false

- command: "z foo"
  description: "`cd` to most frecent dir matching `foo`"
  keywords: ["z", "`cd`", "most", "frecent", "dir", "matching", "`foo`"]
  platform: [linux, macos]
  pipeline: false

- command: "z foo bar"
  description: "`cd` to most frecent dir matching `foo`, then `bar`"
  keywords: ["z", "`cd`", "most", "frecent", "dir", "matching", "`foo`", "then", "`bar`"]
  platform: [linux, macos]
  pipeline: false

- command: "z -r foo"
  description: "`cd` to highest ranked dir matching `foo`"
  keywords: ["z", "`cd`", "highest", "ranked", "dir", "matching", "`foo`"]
  platform: [linux, macos]
  pipeline: false

- command: "z -t foo"
  description: "`cd` to most recently accessed dir matching `foo`"
  keywords: ["z", "`cd`", "most", "recently", "accessed", "dir", "matching", "`foo`"]
  platform: [linux, macos]
  pipeline: false

- command: "z -l foo"
  description: "list all dirs matching `foo` - by frecency"
  keywords: ["z", "list", "all", "dirs", "matching", "`foo`", "frecency"]
  platform: [linux, macos]
  pipeline: false

- command: "zip archive.zip file1 directory/"
  description: "create zip file"
  keywords: ["zip", "create", "file"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "zip -r archive.zip directory/"
  description: "create zip file from directory"
  keywords: ["zip", "create", "file", "directory"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "zip -P password archive.zip file1"
  description: "create zip file with password"
  keywords: ["zip", "create", "file", "password"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "zip -FF splitZipfile.zip --out joined.zip"
  description: "join a split zip file (.zip, .z01, .z02, etc)"
  keywords: ["zip", "join", "split", "file", "(.zip", "z01", "z02", "etc)"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "cheat unzip"
  description: "list, test and extract zip archives, see unzip"
  keywords: ["zip", "list", "test", "extract", "archives", "see", "unzip"]
  niche: "compression"
  platform: [linux, macos]
  pipeline: false

- command: "zoneadm -z <zone> halt"
  description: "halt a zone"
  keywords: ["zoneadm", "halt", "zone"]
  platform: [linux, macos]
  pipeline: false

- command: "zoneadm -z <zone> halt"
  description: "delete a zone "
  keywords: ["zoneadm", "delete", "zone"]
  platform: [linux, macos]
  pipeline: false

- command: "zoneadm -z <zone> verify"
  description: "verify a zone"
  keywords: ["zoneadm", "verify", "zone"]
  platform: [linux, macos]
  pipeline: false

- command: "zoneadm -z <zone> install"
  description: "install a zone"
  keywords: ["zoneadm", "install", "zone"]
  platform: [linux, macos]
  pipeline: false

- command: "zoneadm -z <zone> boot"
  description: "boot a zone"
  keywords: ["zoneadm", "boot", "zone"]
  platform: [linux, macos]
  pipeline: false

- command: "zoneadm -z <zone> reboot"
  description: "reboot a zone"
  keywords: ["zoneadm", "reboot", "zone"]
  platform: [linux, macos]
  pipeline: false

- command: "zoneadm list -cv"
  description: "list zones"
  keywords: ["zoneadm", "list", "zones"]
  platform: [linux, macos]
  pipeline: false

